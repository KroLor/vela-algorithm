ARM GAS  /tmp/cc1F1Vcq.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.rodata.Read_Acc.str1.4,"aMS",%progbits,1
  21              		.align	2
  22              	.LC0:
  23 0000 4F555458 		.ascii	"OUTX_L_XL\000"
  23      5F4C5F58 
  23      4C00
  24 000a 0000     		.align	2
  25              	.LC1:
  26 000c 4F555458 		.ascii	"OUTX_H_XL\000"
  26      5F485F58 
  26      4C00
  27 0016 0000     		.align	2
  28              	.LC2:
  29 0018 4F555459 		.ascii	"OUTY_L_XL\000"
  29      5F4C5F58 
  29      4C00
  30 0022 0000     		.align	2
  31              	.LC3:
  32 0024 4F555459 		.ascii	"OUTY_H_XL\000"
  32      5F485F58 
  32      4C00
  33 002e 0000     		.align	2
  34              	.LC4:
  35 0030 4F55545A 		.ascii	"OUTZ_L_XL\000"
  35      5F4C5F58 
  35      4C00
  36 003a 0000     		.align	2
  37              	.LC5:
  38 003c 4F55545A 		.ascii	"OUTZ_H_XL\000"
  38      5F485F58 
  38      4C00
  39              		.section	.text.Read_Acc,"ax",%progbits
  40              		.align	1
  41              		.global	Read_Acc
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  46              	Read_Acc:
ARM GAS  /tmp/cc1F1Vcq.s 			page 2


  47              	.LVL0:
  48              	.LFB137:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "i2c.h"
  22:Core/Src/main.c **** #include "tim.h"
  23:Core/Src/main.c **** #include "usart.h"
  24:Core/Src/main.c **** #include "gpio.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** #include "communication.h"
  27:Core/Src/main.c **** #include "accelerometer.h"
  28:Core/Src/main.c **** #include "barometer.h"
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  32:Core/Src/main.c **** #include <string.h>
  33:Core/Src/main.c **** #include <stdio.h>
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END Includes */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PTD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PD */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PD */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  48:Core/Src/main.c **** /* USER CODE BEGIN PM */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PM */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE BEGIN PV */
  55:Core/Src/main.c **** /* Калибровочные переменные */
ARM GAS  /tmp/cc1F1Vcq.s 			page 3


  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Для температуры */
  58:Core/Src/main.c **** ///uint16_t dig_T1[1];
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PV */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  63:Core/Src/main.c **** void SystemClock_Config(void);
  64:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END PFP */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  69:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** void Read_Acc(double* buffer_xyz)
  72:Core/Src/main.c **** {
  49              		.loc 1 72 1 view -0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 16
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		.loc 1 72 1 is_stmt 0 view .LVU1
  54 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  55              		.cfi_def_cfa_offset 36
  56              		.cfi_offset 4, -36
  57              		.cfi_offset 5, -32
  58              		.cfi_offset 6, -28
  59              		.cfi_offset 7, -24
  60              		.cfi_offset 8, -20
  61              		.cfi_offset 9, -16
  62              		.cfi_offset 10, -12
  63              		.cfi_offset 11, -8
  64              		.cfi_offset 14, -4
  65 0004 89B0     		sub	sp, sp, #36
  66              		.cfi_def_cfa_offset 72
  67 0006 8046     		mov	r8, r0
  73:Core/Src/main.c **** 	uint8_t dev_address = 0b11010100;
  68              		.loc 1 73 2 is_stmt 1 view .LVU2
  69              	.LVL1:
  74:Core/Src/main.c ****   uint16_t raw_val[2];
  70              		.loc 1 74 3 view .LVU3
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** 	send_reg_log(HAL_I2C_Mem_Read(&hi2c1, dev_address, 0x28, I2C_MEMADD_SIZE_8BIT, (uint8_t*)raw_val, 
  71              		.loc 1 76 2 view .LVU4
  72 0008 5D4E     		ldr	r6, .L3+16
  73 000a FF27     		movs	r7, #255
  74 000c 0297     		str	r7, [sp, #8]
  75 000e 0124     		movs	r4, #1
  76 0010 0194     		str	r4, [sp, #4]
  77 0012 0DF11C0B 		add	fp, sp, #28
  78 0016 CDF800B0 		str	fp, [sp]
  79 001a 2346     		mov	r3, r4
  80 001c 2822     		movs	r2, #40
  81 001e D421     		movs	r1, #212
  82 0020 3046     		mov	r0, r6
  83              	.LVL2:
  84              		.loc 1 76 2 is_stmt 0 view .LVU5
ARM GAS  /tmp/cc1F1Vcq.s 			page 4


  85 0022 FFF7FEFF 		bl	HAL_I2C_Mem_Read
  86              	.LVL3:
  87              		.loc 1 76 2 discriminator 1 view .LVU6
  88 0026 5749     		ldr	r1, .L3+20
  89 0028 FFF7FEFF 		bl	send_reg_log
  90              	.LVL4:
  77:Core/Src/main.c **** 	send_reg_log(HAL_I2C_Mem_Read(&hi2c1, dev_address, 0x29, I2C_MEMADD_SIZE_8BIT, (uint8_t*)raw_val+1
  91              		.loc 1 77 2 is_stmt 1 view .LVU7
  92 002c 0297     		str	r7, [sp, #8]
  93 002e 0194     		str	r4, [sp, #4]
  94 0030 0DF11D0A 		add	r10, sp, #29
  95 0034 CDF800A0 		str	r10, [sp]
  96 0038 2346     		mov	r3, r4
  97 003a 2922     		movs	r2, #41
  98 003c D421     		movs	r1, #212
  99 003e 3046     		mov	r0, r6
 100 0040 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 101              	.LVL5:
 102              		.loc 1 77 2 is_stmt 0 discriminator 1 view .LVU8
 103 0044 5049     		ldr	r1, .L3+24
 104 0046 FFF7FEFF 		bl	send_reg_log
 105              	.LVL6:
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   int16_t x_val = raw_val[1] << 8 | raw_val[0];
 106              		.loc 1 79 3 is_stmt 1 view .LVU9
 107              		.loc 1 79 26 is_stmt 0 view .LVU10
 108 004a BDF81E50 		ldrh	r5, [sp, #30]
 109              		.loc 1 79 35 view .LVU11
 110 004e 2D02     		lsls	r5, r5, #8
 111 0050 2DB2     		sxth	r5, r5
 112              		.loc 1 79 44 view .LVU12
 113 0052 BDF91C30 		ldrsh	r3, [sp, #28]
 114              		.loc 1 79 11 view .LVU13
 115 0056 1D43     		orrs	r5, r5, r3
 116              	.LVL7:
  80:Core/Src/main.c ****   raw_val[0] = raw_val[1] = 0;
 117              		.loc 1 80 3 is_stmt 1 view .LVU14
 118              		.loc 1 80 27 is_stmt 0 view .LVU15
 119 0058 4FF00009 		mov	r9, #0
 120 005c ADF81E90 		strh	r9, [sp, #30]	@ movhi
 121              		.loc 1 80 14 view .LVU16
 122 0060 ADF81C90 		strh	r9, [sp, #28]	@ movhi
  81:Core/Src/main.c ****   
  82:Core/Src/main.c **** 	send_reg_log(HAL_I2C_Mem_Read(&hi2c1, dev_address, 0x2A, I2C_MEMADD_SIZE_8BIT, (uint8_t*)raw_val, 
 123              		.loc 1 82 2 is_stmt 1 view .LVU17
 124 0064 0297     		str	r7, [sp, #8]
 125 0066 0194     		str	r4, [sp, #4]
 126 0068 CDF800B0 		str	fp, [sp]
 127 006c 2346     		mov	r3, r4
 128 006e 2A22     		movs	r2, #42
 129 0070 D421     		movs	r1, #212
 130 0072 3046     		mov	r0, r6
 131 0074 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 132              	.LVL8:
 133              		.loc 1 82 2 is_stmt 0 discriminator 1 view .LVU18
 134 0078 4449     		ldr	r1, .L3+28
 135 007a FFF7FEFF 		bl	send_reg_log
ARM GAS  /tmp/cc1F1Vcq.s 			page 5


 136              	.LVL9:
  83:Core/Src/main.c **** 	send_reg_log(HAL_I2C_Mem_Read(&hi2c1, dev_address, 0x2B, I2C_MEMADD_SIZE_8BIT, (uint8_t*)raw_val+1
 137              		.loc 1 83 2 is_stmt 1 view .LVU19
 138 007e 0297     		str	r7, [sp, #8]
 139 0080 0194     		str	r4, [sp, #4]
 140 0082 CDF800A0 		str	r10, [sp]
 141 0086 2346     		mov	r3, r4
 142 0088 2B22     		movs	r2, #43
 143 008a D421     		movs	r1, #212
 144 008c 3046     		mov	r0, r6
 145 008e FFF7FEFF 		bl	HAL_I2C_Mem_Read
 146              	.LVL10:
 147              		.loc 1 83 2 is_stmt 0 discriminator 1 view .LVU20
 148 0092 3F49     		ldr	r1, .L3+32
 149 0094 FFF7FEFF 		bl	send_reg_log
 150              	.LVL11:
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   int16_t y_val = raw_val[1] << 8 | raw_val[0];
 151              		.loc 1 85 3 is_stmt 1 view .LVU21
 152              		.loc 1 85 26 is_stmt 0 view .LVU22
 153 0098 BDF81E30 		ldrh	r3, [sp, #30]
 154              		.loc 1 85 35 view .LVU23
 155 009c 1B02     		lsls	r3, r3, #8
 156 009e 1BB2     		sxth	r3, r3
 157              		.loc 1 85 44 view .LVU24
 158 00a0 BDF91C20 		ldrsh	r2, [sp, #28]
 159              		.loc 1 85 11 view .LVU25
 160 00a4 1343     		orrs	r3, r3, r2
 161 00a6 0593     		str	r3, [sp, #20]
 162              	.LVL12:
  86:Core/Src/main.c ****   raw_val[0] = raw_val[1] = 0;
 163              		.loc 1 86 3 is_stmt 1 view .LVU26
 164              		.loc 1 86 27 is_stmt 0 view .LVU27
 165 00a8 ADF81E90 		strh	r9, [sp, #30]	@ movhi
 166              		.loc 1 86 14 view .LVU28
 167 00ac ADF81C90 		strh	r9, [sp, #28]	@ movhi
  87:Core/Src/main.c ****   
  88:Core/Src/main.c **** 	send_reg_log(HAL_I2C_Mem_Read(&hi2c1, dev_address, 0x2C, I2C_MEMADD_SIZE_8BIT, (uint8_t*)raw_val, 
 168              		.loc 1 88 2 is_stmt 1 view .LVU29
 169 00b0 0297     		str	r7, [sp, #8]
 170 00b2 0194     		str	r4, [sp, #4]
 171 00b4 CDF800B0 		str	fp, [sp]
 172 00b8 2346     		mov	r3, r4
 173 00ba 2C22     		movs	r2, #44
 174 00bc D421     		movs	r1, #212
 175 00be 3046     		mov	r0, r6
 176 00c0 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 177              	.LVL13:
 178              		.loc 1 88 2 is_stmt 0 discriminator 1 view .LVU30
 179 00c4 3349     		ldr	r1, .L3+36
 180 00c6 FFF7FEFF 		bl	send_reg_log
 181              	.LVL14:
  89:Core/Src/main.c **** 	send_reg_log(HAL_I2C_Mem_Read(&hi2c1, dev_address, 0x2D, I2C_MEMADD_SIZE_8BIT, (uint8_t*)raw_val+1
 182              		.loc 1 89 2 is_stmt 1 view .LVU31
 183 00ca 0297     		str	r7, [sp, #8]
 184 00cc 0194     		str	r4, [sp, #4]
 185 00ce CDF800A0 		str	r10, [sp]
ARM GAS  /tmp/cc1F1Vcq.s 			page 6


 186 00d2 2346     		mov	r3, r4
 187 00d4 2D22     		movs	r2, #45
 188 00d6 D421     		movs	r1, #212
 189 00d8 3046     		mov	r0, r6
 190 00da FFF7FEFF 		bl	HAL_I2C_Mem_Read
 191              	.LVL15:
 192              		.loc 1 89 2 is_stmt 0 discriminator 1 view .LVU32
 193 00de 2E49     		ldr	r1, .L3+40
 194 00e0 FFF7FEFF 		bl	send_reg_log
 195              	.LVL16:
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   int16_t z_val = raw_val[1] << 8 | raw_val[0];
 196              		.loc 1 91 3 is_stmt 1 view .LVU33
 197              		.loc 1 91 26 is_stmt 0 view .LVU34
 198 00e4 BDF81E40 		ldrh	r4, [sp, #30]
 199              		.loc 1 91 35 view .LVU35
 200 00e8 2402     		lsls	r4, r4, #8
 201 00ea 24B2     		sxth	r4, r4
 202              		.loc 1 91 44 view .LVU36
 203 00ec BDF91C30 		ldrsh	r3, [sp, #28]
 204              		.loc 1 91 11 view .LVU37
 205 00f0 1C43     		orrs	r4, r4, r3
 206              	.LVL17:
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   buffer_xyz[0] = ((double)x_val * 0.488/1000)*9.81;
 207              		.loc 1 93 3 is_stmt 1 view .LVU38
 208              		.loc 1 93 20 is_stmt 0 view .LVU39
 209 00f2 2846     		mov	r0, r5
 210 00f4 FFF7FEFF 		bl	__aeabi_i2d
 211              	.LVL18:
 212              		.loc 1 93 34 view .LVU40
 213 00f8 1DA3     		adr	r3, .L3
 214 00fa D3E90023 		ldrd	r2, [r3]
 215 00fe FFF7FEFF 		bl	__aeabi_dmul
 216              	.LVL19:
 217              		.loc 1 93 41 view .LVU41
 218 0102 0022     		movs	r2, #0
 219 0104 254B     		ldr	r3, .L3+44
 220 0106 FFF7FEFF 		bl	__aeabi_ddiv
 221              	.LVL20:
 222              		.loc 1 93 47 view .LVU42
 223 010a 1BA3     		adr	r3, .L3+8
 224 010c D3E90023 		ldrd	r2, [r3]
 225 0110 FFF7FEFF 		bl	__aeabi_dmul
 226              	.LVL21:
 227              		.loc 1 93 17 view .LVU43
 228 0114 C8E90001 		strd	r0, [r8]
  94:Core/Src/main.c ****   buffer_xyz[1] = ((double)y_val * 0.488/1000)*9.81;
 229              		.loc 1 94 3 is_stmt 1 view .LVU44
 230              		.loc 1 94 20 is_stmt 0 view .LVU45
 231 0118 0598     		ldr	r0, [sp, #20]
 232 011a FFF7FEFF 		bl	__aeabi_i2d
 233              	.LVL22:
 234              		.loc 1 94 34 view .LVU46
 235 011e 14A3     		adr	r3, .L3
 236 0120 D3E90023 		ldrd	r2, [r3]
 237 0124 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  /tmp/cc1F1Vcq.s 			page 7


 238              	.LVL23:
 239              		.loc 1 94 41 view .LVU47
 240 0128 0022     		movs	r2, #0
 241 012a 1C4B     		ldr	r3, .L3+44
 242 012c FFF7FEFF 		bl	__aeabi_ddiv
 243              	.LVL24:
 244              		.loc 1 94 47 view .LVU48
 245 0130 11A3     		adr	r3, .L3+8
 246 0132 D3E90023 		ldrd	r2, [r3]
 247 0136 FFF7FEFF 		bl	__aeabi_dmul
 248              	.LVL25:
 249              		.loc 1 94 17 view .LVU49
 250 013a C8E90201 		strd	r0, [r8, #8]
  95:Core/Src/main.c ****   buffer_xyz[2] = ((double)z_val * 0.488/1000)*9.81;
 251              		.loc 1 95 3 is_stmt 1 view .LVU50
 252              		.loc 1 95 20 is_stmt 0 view .LVU51
 253 013e 2046     		mov	r0, r4
 254 0140 FFF7FEFF 		bl	__aeabi_i2d
 255              	.LVL26:
 256              		.loc 1 95 34 view .LVU52
 257 0144 0AA3     		adr	r3, .L3
 258 0146 D3E90023 		ldrd	r2, [r3]
 259 014a FFF7FEFF 		bl	__aeabi_dmul
 260              	.LVL27:
 261              		.loc 1 95 41 view .LVU53
 262 014e 0022     		movs	r2, #0
 263 0150 124B     		ldr	r3, .L3+44
 264 0152 FFF7FEFF 		bl	__aeabi_ddiv
 265              	.LVL28:
 266              		.loc 1 95 47 view .LVU54
 267 0156 08A3     		adr	r3, .L3+8
 268 0158 D3E90023 		ldrd	r2, [r3]
 269 015c FFF7FEFF 		bl	__aeabi_dmul
 270              	.LVL29:
 271              		.loc 1 95 17 view .LVU55
 272 0160 C8E90401 		strd	r0, [r8, #16]
  96:Core/Src/main.c **** }
 273              		.loc 1 96 1 view .LVU56
 274 0164 09B0     		add	sp, sp, #36
 275              		.cfi_def_cfa_offset 36
 276              		@ sp needed
 277 0166 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 278              	.LVL30:
 279              	.L4:
 280              		.loc 1 96 1 view .LVU57
 281 016a 00BFAFF3 		.align	3
 281      0080
 282              	.L3:
 283 0170 08AC1C5A 		.word	1511828488
 284 0174 643BDF3F 		.word	1071594340
 285 0178 1F85EB51 		.word	1374389535
 286 017c B89E2340 		.word	1076076216
 287 0180 00000000 		.word	hi2c1
 288 0184 00000000 		.word	.LC0
 289 0188 0C000000 		.word	.LC1
 290 018c 18000000 		.word	.LC2
 291 0190 24000000 		.word	.LC3
ARM GAS  /tmp/cc1F1Vcq.s 			page 8


 292 0194 30000000 		.word	.LC4
 293 0198 3C000000 		.word	.LC5
 294 019c 00408F40 		.word	1083129856
 295              		.cfi_endproc
 296              	.LFE137:
 298              		.section	.text.Error_Handler,"ax",%progbits
 299              		.align	1
 300              		.global	Error_Handler
 301              		.syntax unified
 302              		.thumb
 303              		.thumb_func
 305              	Error_Handler:
 306              	.LFB140:
  97:Core/Src/main.c **** 
  98:Core/Src/main.c **** /* USER CODE END 0 */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** /**
 101:Core/Src/main.c ****   * @brief  The application entry point.
 102:Core/Src/main.c ****   * @retval int
 103:Core/Src/main.c ****   */
 104:Core/Src/main.c **** int main(void)
 105:Core/Src/main.c **** {
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 108:Core/Src/main.c ****   char data[100] =  "F411 says: I'm alive\n\r\0";
 109:Core/Src/main.c ****   send_message(data, PRIORITY_HIGH);
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* USER CODE END 1 */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 116:Core/Src/main.c ****   HAL_Init();
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* USER CODE END Init */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* Configure the system clock */
 123:Core/Src/main.c ****   SystemClock_Config();
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* USER CODE END SysInit */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* Initialize all configured peripherals */
 130:Core/Src/main.c ****   MX_GPIO_Init();
 131:Core/Src/main.c ****   MX_I2C1_Init();
 132:Core/Src/main.c ****   MX_USART1_UART_Init();
 133:Core/Src/main.c ****   MX_TIM1_Init();
 134:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 135:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   char str_buf[100] =  "--------------------LSM6DS33 init--------------------------\n\r";
 138:Core/Src/main.c ****   send_message(str_buf, PRIORITY_HIGH);
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   if (check_acc_identity())
ARM GAS  /tmp/cc1F1Vcq.s 			page 9


 141:Core/Src/main.c ****   {
 142:Core/Src/main.c **** 		char buffer [100] = "ACCELEROMETER READ SUCCESSFULLY (nice)\n\r";
 143:Core/Src/main.c **** 		send_message(buffer, PRIORITY_HIGH);
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****     acc_power_on();
 146:Core/Src/main.c ****   }
 147:Core/Src/main.c ****   else
 148:Core/Src/main.c ****   {
 149:Core/Src/main.c **** 		char buffer [50] = "ACCELEROMETER READ ERROR\n\r";
 150:Core/Src/main.c **** 		send_message(buffer, PRIORITY_HIGH);
 151:Core/Src/main.c ****   }
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   if (check_barometer_identity())
 154:Core/Src/main.c ****   {
 155:Core/Src/main.c **** 		char buffer [28] = "BMP READ SUCCESSFULLY\n\r";
 156:Core/Src/main.c **** 		send_message(buffer, PRIORITY_HIGH);
 157:Core/Src/main.c ****   }
 158:Core/Src/main.c ****   else
 159:Core/Src/main.c ****   {
 160:Core/Src/main.c **** 		char buffer [20] = "BMP READ ERROR\n\r";
 161:Core/Src/main.c **** 		send_message(buffer, PRIORITY_HIGH);
 162:Core/Src/main.c ****   }
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   barometer_power_on();
 165:Core/Src/main.c ****   
 166:Core/Src/main.c ****   /* USER CODE END 2 */
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* Infinite loop */
 169:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 170:Core/Src/main.c ****   while (1)
 171:Core/Src/main.c ****   {
 172:Core/Src/main.c ****     HAL_Delay(1000);
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****     char data[100] =  "------------------------BMP----------------------\n\r\0";
 175:Core/Src/main.c ****     send_message(data, PRIORITY_HIGH);
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****     int32_t actual_temp = read_temp();
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****     char temp_str[100]; 
 180:Core/Src/main.c ****     sprintf(temp_str, "Temperature: %.2f Celsius\n\n\r", ((float)actual_temp)/100);
 181:Core/Src/main.c ****     send_message(temp_str, PRIORITY_HIGH);
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****     uint32_t actual_pressure = read_pressure();
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****     char pressure_str[100];
 186:Core/Src/main.c ****     sprintf(pressure_str, "Pressure: %.4f Pa\n\n\r",  ((float)actual_pressure)/256);
 187:Core/Src/main.c ****     send_message(pressure_str, PRIORITY_HIGH);
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****     char data1[100] =  "------------------------ACC----------------------\n\r\0";
 190:Core/Src/main.c ****     send_message(data1, PRIORITY_HIGH);
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****     double acc_vals[3];
 193:Core/Src/main.c ****     Read_Acc(acc_vals);
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****     char acc_str[100]; 
 196:Core/Src/main.c ****     sprintf(acc_str, "Acceleration: (%0.4f, %0.4f, %0.4f) \n\n\r", acc_vals[0], acc_vals[1], acc_va
 197:Core/Src/main.c ****     send_message(acc_str, PRIORITY_HIGH);
ARM GAS  /tmp/cc1F1Vcq.s 			page 10


 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****     /* USER CODE END WHILE */
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 202:Core/Src/main.c ****   }
 203:Core/Src/main.c ****   /* USER CODE END 3 */
 204:Core/Src/main.c **** }
 205:Core/Src/main.c **** 
 206:Core/Src/main.c **** /**
 207:Core/Src/main.c ****   * @brief System Clock Configuration
 208:Core/Src/main.c ****   * @retval None
 209:Core/Src/main.c ****   */
 210:Core/Src/main.c **** void SystemClock_Config(void)
 211:Core/Src/main.c **** {
 212:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 213:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 216:Core/Src/main.c ****   */
 217:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 218:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 221:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 222:Core/Src/main.c ****   */
 223:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 224:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 225:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 226:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 227:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 228:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 229:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 100;
 230:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 231:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 232:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 233:Core/Src/main.c ****   {
 234:Core/Src/main.c ****     Error_Handler();
 235:Core/Src/main.c ****   }
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 238:Core/Src/main.c ****   */
 239:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 240:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 241:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 242:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 243:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 244:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 247:Core/Src/main.c ****   {
 248:Core/Src/main.c ****     Error_Handler();
 249:Core/Src/main.c ****   }
 250:Core/Src/main.c **** }
 251:Core/Src/main.c **** 
 252:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 253:Core/Src/main.c **** 
 254:Core/Src/main.c **** /* USER CODE END 4 */
ARM GAS  /tmp/cc1F1Vcq.s 			page 11


 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** /**
 257:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 258:Core/Src/main.c ****   * @retval None
 259:Core/Src/main.c ****   */
 260:Core/Src/main.c **** void Error_Handler(void)
 261:Core/Src/main.c **** {
 307              		.loc 1 261 1 is_stmt 1 view -0
 308              		.cfi_startproc
 309              		@ Volatile: function does not return.
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 0, uses_anonymous_args = 0
 312              		@ link register save eliminated.
 262:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 263:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 264:Core/Src/main.c ****   __disable_irq();
 313              		.loc 1 264 3 view .LVU59
 314              	.LBB4:
 315              	.LBI4:
 316              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cc1F1Vcq.s 			page 12


  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
ARM GAS  /tmp/cc1F1Vcq.s 			page 13


  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
ARM GAS  /tmp/cc1F1Vcq.s 			page 14


 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
ARM GAS  /tmp/cc1F1Vcq.s 			page 15


 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
ARM GAS  /tmp/cc1F1Vcq.s 			page 16


 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
ARM GAS  /tmp/cc1F1Vcq.s 			page 17


 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
ARM GAS  /tmp/cc1F1Vcq.s 			page 18


 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
ARM GAS  /tmp/cc1F1Vcq.s 			page 19


 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
ARM GAS  /tmp/cc1F1Vcq.s 			page 20


 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc1F1Vcq.s 			page 21


 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/cc1F1Vcq.s 			page 22


 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
ARM GAS  /tmp/cc1F1Vcq.s 			page 23


 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
ARM GAS  /tmp/cc1F1Vcq.s 			page 24


 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/cc1F1Vcq.s 			page 25


 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc1F1Vcq.s 			page 26


 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
ARM GAS  /tmp/cc1F1Vcq.s 			page 27


 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
ARM GAS  /tmp/cc1F1Vcq.s 			page 28


 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 317              		.loc 2 960 27 view .LVU60
 318              	.LBB5:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 319              		.loc 2 962 3 view .LVU61
 320              		.syntax unified
 321              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 322 0000 72B6     		cpsid i
 323              	@ 0 "" 2
 324              		.thumb
 325              		.syntax unified
 326              	.L6:
 327              	.LBE5:
 328              	.LBE4:
 265:Core/Src/main.c ****   while (1)
 329              		.loc 1 265 3 view .LVU62
 266:Core/Src/main.c ****   {
 267:Core/Src/main.c ****   }
 330              		.loc 1 267 3 view .LVU63
 265:Core/Src/main.c ****   while (1)
 331              		.loc 1 265 9 view .LVU64
 332 0002 FEE7     		b	.L6
 333              		.cfi_endproc
 334              	.LFE140:
 336              		.section	.text.SystemClock_Config,"ax",%progbits
 337              		.align	1
 338              		.global	SystemClock_Config
 339              		.syntax unified
 340              		.thumb
 341              		.thumb_func
 343              	SystemClock_Config:
 344              	.LFB139:
 211:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 345              		.loc 1 211 1 view -0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 80
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349 0000 10B5     		push	{r4, lr}
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 4, -8
 352              		.cfi_offset 14, -4
 353 0002 94B0     		sub	sp, sp, #80
 354              		.cfi_def_cfa_offset 88
 212:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 355              		.loc 1 212 3 view .LVU66
 212:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
ARM GAS  /tmp/cc1F1Vcq.s 			page 29


 356              		.loc 1 212 22 is_stmt 0 view .LVU67
 357 0004 08AC     		add	r4, sp, #32
 358 0006 3022     		movs	r2, #48
 359 0008 0021     		movs	r1, #0
 360 000a 2046     		mov	r0, r4
 361 000c FFF7FEFF 		bl	memset
 362              	.LVL31:
 213:Core/Src/main.c **** 
 363              		.loc 1 213 3 is_stmt 1 view .LVU68
 213:Core/Src/main.c **** 
 364              		.loc 1 213 22 is_stmt 0 view .LVU69
 365 0010 0023     		movs	r3, #0
 366 0012 0393     		str	r3, [sp, #12]
 367 0014 0493     		str	r3, [sp, #16]
 368 0016 0593     		str	r3, [sp, #20]
 369 0018 0693     		str	r3, [sp, #24]
 370 001a 0793     		str	r3, [sp, #28]
 217:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 371              		.loc 1 217 3 is_stmt 1 view .LVU70
 372              	.LBB6:
 217:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 373              		.loc 1 217 3 view .LVU71
 374 001c 0193     		str	r3, [sp, #4]
 217:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 375              		.loc 1 217 3 view .LVU72
 376 001e 1E4A     		ldr	r2, .L13
 377 0020 116C     		ldr	r1, [r2, #64]
 378 0022 41F08051 		orr	r1, r1, #268435456
 379 0026 1164     		str	r1, [r2, #64]
 217:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 380              		.loc 1 217 3 view .LVU73
 381 0028 126C     		ldr	r2, [r2, #64]
 382 002a 02F08052 		and	r2, r2, #268435456
 383 002e 0192     		str	r2, [sp, #4]
 217:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 384              		.loc 1 217 3 view .LVU74
 385 0030 019A     		ldr	r2, [sp, #4]
 386              	.LBE6:
 217:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 387              		.loc 1 217 3 view .LVU75
 218:Core/Src/main.c **** 
 388              		.loc 1 218 3 view .LVU76
 389              	.LBB7:
 218:Core/Src/main.c **** 
 390              		.loc 1 218 3 view .LVU77
 391 0032 0293     		str	r3, [sp, #8]
 218:Core/Src/main.c **** 
 392              		.loc 1 218 3 view .LVU78
 393 0034 194A     		ldr	r2, .L13+4
 394 0036 1168     		ldr	r1, [r2]
 395 0038 41F44041 		orr	r1, r1, #49152
 396 003c 1160     		str	r1, [r2]
 218:Core/Src/main.c **** 
 397              		.loc 1 218 3 view .LVU79
 398 003e 1268     		ldr	r2, [r2]
 399 0040 02F44042 		and	r2, r2, #49152
 400 0044 0292     		str	r2, [sp, #8]
ARM GAS  /tmp/cc1F1Vcq.s 			page 30


 218:Core/Src/main.c **** 
 401              		.loc 1 218 3 view .LVU80
 402 0046 029A     		ldr	r2, [sp, #8]
 403              	.LBE7:
 218:Core/Src/main.c **** 
 404              		.loc 1 218 3 view .LVU81
 223:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 405              		.loc 1 223 3 view .LVU82
 223:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 406              		.loc 1 223 36 is_stmt 0 view .LVU83
 407 0048 0222     		movs	r2, #2
 408 004a 0892     		str	r2, [sp, #32]
 224:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 409              		.loc 1 224 3 is_stmt 1 view .LVU84
 224:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 410              		.loc 1 224 30 is_stmt 0 view .LVU85
 411 004c 0121     		movs	r1, #1
 412 004e 0B91     		str	r1, [sp, #44]
 225:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 413              		.loc 1 225 3 is_stmt 1 view .LVU86
 225:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 414              		.loc 1 225 41 is_stmt 0 view .LVU87
 415 0050 1021     		movs	r1, #16
 416 0052 0C91     		str	r1, [sp, #48]
 226:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 417              		.loc 1 226 3 is_stmt 1 view .LVU88
 226:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 418              		.loc 1 226 34 is_stmt 0 view .LVU89
 419 0054 0E92     		str	r2, [sp, #56]
 227:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 420              		.loc 1 227 3 is_stmt 1 view .LVU90
 227:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 421              		.loc 1 227 35 is_stmt 0 view .LVU91
 422 0056 0F93     		str	r3, [sp, #60]
 228:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 100;
 423              		.loc 1 228 3 is_stmt 1 view .LVU92
 228:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 100;
 424              		.loc 1 228 30 is_stmt 0 view .LVU93
 425 0058 0823     		movs	r3, #8
 426 005a 1093     		str	r3, [sp, #64]
 229:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 427              		.loc 1 229 3 is_stmt 1 view .LVU94
 229:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 428              		.loc 1 229 30 is_stmt 0 view .LVU95
 429 005c 6423     		movs	r3, #100
 430 005e 1193     		str	r3, [sp, #68]
 230:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 431              		.loc 1 230 3 is_stmt 1 view .LVU96
 230:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 432              		.loc 1 230 30 is_stmt 0 view .LVU97
 433 0060 1292     		str	r2, [sp, #72]
 231:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 434              		.loc 1 231 3 is_stmt 1 view .LVU98
 231:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 435              		.loc 1 231 30 is_stmt 0 view .LVU99
 436 0062 0423     		movs	r3, #4
 437 0064 1393     		str	r3, [sp, #76]
ARM GAS  /tmp/cc1F1Vcq.s 			page 31


 232:Core/Src/main.c ****   {
 438              		.loc 1 232 3 is_stmt 1 view .LVU100
 232:Core/Src/main.c ****   {
 439              		.loc 1 232 7 is_stmt 0 view .LVU101
 440 0066 2046     		mov	r0, r4
 441 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 442              	.LVL32:
 232:Core/Src/main.c ****   {
 443              		.loc 1 232 6 discriminator 1 view .LVU102
 444 006c 80B9     		cbnz	r0, .L11
 239:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 445              		.loc 1 239 3 is_stmt 1 view .LVU103
 239:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 446              		.loc 1 239 31 is_stmt 0 view .LVU104
 447 006e 0F23     		movs	r3, #15
 448 0070 0393     		str	r3, [sp, #12]
 241:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 449              		.loc 1 241 3 is_stmt 1 view .LVU105
 241:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 450              		.loc 1 241 34 is_stmt 0 view .LVU106
 451 0072 0223     		movs	r3, #2
 452 0074 0493     		str	r3, [sp, #16]
 242:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 453              		.loc 1 242 3 is_stmt 1 view .LVU107
 242:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 454              		.loc 1 242 35 is_stmt 0 view .LVU108
 455 0076 0023     		movs	r3, #0
 456 0078 0593     		str	r3, [sp, #20]
 243:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 457              		.loc 1 243 3 is_stmt 1 view .LVU109
 243:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 458              		.loc 1 243 36 is_stmt 0 view .LVU110
 459 007a 4FF48052 		mov	r2, #4096
 460 007e 0692     		str	r2, [sp, #24]
 244:Core/Src/main.c **** 
 461              		.loc 1 244 3 is_stmt 1 view .LVU111
 244:Core/Src/main.c **** 
 462              		.loc 1 244 36 is_stmt 0 view .LVU112
 463 0080 0793     		str	r3, [sp, #28]
 246:Core/Src/main.c ****   {
 464              		.loc 1 246 3 is_stmt 1 view .LVU113
 246:Core/Src/main.c ****   {
 465              		.loc 1 246 7 is_stmt 0 view .LVU114
 466 0082 0321     		movs	r1, #3
 467 0084 03A8     		add	r0, sp, #12
 468 0086 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 469              	.LVL33:
 246:Core/Src/main.c ****   {
 470              		.loc 1 246 6 discriminator 1 view .LVU115
 471 008a 18B9     		cbnz	r0, .L12
 250:Core/Src/main.c **** 
 472              		.loc 1 250 1 view .LVU116
 473 008c 14B0     		add	sp, sp, #80
 474              		.cfi_remember_state
 475              		.cfi_def_cfa_offset 8
 476              		@ sp needed
 477 008e 10BD     		pop	{r4, pc}
ARM GAS  /tmp/cc1F1Vcq.s 			page 32


 478              	.L11:
 479              		.cfi_restore_state
 234:Core/Src/main.c ****   }
 480              		.loc 1 234 5 is_stmt 1 view .LVU117
 481 0090 FFF7FEFF 		bl	Error_Handler
 482              	.LVL34:
 483              	.L12:
 248:Core/Src/main.c ****   }
 484              		.loc 1 248 5 view .LVU118
 485 0094 FFF7FEFF 		bl	Error_Handler
 486              	.LVL35:
 487              	.L14:
 488              		.align	2
 489              	.L13:
 490 0098 00380240 		.word	1073887232
 491 009c 00700040 		.word	1073770496
 492              		.cfi_endproc
 493              	.LFE139:
 495              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 496              		.align	2
 497              	.LC13:
 498 0000 54656D70 		.ascii	"Temperature: %.2f Celsius\012\012\015\000"
 498      65726174 
 498      7572653A 
 498      20252E32 
 498      66204365 
 499 001d 000000   		.align	2
 500              	.LC14:
 501 0020 50726573 		.ascii	"Pressure: %.4f Pa\012\012\015\000"
 501      73757265 
 501      3A20252E 
 501      34662050 
 501      610A0A0D 
 502 0035 000000   		.align	2
 503              	.LC16:
 504 0038 41636365 		.ascii	"Acceleration: (%0.4f, %0.4f, %0.4f) \012\012\015\000"
 504      6C657261 
 504      74696F6E 
 504      3A202825 
 504      302E3466 
 505              		.align	2
 506              	.LC7:
 507 0060 2D2D2D2D 		.ascii	"--------------------LSM6DS33 init------------------"
 507      2D2D2D2D 
 507      2D2D2D2D 
 507      2D2D2D2D 
 507      2D2D2D2D 
 508 0093 2D2D2D2D 		.ascii	"--------\012\015\000"
 508      2D2D2D2D 
 508      0A0D00
 509 009e 0000     		.align	2
 510              	.LC8:
 511 00a0 41434345 		.ascii	"ACCELEROMETER READ SUCCESSFULLY (nice)\012\015\000"
 511      4C45524F 
 511      4D455445 
 511      52205245 
 511      41442053 
ARM GAS  /tmp/cc1F1Vcq.s 			page 33


 512              		.section	.text.main,"ax",%progbits
 513              		.align	1
 514              		.global	main
 515              		.syntax unified
 516              		.thumb
 517              		.thumb_func
 519              	main:
 520              	.LFB138:
 105:Core/Src/main.c **** 
 521              		.loc 1 105 1 view -0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 728
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525 0000 70B5     		push	{r4, r5, r6, lr}
 526              		.cfi_def_cfa_offset 16
 527              		.cfi_offset 4, -16
 528              		.cfi_offset 5, -12
 529              		.cfi_offset 6, -8
 530              		.cfi_offset 14, -4
 531 0002 ADF53A7D 		sub	sp, sp, #744
 532              		.cfi_def_cfa_offset 760
 108:Core/Src/main.c ****   send_message(data, PRIORITY_HIGH);
 533              		.loc 1 108 3 view .LVU120
 108:Core/Src/main.c ****   send_message(data, PRIORITY_HIGH);
 534              		.loc 1 108 8 is_stmt 0 view .LVU121
 535 0006 9F4D     		ldr	r5, .L26
 536 0008 A1AC     		add	r4, sp, #644
 537 000a 2868     		ldr	r0, [r5]	@ unaligned
 538 000c 6968     		ldr	r1, [r5, #4]	@ unaligned
 539 000e AA68     		ldr	r2, [r5, #8]	@ unaligned
 540 0010 EB68     		ldr	r3, [r5, #12]	@ unaligned
 541 0012 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 542 0014 2869     		ldr	r0, [r5, #16]	@ unaligned
 543 0016 6969     		ldr	r1, [r5, #20]	@ unaligned
 544 0018 03C4     		stmia	r4!, {r0, r1}
 545 001a 4C22     		movs	r2, #76
 546 001c 0021     		movs	r1, #0
 547 001e 2046     		mov	r0, r4
 548 0020 FFF7FEFF 		bl	memset
 549              	.LVL36:
 109:Core/Src/main.c **** 
 550              		.loc 1 109 3 is_stmt 1 view .LVU122
 551 0024 0221     		movs	r1, #2
 552 0026 A1A8     		add	r0, sp, #644
 553 0028 FFF7FEFF 		bl	send_message
 554              	.LVL37:
 116:Core/Src/main.c **** 
 555              		.loc 1 116 3 view .LVU123
 556 002c FFF7FEFF 		bl	HAL_Init
 557              	.LVL38:
 123:Core/Src/main.c **** 
 558              		.loc 1 123 3 view .LVU124
 559 0030 FFF7FEFF 		bl	SystemClock_Config
 560              	.LVL39:
 130:Core/Src/main.c ****   MX_I2C1_Init();
 561              		.loc 1 130 3 view .LVU125
 562 0034 FFF7FEFF 		bl	MX_GPIO_Init
ARM GAS  /tmp/cc1F1Vcq.s 			page 34


 563              	.LVL40:
 131:Core/Src/main.c ****   MX_USART1_UART_Init();
 564              		.loc 1 131 3 view .LVU126
 565 0038 FFF7FEFF 		bl	MX_I2C1_Init
 566              	.LVL41:
 132:Core/Src/main.c ****   MX_TIM1_Init();
 567              		.loc 1 132 3 view .LVU127
 568 003c FFF7FEFF 		bl	MX_USART1_UART_Init
 569              	.LVL42:
 133:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 570              		.loc 1 133 3 view .LVU128
 571 0040 FFF7FEFF 		bl	MX_TIM1_Init
 572              	.LVL43:
 135:Core/Src/main.c **** 
 573              		.loc 1 135 3 view .LVU129
 574 0044 0021     		movs	r1, #0
 575 0046 9048     		ldr	r0, .L26+4
 576 0048 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 577              	.LVL44:
 137:Core/Src/main.c ****   send_message(str_buf, PRIORITY_HIGH);
 578              		.loc 1 137 3 view .LVU130
 137:Core/Src/main.c ****   send_message(str_buf, PRIORITY_HIGH);
 579              		.loc 1 137 8 is_stmt 0 view .LVU131
 580 004c 8F4C     		ldr	r4, .L26+8
 581 004e 88AE     		add	r6, sp, #544
 582 0050 04F1300C 		add	ip, r4, #48
 583              	.L16:
 584 0054 3546     		mov	r5, r6
 585 0056 2068     		ldr	r0, [r4]	@ unaligned
 586 0058 6168     		ldr	r1, [r4, #4]	@ unaligned
 587 005a A268     		ldr	r2, [r4, #8]	@ unaligned
 588 005c E368     		ldr	r3, [r4, #12]	@ unaligned
 589 005e 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 590 0060 1034     		adds	r4, r4, #16
 591 0062 2E46     		mov	r6, r5
 592 0064 6445     		cmp	r4, ip
 593 0066 F5D1     		bne	.L16
 594 0068 2068     		ldr	r0, [r4]	@ unaligned
 595 006a 6168     		ldr	r1, [r4, #4]	@ unaligned
 596 006c A268     		ldr	r2, [r4, #8]	@ unaligned
 597 006e 07C6     		stmia	r6!, {r0, r1, r2}
 598 0070 A389     		ldrh	r3, [r4, #12]	@ unaligned
 599 0072 3380     		strh	r3, [r6]	@ unaligned
 600 0074 2622     		movs	r2, #38
 601 0076 0021     		movs	r1, #0
 602 0078 0DF25E20 		addw	r0, sp, #606
 603 007c FFF7FEFF 		bl	memset
 604              	.LVL45:
 138:Core/Src/main.c **** 
 605              		.loc 1 138 3 is_stmt 1 view .LVU132
 606 0080 0221     		movs	r1, #2
 607 0082 88A8     		add	r0, sp, #544
 608 0084 FFF7FEFF 		bl	send_message
 609              	.LVL46:
 140:Core/Src/main.c ****   {
 610              		.loc 1 140 3 view .LVU133
 140:Core/Src/main.c ****   {
ARM GAS  /tmp/cc1F1Vcq.s 			page 35


 611              		.loc 1 140 7 is_stmt 0 view .LVU134
 612 0088 FFF7FEFF 		bl	check_acc_identity
 613              	.LVL47:
 140:Core/Src/main.c ****   {
 614              		.loc 1 140 6 discriminator 1 view .LVU135
 615 008c 08B3     		cbz	r0, .L17
 616              	.LBB8:
 142:Core/Src/main.c **** 		send_message(buffer, PRIORITY_HIGH);
 617              		.loc 1 142 3 is_stmt 1 view .LVU136
 142:Core/Src/main.c **** 		send_message(buffer, PRIORITY_HIGH);
 618              		.loc 1 142 8 is_stmt 0 view .LVU137
 619 008e 0DF5DE7C 		add	ip, sp, #444
 620 0092 7F4C     		ldr	r4, .L26+12
 621 0094 6646     		mov	r6, ip
 622 0096 04F1200E 		add	lr, r4, #32
 623              	.L18:
 624 009a 3546     		mov	r5, r6
 625 009c 2068     		ldr	r0, [r4]	@ unaligned
 626 009e 6168     		ldr	r1, [r4, #4]	@ unaligned
 627 00a0 A268     		ldr	r2, [r4, #8]	@ unaligned
 628 00a2 E368     		ldr	r3, [r4, #12]	@ unaligned
 629 00a4 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 630 00a6 1034     		adds	r4, r4, #16
 631 00a8 2E46     		mov	r6, r5
 632 00aa 7445     		cmp	r4, lr
 633 00ac F5D1     		bne	.L18
 634 00ae 2068     		ldr	r0, [r4]	@ unaligned
 635 00b0 6168     		ldr	r1, [r4, #4]	@ unaligned
 636 00b2 03C6     		stmia	r6!, {r0, r1}
 637 00b4 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 638 00b6 3370     		strb	r3, [r6]
 639 00b8 3B22     		movs	r2, #59
 640 00ba 0021     		movs	r1, #0
 641 00bc 0CF12900 		add	r0, ip, #41
 642 00c0 FFF7FEFF 		bl	memset
 643              	.LVL48:
 143:Core/Src/main.c **** 
 644              		.loc 1 143 3 is_stmt 1 view .LVU138
 645 00c4 0221     		movs	r1, #2
 646 00c6 6FA8     		add	r0, sp, #444
 647 00c8 FFF7FEFF 		bl	send_message
 648              	.LVL49:
 145:Core/Src/main.c ****   }
 649              		.loc 1 145 5 view .LVU139
 650 00cc FFF7FEFF 		bl	acc_power_on
 651              	.LVL50:
 652              	.LBE8:
 653 00d0 1CE0     		b	.L19
 654              	.L17:
 655              	.LBB9:
 149:Core/Src/main.c **** 		send_message(buffer, PRIORITY_HIGH);
 656              		.loc 1 149 3 view .LVU140
 149:Core/Src/main.c **** 		send_message(buffer, PRIORITY_HIGH);
 657              		.loc 1 149 8 is_stmt 0 view .LVU141
 658 00d2 6FAE     		add	r6, sp, #444
 659 00d4 3446     		mov	r4, r6
 660 00d6 6F4D     		ldr	r5, .L26+16
ARM GAS  /tmp/cc1F1Vcq.s 			page 36


 661 00d8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 662 00da 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 663 00dc 95E80700 		ldm	r5, {r0, r1, r2}
 664 00e0 03C4     		stmia	r4!, {r0, r1}
 665 00e2 24F8022B 		strh	r2, [r4], #2	@ movhi
 666 00e6 120C     		lsrs	r2, r2, #16
 667 00e8 2270     		strb	r2, [r4]
 668 00ea 0022     		movs	r2, #0
 669 00ec CDF8D721 		str	r2, [sp, #471]	@ unaligned
 670 00f0 CDF8DB21 		str	r2, [sp, #475]	@ unaligned
 671 00f4 CDF8DF21 		str	r2, [sp, #479]	@ unaligned
 672 00f8 CDF8E321 		str	r2, [sp, #483]	@ unaligned
 673 00fc CDF8E721 		str	r2, [sp, #487]	@ unaligned
 674 0100 CDF8EA21 		str	r2, [sp, #490]	@ unaligned
 150:Core/Src/main.c ****   }
 675              		.loc 1 150 3 is_stmt 1 view .LVU142
 676 0104 0221     		movs	r1, #2
 677 0106 3046     		mov	r0, r6
 678 0108 FFF7FEFF 		bl	send_message
 679              	.LVL51:
 680              	.L19:
 681              	.LBE9:
 153:Core/Src/main.c ****   {
 682              		.loc 1 153 3 view .LVU143
 153:Core/Src/main.c ****   {
 683              		.loc 1 153 7 is_stmt 0 view .LVU144
 684 010c FFF7FEFF 		bl	check_barometer_identity
 685              	.LVL52:
 153:Core/Src/main.c ****   {
 686              		.loc 1 153 6 discriminator 1 view .LVU145
 687 0110 0028     		cmp	r0, #0
 688 0112 00F0A680 		beq	.L20
 689              	.LBB10:
 155:Core/Src/main.c **** 		send_message(buffer, PRIORITY_HIGH);
 690              		.loc 1 155 3 is_stmt 1 view .LVU146
 155:Core/Src/main.c **** 		send_message(buffer, PRIORITY_HIGH);
 691              		.loc 1 155 8 is_stmt 0 view .LVU147
 692 0116 6FAE     		add	r6, sp, #444
 693 0118 3446     		mov	r4, r6
 694 011a 5F4D     		ldr	r5, .L26+20
 695 011c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 696 011e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 697 0120 95E80300 		ldm	r5, {r0, r1}
 698 0124 84E80300 		stm	r4, {r0, r1}
 699 0128 0023     		movs	r3, #0
 700 012a 7593     		str	r3, [sp, #468]
 156:Core/Src/main.c ****   }
 701              		.loc 1 156 3 is_stmt 1 view .LVU148
 702 012c 0221     		movs	r1, #2
 703 012e 3046     		mov	r0, r6
 704 0130 FFF7FEFF 		bl	send_message
 705              	.LVL53:
 706              	.L21:
 707              	.LBE10:
 164:Core/Src/main.c ****   
 708              		.loc 1 164 3 view .LVU149
 709 0134 FFF7FEFF 		bl	barometer_power_on
ARM GAS  /tmp/cc1F1Vcq.s 			page 37


 710              	.LVL54:
 711              	.L24:
 170:Core/Src/main.c ****   {
 712              		.loc 1 170 3 view .LVU150
 713              	.LBB11:
 172:Core/Src/main.c **** 
 714              		.loc 1 172 5 view .LVU151
 715 0138 4FF47A70 		mov	r0, #1000
 716 013c FFF7FEFF 		bl	HAL_Delay
 717              	.LVL55:
 174:Core/Src/main.c ****     send_message(data, PRIORITY_HIGH);
 718              		.loc 1 174 5 view .LVU152
 174:Core/Src/main.c ****     send_message(data, PRIORITY_HIGH);
 719              		.loc 1 174 10 is_stmt 0 view .LVU153
 720 0140 0BAE     		add	r6, sp, #44
 721 0142 504C     		ldr	r4, .L26
 722 0144 04F17C0C 		add	ip, r4, #124
 723 0148 3546     		mov	r5, r6
 724 014a AC34     		adds	r4, r4, #172
 725              	.L22:
 726 014c AE46     		mov	lr, r5
 727 014e DCF80000 		ldr	r0, [ip]	@ unaligned
 728 0152 DCF80410 		ldr	r1, [ip, #4]	@ unaligned
 729 0156 DCF80820 		ldr	r2, [ip, #8]	@ unaligned
 730 015a DCF80C30 		ldr	r3, [ip, #12]	@ unaligned
 731 015e AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 732 0162 0CF1100C 		add	ip, ip, #16
 733 0166 7546     		mov	r5, lr
 734 0168 A445     		cmp	ip, r4
 735 016a EFD1     		bne	.L22
 736 016c DCF80000 		ldr	r0, [ip]	@ unaligned
 737 0170 CEF80000 		str	r0, [lr]
 738 0174 9CF80430 		ldrb	r3, [ip, #4]	@ zero_extendqisi2
 739 0178 8EF80430 		strb	r3, [lr, #4]
 740 017c 2F22     		movs	r2, #47
 741 017e 0021     		movs	r1, #0
 742 0180 06F13500 		add	r0, r6, #53
 743 0184 FFF7FEFF 		bl	memset
 744              	.LVL56:
 175:Core/Src/main.c **** 
 745              		.loc 1 175 5 is_stmt 1 view .LVU154
 746 0188 0221     		movs	r1, #2
 747 018a 0BA8     		add	r0, sp, #44
 748 018c FFF7FEFF 		bl	send_message
 749              	.LVL57:
 177:Core/Src/main.c **** 
 750              		.loc 1 177 5 view .LVU155
 177:Core/Src/main.c **** 
 751              		.loc 1 177 27 is_stmt 0 view .LVU156
 752 0190 FFF7FEFF 		bl	read_temp
 753              	.LVL58:
 754 0194 07EE900A 		vmov	s15, r0	@ int
 755              	.LVL59:
 179:Core/Src/main.c ****     sprintf(temp_str, "Temperature: %.2f Celsius\n\n\r", ((float)actual_temp)/100);
 756              		.loc 1 179 5 is_stmt 1 view .LVU157
 180:Core/Src/main.c ****     send_message(temp_str, PRIORITY_HIGH);
 757              		.loc 1 180 5 view .LVU158
ARM GAS  /tmp/cc1F1Vcq.s 			page 38


 180:Core/Src/main.c ****     send_message(temp_str, PRIORITY_HIGH);
 758              		.loc 1 180 59 is_stmt 0 view .LVU159
 759 0198 F8EEE77A 		vcvt.f32.s32	s15, s15
 180:Core/Src/main.c ****     send_message(temp_str, PRIORITY_HIGH);
 760              		.loc 1 180 5 view .LVU160
 761 019c 9FED3F7A 		vldr.32	s14, .L26+24
 762 01a0 C7EE877A 		vdiv.f32	s15, s15, s14
 763 01a4 17EE900A 		vmov	r0, s15
 764              	.LVL60:
 180:Core/Src/main.c ****     send_message(temp_str, PRIORITY_HIGH);
 765              		.loc 1 180 5 view .LVU161
 766 01a8 FFF7FEFF 		bl	__aeabi_f2d
 767              	.LVL61:
 768 01ac 0246     		mov	r2, r0
 769 01ae 0B46     		mov	r3, r1
 770 01b0 24AC     		add	r4, sp, #144
 771 01b2 3B49     		ldr	r1, .L26+28
 772 01b4 2046     		mov	r0, r4
 773 01b6 FFF7FEFF 		bl	sprintf
 774              	.LVL62:
 181:Core/Src/main.c **** 
 775              		.loc 1 181 5 is_stmt 1 view .LVU162
 776 01ba 0221     		movs	r1, #2
 777 01bc 2046     		mov	r0, r4
 778 01be FFF7FEFF 		bl	send_message
 779              	.LVL63:
 183:Core/Src/main.c **** 
 780              		.loc 1 183 5 view .LVU163
 183:Core/Src/main.c **** 
 781              		.loc 1 183 32 is_stmt 0 view .LVU164
 782 01c2 FFF7FEFF 		bl	read_pressure
 783              	.LVL64:
 784 01c6 07EE900A 		vmov	s15, r0	@ int
 785              	.LVL65:
 185:Core/Src/main.c ****     sprintf(pressure_str, "Pressure: %.4f Pa\n\n\r",  ((float)actual_pressure)/256);
 786              		.loc 1 185 5 is_stmt 1 view .LVU165
 186:Core/Src/main.c ****     send_message(pressure_str, PRIORITY_HIGH);
 787              		.loc 1 186 5 view .LVU166
 186:Core/Src/main.c ****     send_message(pressure_str, PRIORITY_HIGH);
 788              		.loc 1 186 56 is_stmt 0 view .LVU167
 789 01ca F8EE677A 		vcvt.f32.u32	s15, s15
 186:Core/Src/main.c ****     send_message(pressure_str, PRIORITY_HIGH);
 790              		.loc 1 186 5 view .LVU168
 791 01ce 9FED357A 		vldr.32	s14, .L26+32
 792 01d2 67EE877A 		vmul.f32	s15, s15, s14
 793 01d6 17EE900A 		vmov	r0, s15
 794              	.LVL66:
 186:Core/Src/main.c ****     send_message(pressure_str, PRIORITY_HIGH);
 795              		.loc 1 186 5 view .LVU169
 796 01da FFF7FEFF 		bl	__aeabi_f2d
 797              	.LVL67:
 798 01de 0246     		mov	r2, r0
 799 01e0 0B46     		mov	r3, r1
 800 01e2 3DAC     		add	r4, sp, #244
 801 01e4 3049     		ldr	r1, .L26+36
 802 01e6 2046     		mov	r0, r4
 803 01e8 FFF7FEFF 		bl	sprintf
ARM GAS  /tmp/cc1F1Vcq.s 			page 39


 804              	.LVL68:
 187:Core/Src/main.c **** 
 805              		.loc 1 187 5 is_stmt 1 view .LVU170
 806 01ec 0221     		movs	r1, #2
 807 01ee 2046     		mov	r0, r4
 808 01f0 FFF7FEFF 		bl	send_message
 809              	.LVL69:
 189:Core/Src/main.c ****     send_message(data1, PRIORITY_HIGH);
 810              		.loc 1 189 5 view .LVU171
 189:Core/Src/main.c ****     send_message(data1, PRIORITY_HIGH);
 811              		.loc 1 189 10 is_stmt 0 view .LVU172
 812 01f4 0DF5AC7E 		add	lr, sp, #344
 813 01f8 224E     		ldr	r6, .L26
 814 01fa 06F1B404 		add	r4, r6, #180
 815 01fe F446     		mov	ip, lr
 816 0200 E436     		adds	r6, r6, #228
 817              	.L23:
 818 0202 6546     		mov	r5, ip
 819 0204 2068     		ldr	r0, [r4]	@ unaligned
 820 0206 6168     		ldr	r1, [r4, #4]	@ unaligned
 821 0208 A268     		ldr	r2, [r4, #8]	@ unaligned
 822 020a E368     		ldr	r3, [r4, #12]	@ unaligned
 823 020c 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 824 020e 1034     		adds	r4, r4, #16
 825 0210 AC46     		mov	ip, r5
 826 0212 B442     		cmp	r4, r6
 827 0214 F5D1     		bne	.L23
 828 0216 2068     		ldr	r0, [r4]	@ unaligned
 829 0218 2860     		str	r0, [r5]
 830 021a 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 831 021c 2B71     		strb	r3, [r5, #4]
 832 021e 2F22     		movs	r2, #47
 833 0220 0021     		movs	r1, #0
 834 0222 0EF13500 		add	r0, lr, #53
 835 0226 FFF7FEFF 		bl	memset
 836              	.LVL70:
 190:Core/Src/main.c **** 
 837              		.loc 1 190 5 is_stmt 1 view .LVU173
 838 022a 0221     		movs	r1, #2
 839 022c 56A8     		add	r0, sp, #344
 840 022e FFF7FEFF 		bl	send_message
 841              	.LVL71:
 192:Core/Src/main.c ****     Read_Acc(acc_vals);
 842              		.loc 1 192 5 view .LVU174
 193:Core/Src/main.c **** 
 843              		.loc 1 193 5 view .LVU175
 844 0232 04AC     		add	r4, sp, #16
 845 0234 2046     		mov	r0, r4
 846 0236 FFF7FEFF 		bl	Read_Acc
 847              	.LVL72:
 195:Core/Src/main.c ****     sprintf(acc_str, "Acceleration: (%0.4f, %0.4f, %0.4f) \n\n\r", acc_vals[0], acc_vals[1], acc_va
 848              		.loc 1 195 5 view .LVU176
 196:Core/Src/main.c ****     send_message(acc_str, PRIORITY_HIGH);
 849              		.loc 1 196 5 view .LVU177
 850 023a 6FAD     		add	r5, sp, #444
 851 023c DDE90823 		ldrd	r2, [sp, #32]
 852 0240 CDE90223 		strd	r2, [sp, #8]
ARM GAS  /tmp/cc1F1Vcq.s 			page 40


 853 0244 DDE90623 		ldrd	r2, [sp, #24]
 854 0248 CDE90023 		strd	r2, [sp]
 855 024c DDE90423 		ldrd	r2, [sp, #16]
 856 0250 1649     		ldr	r1, .L26+40
 857 0252 2846     		mov	r0, r5
 858 0254 FFF7FEFF 		bl	sprintf
 859              	.LVL73:
 197:Core/Src/main.c **** 
 860              		.loc 1 197 5 view .LVU178
 861 0258 0221     		movs	r1, #2
 862 025a 2846     		mov	r0, r5
 863 025c FFF7FEFF 		bl	send_message
 864              	.LVL74:
 865              	.LBE11:
 170:Core/Src/main.c ****   {
 866              		.loc 1 170 9 view .LVU179
 867 0260 6AE7     		b	.L24
 868              	.LVL75:
 869              	.L20:
 870              	.LBB12:
 160:Core/Src/main.c **** 		send_message(buffer, PRIORITY_HIGH);
 871              		.loc 1 160 3 view .LVU180
 160:Core/Src/main.c **** 		send_message(buffer, PRIORITY_HIGH);
 872              		.loc 1 160 8 is_stmt 0 view .LVU181
 873 0262 6FAE     		add	r6, sp, #444
 874 0264 3446     		mov	r4, r6
 875 0266 124D     		ldr	r5, .L26+44
 876 0268 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 877 026a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 878 026c 2B68     		ldr	r3, [r5]
 879 026e 2370     		strb	r3, [r4]
 880 0270 0022     		movs	r2, #0
 881 0272 ADF8CD21 		strh	r2, [sp, #461]	@ unaligned
 882 0276 8DF8CF21 		strb	r2, [sp, #463]
 161:Core/Src/main.c ****   }
 883              		.loc 1 161 3 is_stmt 1 view .LVU182
 884 027a 0221     		movs	r1, #2
 885 027c 3046     		mov	r0, r6
 886 027e FFF7FEFF 		bl	send_message
 887              	.LVL76:
 888 0282 57E7     		b	.L21
 889              	.L27:
 890              		.align	2
 891              	.L26:
 892 0284 00000000 		.word	.LANCHOR0
 893 0288 00000000 		.word	htim1
 894 028c 60000000 		.word	.LC7
 895 0290 A0000000 		.word	.LC8
 896 0294 18000000 		.word	.LANCHOR0+24
 897 0298 4C000000 		.word	.LANCHOR0+76
 898 029c 0000C842 		.word	1120403456
 899 02a0 00000000 		.word	.LC13
 900 02a4 0000803B 		.word	998244352
 901 02a8 20000000 		.word	.LC14
 902 02ac 38000000 		.word	.LC16
 903 02b0 68000000 		.word	.LANCHOR0+104
 904              	.LBE12:
ARM GAS  /tmp/cc1F1Vcq.s 			page 41


 905              		.cfi_endproc
 906              	.LFE138:
 908              		.section	.rodata
 909              		.align	2
 910              		.set	.LANCHOR0,. + 0
 911              	.LC6:
 912 0000 46343131 		.ascii	"F411 says: I'm alive\012\015\000\000"
 912      20736179 
 912      733A2049 
 912      276D2061 
 912      6C697665 
 913              	.LC9:
 914 0018 41434345 		.ascii	"ACCELEROMETER READ ERROR\012\015\000"
 914      4C45524F 
 914      4D455445 
 914      52205245 
 914      41442045 
 915 0033 00000000 		.space	23
 915      00000000 
 915      00000000 
 915      00000000 
 915      00000000 
 916 004a 0000     		.space	2
 917              	.LC10:
 918 004c 424D5020 		.ascii	"BMP READ SUCCESSFULLY\012\015\000"
 918      52454144 
 918      20535543 
 918      43455353 
 918      46554C4C 
 919 0064 00000000 		.space	4
 920              	.LC11:
 921 0068 424D5020 		.ascii	"BMP READ ERROR\012\015\000"
 921      52454144 
 921      20455252 
 921      4F520A0D 
 921      00
 922 0079 000000   		.space	3
 923              	.LC12:
 924 007c 2D2D2D2D 		.ascii	"------------------------BMP----------------------\012"
 924      2D2D2D2D 
 924      2D2D2D2D 
 924      2D2D2D2D 
 924      2D2D2D2D 
 925 00ae 0D0000   		.ascii	"\015\000\000"
 926 00b1 000000   		.space	3
 927              	.LC15:
 928 00b4 2D2D2D2D 		.ascii	"------------------------ACC----------------------\012"
 928      2D2D2D2D 
 928      2D2D2D2D 
 928      2D2D2D2D 
 928      2D2D2D2D 
 929 00e6 0D0000   		.ascii	"\015\000\000"
 930              		.text
 931              	.Letext0:
 932              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 933              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 934              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
ARM GAS  /tmp/cc1F1Vcq.s 			page 42


 935              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 936              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 937              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 938              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 939              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 940              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 941              		.file 12 "Core/Inc/i2c.h"
 942              		.file 13 "Core/Inc/tim.h"
 943              		.file 14 "Core/Inc/modules/communication.h"
 944              		.file 15 "/usr/arm-none-eabi/include/stdio.h"
 945              		.file 16 "Core/Inc/modules/sensors/barometer.h"
 946              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 947              		.file 18 "Core/Inc/modules/sensors/accelerometer.h"
 948              		.file 19 "Core/Inc/usart.h"
 949              		.file 20 "Core/Inc/gpio.h"
 950              		.file 21 "<built-in>"
ARM GAS  /tmp/cc1F1Vcq.s 			page 43


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/cc1F1Vcq.s:21     .rodata.Read_Acc.str1.4:00000000 $d
     /tmp/cc1F1Vcq.s:40     .text.Read_Acc:00000000 $t
     /tmp/cc1F1Vcq.s:46     .text.Read_Acc:00000000 Read_Acc
     /tmp/cc1F1Vcq.s:283    .text.Read_Acc:00000170 $d
     /tmp/cc1F1Vcq.s:299    .text.Error_Handler:00000000 $t
     /tmp/cc1F1Vcq.s:305    .text.Error_Handler:00000000 Error_Handler
     /tmp/cc1F1Vcq.s:337    .text.SystemClock_Config:00000000 $t
     /tmp/cc1F1Vcq.s:343    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/cc1F1Vcq.s:490    .text.SystemClock_Config:00000098 $d
     /tmp/cc1F1Vcq.s:496    .rodata.main.str1.4:00000000 $d
     /tmp/cc1F1Vcq.s:513    .text.main:00000000 $t
     /tmp/cc1F1Vcq.s:519    .text.main:00000000 main
     /tmp/cc1F1Vcq.s:892    .text.main:00000284 $d
     /tmp/cc1F1Vcq.s:909    .rodata:00000000 $d

UNDEFINED SYMBOLS
HAL_I2C_Mem_Read
send_reg_log
__aeabi_i2d
__aeabi_dmul
__aeabi_ddiv
hi2c1
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
send_message
HAL_Init
MX_GPIO_Init
MX_I2C1_Init
MX_USART1_UART_Init
MX_TIM1_Init
HAL_TIM_PWM_Start
check_acc_identity
acc_power_on
check_barometer_identity
barometer_power_on
HAL_Delay
read_temp
__aeabi_f2d
sprintf
read_pressure
htim1
