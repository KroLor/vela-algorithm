ARM GAS  /tmp/ccAzc5t0.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB149:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <string.h>
  25:Core/Src/main.c **** #include <stdio.h>
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/ccAzc5t0.s 			page 2


  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** UART_HandleTypeDef huart1;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE BEGIN PV */
  52:Core/Src/main.c **** /* –ö–∞–ª–∏–±—Ä–æ–≤–æ—á–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* –î–ª—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã */
  55:Core/Src/main.c **** ///uint16_t dig_T1[1];
  56:Core/Src/main.c **** uint16_t dig_T1;
  57:Core/Src/main.c **** int16_t  dig_T2;
  58:Core/Src/main.c **** int16_t  dig_T3;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* –î–ª—è pressure */
  61:Core/Src/main.c **** uint16_t dig_P1;
  62:Core/Src/main.c **** int16_t  dig_P2;
  63:Core/Src/main.c **** int16_t  dig_P3;
  64:Core/Src/main.c **** int16_t  dig_P4;
  65:Core/Src/main.c **** int16_t  dig_P5;
  66:Core/Src/main.c **** int16_t  dig_P6;
  67:Core/Src/main.c **** int16_t  dig_P7;
  68:Core/Src/main.c **** int16_t  dig_P8;
  69:Core/Src/main.c **** int16_t  dig_P9;
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** int32_t actual_temp;
  72:Core/Src/main.c **** uint32_t actual_pressure;
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /* USER CODE END PV */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  77:Core/Src/main.c **** void SystemClock_Config(void);
  78:Core/Src/main.c **** static void MX_GPIO_Init(void);
  79:Core/Src/main.c **** static void MX_I2C1_Init(void);
  80:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  81:Core/Src/main.c **** static void MX_TIM1_Init(void);
  82:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** /* USER CODE END PFP */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  87:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  88:Core/Src/main.c **** 
ARM GAS  /tmp/ccAzc5t0.s 			page 3


  89:Core/Src/main.c **** // Returns temperature in DegC, resolution is 0.01 DegC. Output value of ‚Äú5123‚Äù equals 51.23 De
  90:Core/Src/main.c **** // t_fine carries fine temperature as global value
  91:Core/Src/main.c **** int32_t t_fine;
  92:Core/Src/main.c **** int32_t bmp280_compensate_T_int32(int32_t adc_T)
  93:Core/Src/main.c **** {
  94:Core/Src/main.c **** 	int32_t var1, var2, T;
  95:Core/Src/main.c **** 	var1 = ((((adc_T>>3) - ((int32_t)dig_T1<<1))) * ((int32_t)dig_T2)) >> 11;
  96:Core/Src/main.c **** 	var2 = (((((adc_T>>4) - ((int32_t)dig_T1)) * ((adc_T>>4) - ((int32_t)dig_T1)))
  97:Core/Src/main.c **** 	>> 12) *
  98:Core/Src/main.c **** 	((int32_t)dig_T3)) >> 14;
  99:Core/Src/main.c **** 	t_fine = var1 + var2;
 100:Core/Src/main.c **** 	T = (t_fine * 5 + 128) >> 8;
 101:Core/Src/main.c **** 	return T;
 102:Core/Src/main.c **** }
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** // Returns pressure in Pa as unsigned 32 bit integer in Q24.8 format (24 integer bits and 8 fractio
 105:Core/Src/main.c **** // Output value of ‚Äú24674867‚Äù represents 24674867/256 = 96386.2 Pa = 963.862 hPa
 106:Core/Src/main.c **** uint32_t bmp280_compensate_P_int64(int32_t adc_P)
 107:Core/Src/main.c **** {
 108:Core/Src/main.c **** 	int64_t var1, var2, p;
 109:Core/Src/main.c **** 	var1 = ((int64_t)t_fine) - 128000;
 110:Core/Src/main.c **** 	var2 = var1 * var1 * (int64_t)dig_P6;
 111:Core/Src/main.c **** 	var2 = var2 + ((var1*(int64_t)dig_P5)<<17);
 112:Core/Src/main.c **** 	var2 = var2 + (((int64_t)dig_P4)<<35);
 113:Core/Src/main.c **** 	var1 = ((var1 * var1 * (int64_t)dig_P3)>>8) + ((var1 * (int64_t)dig_P2)<<12);
 114:Core/Src/main.c **** 	var1 = (((((int64_t)1)<<47)+var1))*((int64_t)dig_P1)>>33;
 115:Core/Src/main.c **** 
 116:Core/Src/main.c **** 	if (var1 == 0)
 117:Core/Src/main.c **** 	{
 118:Core/Src/main.c **** 		return 0; // avoid exception caused by division by zero
 119:Core/Src/main.c **** 	}
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** 	p = 1048576-adc_P;
 122:Core/Src/main.c **** 	p = (((p<<31)-var2)*3125)/var1;
 123:Core/Src/main.c **** 	var1 = (((int64_t)dig_P9) * (p>>13) * (p>>13)) >> 25;
 124:Core/Src/main.c **** 	var2 = (((int64_t)dig_P8) * p) >> 19;
 125:Core/Src/main.c **** 	p = ((p + var1 + var2) >> 8) + (((int64_t)dig_P7)<<4);
 126:Core/Src/main.c **** 	return (uint32_t)p;
 127:Core/Src/main.c **** }
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** void InitBmp()
 130:Core/Src/main.c **** {
 131:Core/Src/main.c **** 	uint16_t Address_Bmp280 = 0x76 << 1; //–∏–ª–∏ 0x77 - –∞–¥—Ä–µ—Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –ø–æ –ª–∏–Ω–∏
 132:Core/Src/main.c **** 	uint16_t Register_ID = 0xD0; //–ê–¥—Ä–µ—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞ –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö—Ä–∞–Ω–∏—Ç—Å—è –∑–Ω
 133:Core/Src/main.c **** 	uint8_t Data[1]; //–ú–∞—Å—Å–∏–≤ –≤ –∫–æ—Ç–æ—Ä–æ–º –ú–´ –±—É–¥–µ–º —Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å —
 134:Core/Src/main.c **** 	uint16_t Size_ = 1; //–î–ª–∏–Ω–∞ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö, 1 –±–∞–π—Ç = 1 —Ä–µ–≥–∏—
 135:Core/Src/main.c **** 	uint32_t Timeout_ = 0xFF; //–¢–∞–π–º–∞—É—Ç, 255 –º—Å
 136:Core/Src/main.c **** 
 137:Core/Src/main.c **** 	HAL_I2C_Mem_Read(&hi2c1, Address_Bmp280, Register_ID, I2C_MEMADD_SIZE_8BIT, Data, Size_, Timeout_)
 138:Core/Src/main.c **** 	if (Data[0] == 0x58)
 139:Core/Src/main.c **** 	{
 140:Core/Src/main.c **** 		char buffer [28] = "BMP 0x58 READ SUCCESSFULLY\n\r";
 141:Core/Src/main.c **** 		HAL_UART_Transmit(&huart1, (uint8_t *)buffer, strlen(buffer), 1000);
 142:Core/Src/main.c **** 	} else
 143:Core/Src/main.c **** 	{
 144:Core/Src/main.c **** 		char buffer [20] = "BMP READ ERROR\n\r";
 145:Core/Src/main.c **** 		HAL_UART_Transmit(&huart1, (uint8_t *)buffer, strlen(buffer), 1000);
ARM GAS  /tmp/ccAzc5t0.s 			page 4


 146:Core/Src/main.c **** 
 147:Core/Src/main.c **** 	}
 148:Core/Src/main.c **** }
 149:Core/Src/main.c **** 
 150:Core/Src/main.c **** /// @brief 
 151:Core/Src/main.c **** /// @param status 
 152:Core/Src/main.c **** /// @param reg 
 153:Core/Src/main.c **** void UART_Send_HAL_Status(HAL_StatusTypeDef status, char* reg)
 154:Core/Src/main.c **** {
 155:Core/Src/main.c ****   char* message = NULL;
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   switch (status)
 158:Core/Src/main.c ****   {
 159:Core/Src/main.c ****     case HAL_OK:
 160:Core/Src/main.c ****       message = "OK";
 161:Core/Src/main.c ****       break;
 162:Core/Src/main.c ****     case HAL_ERROR:
 163:Core/Src/main.c ****       message = "ERROR";
 164:Core/Src/main.c ****       break;
 165:Core/Src/main.c ****     
 166:Core/Src/main.c ****     case HAL_BUSY:
 167:Core/Src/main.c ****       message = "BUSY";
 168:Core/Src/main.c ****       break;
 169:Core/Src/main.c ****     case HAL_TIMEOUT:
 170:Core/Src/main.c ****       message = "TIMEOUT";
 171:Core/Src/main.c ****       break;
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****     default:
 174:Core/Src/main.c ****       break;
 175:Core/Src/main.c ****   }
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   char buffer[100];
 178:Core/Src/main.c ****   strcat(buffer, reg);
 179:Core/Src/main.c ****   strcat(buffer, ": ");
 180:Core/Src/main.c ****   strcat(buffer, message);
 181:Core/Src/main.c ****   strcat(buffer, "\n\r\0");
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, (uint8_t *)buffer, strlen(buffer), 0xFF);
 184:Core/Src/main.c **** }
 185:Core/Src/main.c **** 
 186:Core/Src/main.c **** void Read_Dig_Variables()
 187:Core/Src/main.c **** {
 188:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x88, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 189:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x8A, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 190:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x8C, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 191:Core/Src/main.c ****   
 192:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x8E, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 193:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x90, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 194:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x92, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 195:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x94, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 196:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x96, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 197:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x98, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 198:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x9A, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 199:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x9C, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 200:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x9E, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 201:Core/Src/main.c **** }
 202:Core/Src/main.c **** 
ARM GAS  /tmp/ccAzc5t0.s 			page 5


 203:Core/Src/main.c **** 
 204:Core/Src/main.c **** void Acc_LSM_Init()
 205:Core/Src/main.c **** {
 206:Core/Src/main.c ****   char str_buf[100] =  "--------------------LSM6DS33 init--------------------------\n\r";
 207:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, (uint8_t*)str_buf, strlen(str_buf), 1000);
 208:Core/Src/main.c **** 
 209:Core/Src/main.c **** 	uint8_t dev_address = 0b11010100; //–∞–¥—Ä–µ—Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –ø–æ –ª–∏–Ω–∏–∏ I2C
 210:Core/Src/main.c **** 	uint16_t register_address = 0x0F; //–ê–¥—Ä–µ—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞ –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö—Ä–∞–Ω–∏—Ç—Å—è
 211:Core/Src/main.c **** 	uint8_t data; //–ú–∞—Å—Å–∏–≤ –≤ –∫–æ—Ç–æ—Ä–æ–º –ú–´ –±—É–¥–µ–º —Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å —Ä–µ
 212:Core/Src/main.c **** 	uint16_t Size_ = 1; //–î–ª–∏–Ω–∞ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö, 1 –±–∞–π—Ç = 1 —Ä–µ–≥–∏—
 213:Core/Src/main.c **** 	uint32_t Timeout_ = 0xFF; //–¢–∞–π–º–∞—É—Ç, 255 –º—Å
 214:Core/Src/main.c **** 
 215:Core/Src/main.c **** 	UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, dev_address, register_address, I2C_MEMADD_SIZE_8BIT,
 216:Core/Src/main.c **** 	if (data == 0x69)
 217:Core/Src/main.c **** 	{
 218:Core/Src/main.c **** 		char buffer [100] = "ACCELEROMETER READ SUCCESSFULLY (nice)\n\r";
 219:Core/Src/main.c **** 		HAL_UART_Transmit(&huart1, (uint8_t *)buffer, strlen(buffer), 1000);
 220:Core/Src/main.c **** 
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****     uint8_t acc_power_mode = 0b01000100;
 223:Core/Src/main.c ****     UART_Send_HAL_Status(HAL_I2C_Mem_Write(&hi2c1, dev_address, 0x10, I2C_MEMADD_SIZE_8BIT, &acc_po
 224:Core/Src/main.c **** 	} else
 225:Core/Src/main.c **** 	{
 226:Core/Src/main.c **** 		char buffer [50] = "ACCELEROMETER READ ERROR\n\r";
 227:Core/Src/main.c **** 		HAL_UART_Transmit(&huart1, (uint8_t *)buffer, strlen(buffer), 1000);
 228:Core/Src/main.c **** 	}
 229:Core/Src/main.c **** }
 230:Core/Src/main.c **** 
 231:Core/Src/main.c **** void Read_Acc(double* buffer_xyz)
 232:Core/Src/main.c **** {
 233:Core/Src/main.c **** 	uint8_t dev_address = 0b11010100;
 234:Core/Src/main.c ****   uint16_t raw_val[2];
 235:Core/Src/main.c **** 
 236:Core/Src/main.c **** 	UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, dev_address, 0x28, I2C_MEMADD_SIZE_8BIT, (uint8_t*)r
 237:Core/Src/main.c **** 	UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, dev_address, 0x29, I2C_MEMADD_SIZE_8BIT, (uint8_t*)r
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   int16_t x_val = raw_val[1] << 8 | raw_val[0];
 240:Core/Src/main.c ****   raw_val[0] = raw_val[1] = 0;
 241:Core/Src/main.c ****   
 242:Core/Src/main.c **** 	UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, dev_address, 0x2A, I2C_MEMADD_SIZE_8BIT, (uint8_t*)r
 243:Core/Src/main.c **** 	UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, dev_address, 0x2B, I2C_MEMADD_SIZE_8BIT, (uint8_t*)r
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****   int16_t y_val = raw_val[1] << 8 | raw_val[0];
 246:Core/Src/main.c ****   raw_val[0] = raw_val[1] = 0;
 247:Core/Src/main.c ****   
 248:Core/Src/main.c **** 	UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, dev_address, 0x2C, I2C_MEMADD_SIZE_8BIT, (uint8_t*)r
 249:Core/Src/main.c **** 	UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, dev_address, 0x2D, I2C_MEMADD_SIZE_8BIT, (uint8_t*)r
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   int16_t z_val = raw_val[1] << 8 | raw_val[0];
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   buffer_xyz[0] = ((double)x_val * 0.488/1000)*9.81;
 254:Core/Src/main.c ****   buffer_xyz[1] = ((double)y_val * 0.488/1000)*9.81;
 255:Core/Src/main.c ****   buffer_xyz[2] = ((double)z_val * 0.488/1000)*9.81;
 256:Core/Src/main.c **** }
 257:Core/Src/main.c **** 
 258:Core/Src/main.c **** /* USER CODE END 0 */
 259:Core/Src/main.c **** 
ARM GAS  /tmp/ccAzc5t0.s 			page 6


 260:Core/Src/main.c **** /**
 261:Core/Src/main.c ****   * @brief  The application entry point.
 262:Core/Src/main.c ****   * @retval int
 263:Core/Src/main.c ****   */
 264:Core/Src/main.c **** int main(void)
 265:Core/Src/main.c **** {
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 268:Core/Src/main.c ****     char data[100] =  "F411 says: I'm alive\n\r\0";
 269:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)data, strlen(data), 1000);
 270:Core/Src/main.c **** 
 271:Core/Src/main.c ****   /* USER CODE END 1 */
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 276:Core/Src/main.c ****   HAL_Init();
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   /* USER CODE END Init */
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****   /* Configure the system clock */
 283:Core/Src/main.c ****   SystemClock_Config();
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 286:Core/Src/main.c **** 
 287:Core/Src/main.c ****   /* USER CODE END SysInit */
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   /* Initialize all configured peripherals */
 290:Core/Src/main.c ****   MX_GPIO_Init();
 291:Core/Src/main.c ****   MX_I2C1_Init();
 292:Core/Src/main.c ****   MX_USART1_UART_Init();
 293:Core/Src/main.c ****   MX_TIM1_Init();
 294:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 295:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****   Acc_LSM_Init();
 298:Core/Src/main.c ****   InitBmp();
 299:Core/Src/main.c ****   Read_Dig_Variables();
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****   //datasheet page 25, register ctrl_meas
 302:Core/Src/main.c ****   uint8_t ctrl_meas = 0b01001001;
 303:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Write(&hi2c1, 0x76 << 1, 0xF4, I2C_MEMADD_SIZE_8BIT, &ctrl_meas,
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****   /* USER CODE END 2 */
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****   /* Infinite loop */
 308:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 309:Core/Src/main.c ****   while (1)
 310:Core/Src/main.c ****   {
 311:Core/Src/main.c ****     HAL_Delay(1000);
 312:Core/Src/main.c **** 
 313:Core/Src/main.c ****     char data[100] =  "------------------------BMP----------------------\n\r\0";
 314:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)data, strlen(data), 1000);
 315:Core/Src/main.c **** 
 316:Core/Src/main.c ****     
ARM GAS  /tmp/ccAzc5t0.s 			page 7


 317:Core/Src/main.c ****     uint8_t temp_raw[3];
 318:Core/Src/main.c ****     temp_raw[0] = temp_raw[1] = temp_raw[2]  = 0;
 319:Core/Src/main.c ****     UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0xFA, I2C_MEMADD_SIZE_8BIT, temp_raw, 
 320:Core/Src/main.c ****     UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0xFB, I2C_MEMADD_SIZE_8BIT, temp_raw+1
 321:Core/Src/main.c ****     UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0xFC, I2C_MEMADD_SIZE_8BIT, temp_raw+2
 322:Core/Src/main.c **** 
 323:Core/Src/main.c ****     int32_t temp_raw_32 = (int32_t) ( ((uint32_t)temp_raw[0] << 12) | ((uint32_t)temp_raw[1] << 4) 
 324:Core/Src/main.c ****     actual_temp = 0;
 325:Core/Src/main.c ****     actual_temp = bmp280_compensate_T_int32(temp_raw_32);
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****     char temp_str[100]; 
 328:Core/Src/main.c ****     sprintf(temp_str, "Temperature: %.2f Celsius\n\n\r", ((float)actual_temp)/100);
 329:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)temp_str, strlen(temp_str), 1000);
 330:Core/Src/main.c **** 
 331:Core/Src/main.c ****     uint8_t pressure_raw[3];
 332:Core/Src/main.c ****     UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0xF7, I2C_MEMADD_SIZE_8BIT, pressure_r
 333:Core/Src/main.c ****     UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0xF8, I2C_MEMADD_SIZE_8BIT, pressure_r
 334:Core/Src/main.c ****     UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0xF9, I2C_MEMADD_SIZE_8BIT, pressure_r
 335:Core/Src/main.c **** 
 336:Core/Src/main.c ****     int32_t pressure_raw_32 = (int32_t) ( ((uint32_t)pressure_raw[0] << 12) | ((uint32_t)pressure_r
 337:Core/Src/main.c ****     actual_pressure = bmp280_compensate_P_int64(pressure_raw_32);
 338:Core/Src/main.c **** 
 339:Core/Src/main.c ****     char pressure_str[100];
 340:Core/Src/main.c ****     sprintf(pressure_str, "Pressure: %.4f Pa\n\n\r",  ((float)actual_pressure)/256);
 341:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)pressure_str, strlen(pressure_str), 1000);
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****     char data1[100] =  "------------------------ACC----------------------\n\r\0";
 344:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)data1, strlen(data), 1000);
 345:Core/Src/main.c **** 
 346:Core/Src/main.c ****     double acc_vals[3];
 347:Core/Src/main.c ****     Read_Acc(acc_vals);
 348:Core/Src/main.c **** 
 349:Core/Src/main.c ****     char acc_str[100]; 
 350:Core/Src/main.c ****     sprintf(acc_str, "Acceleration: (%0.4f, %0.4f, %0.4f) \n\n\r", acc_vals[0], acc_vals[1], acc_va
 351:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)acc_str, strlen(acc_str), 1000);
 352:Core/Src/main.c **** 
 353:Core/Src/main.c ****     /* USER CODE END WHILE */
 354:Core/Src/main.c **** 
 355:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 356:Core/Src/main.c ****   }
 357:Core/Src/main.c ****   /* USER CODE END 3 */
 358:Core/Src/main.c **** }
 359:Core/Src/main.c **** 
 360:Core/Src/main.c **** /**
 361:Core/Src/main.c ****   * @brief System Clock Configuration
 362:Core/Src/main.c ****   * @retval None
 363:Core/Src/main.c ****   */
 364:Core/Src/main.c **** void SystemClock_Config(void)
 365:Core/Src/main.c **** {
 366:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 367:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 368:Core/Src/main.c **** 
 369:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 370:Core/Src/main.c ****   */
 371:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 372:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 373:Core/Src/main.c **** 
ARM GAS  /tmp/ccAzc5t0.s 			page 8


 374:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 375:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 376:Core/Src/main.c ****   */
 377:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 378:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 379:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 380:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 381:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 382:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 383:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 100;
 384:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 385:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 386:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 387:Core/Src/main.c ****   {
 388:Core/Src/main.c ****     Error_Handler();
 389:Core/Src/main.c ****   }
 390:Core/Src/main.c **** 
 391:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 392:Core/Src/main.c ****   */
 393:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 394:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 395:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 396:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 397:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 398:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 399:Core/Src/main.c **** 
 400:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 401:Core/Src/main.c ****   {
 402:Core/Src/main.c ****     Error_Handler();
 403:Core/Src/main.c ****   }
 404:Core/Src/main.c **** }
 405:Core/Src/main.c **** 
 406:Core/Src/main.c **** /**
 407:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 408:Core/Src/main.c ****   * @param None
 409:Core/Src/main.c ****   * @retval None
 410:Core/Src/main.c ****   */
 411:Core/Src/main.c **** static void MX_I2C1_Init(void)
 412:Core/Src/main.c **** {
 413:Core/Src/main.c **** 
 414:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 415:Core/Src/main.c **** 
 416:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 417:Core/Src/main.c **** 
 418:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 419:Core/Src/main.c **** 
 420:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 421:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 422:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 423:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 424:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 425:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 426:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 427:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 428:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 429:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 430:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
ARM GAS  /tmp/ccAzc5t0.s 			page 9


 431:Core/Src/main.c ****   {
 432:Core/Src/main.c ****     Error_Handler();
 433:Core/Src/main.c ****   }
 434:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 435:Core/Src/main.c **** 
 436:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 437:Core/Src/main.c **** 
 438:Core/Src/main.c **** }
 439:Core/Src/main.c **** 
 440:Core/Src/main.c **** /**
 441:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 442:Core/Src/main.c ****   * @param None
 443:Core/Src/main.c ****   * @retval None
 444:Core/Src/main.c ****   */
 445:Core/Src/main.c **** static void MX_TIM1_Init(void)
 446:Core/Src/main.c **** {
 447:Core/Src/main.c **** 
 448:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 449:Core/Src/main.c **** 
 450:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 451:Core/Src/main.c **** 
 452:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 453:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 454:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 455:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 458:Core/Src/main.c **** 
 459:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 460:Core/Src/main.c ****   htim1.Instance = TIM1;
 461:Core/Src/main.c ****   htim1.Init.Prescaler = 999;
 462:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 463:Core/Src/main.c ****   htim1.Init.Period = 1999;
 464:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 465:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 466:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 467:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 468:Core/Src/main.c ****   {
 469:Core/Src/main.c ****     Error_Handler();
 470:Core/Src/main.c ****   }
 471:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 472:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 473:Core/Src/main.c ****   {
 474:Core/Src/main.c ****     Error_Handler();
 475:Core/Src/main.c ****   }
 476:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 477:Core/Src/main.c ****   {
 478:Core/Src/main.c ****     Error_Handler();
 479:Core/Src/main.c ****   }
 480:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 481:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 482:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 483:Core/Src/main.c ****   {
 484:Core/Src/main.c ****     Error_Handler();
 485:Core/Src/main.c ****   }
 486:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 487:Core/Src/main.c ****   sConfigOC.Pulse = 250;
ARM GAS  /tmp/ccAzc5t0.s 			page 10


 488:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 489:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 490:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 491:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 492:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 493:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 494:Core/Src/main.c ****   {
 495:Core/Src/main.c ****     Error_Handler();
 496:Core/Src/main.c ****   }
 497:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 498:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 499:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 500:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 501:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 502:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 503:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 504:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 505:Core/Src/main.c ****   {
 506:Core/Src/main.c ****     Error_Handler();
 507:Core/Src/main.c ****   }
 508:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 509:Core/Src/main.c **** 
 510:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 511:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 512:Core/Src/main.c **** 
 513:Core/Src/main.c **** }
 514:Core/Src/main.c **** 
 515:Core/Src/main.c **** /**
 516:Core/Src/main.c ****   * @brief USART1 Initialization Function
 517:Core/Src/main.c ****   * @param None
 518:Core/Src/main.c ****   * @retval None
 519:Core/Src/main.c ****   */
 520:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 521:Core/Src/main.c **** {
 522:Core/Src/main.c **** 
 523:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 524:Core/Src/main.c **** 
 525:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 526:Core/Src/main.c **** 
 527:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 528:Core/Src/main.c **** 
 529:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 530:Core/Src/main.c ****   huart1.Instance = USART1;
 531:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 532:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 533:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 534:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 535:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 536:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 537:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 538:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 539:Core/Src/main.c ****   {
 540:Core/Src/main.c ****     Error_Handler();
 541:Core/Src/main.c ****   }
 542:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 543:Core/Src/main.c **** 
 544:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
ARM GAS  /tmp/ccAzc5t0.s 			page 11


 545:Core/Src/main.c **** 
 546:Core/Src/main.c **** }
 547:Core/Src/main.c **** 
 548:Core/Src/main.c **** /**
 549:Core/Src/main.c ****   * @brief GPIO Initialization Function
 550:Core/Src/main.c ****   * @param None
 551:Core/Src/main.c ****   * @retval None
 552:Core/Src/main.c ****   */
 553:Core/Src/main.c **** static void MX_GPIO_Init(void)
 554:Core/Src/main.c **** {
  28              		.loc 1 554 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 82B0     		sub	sp, sp, #8
  34              		.cfi_def_cfa_offset 8
 555:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 556:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 557:Core/Src/main.c **** 
 558:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 559:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  35              		.loc 1 559 3 view .LVU1
  36              	.LBB4:
  37              		.loc 1 559 3 view .LVU2
  38 0002 0021     		movs	r1, #0
  39 0004 0091     		str	r1, [sp]
  40              		.loc 1 559 3 view .LVU3
  41 0006 0B4B     		ldr	r3, .L3
  42 0008 1A6B     		ldr	r2, [r3, #48]
  43 000a 42F00102 		orr	r2, r2, #1
  44 000e 1A63     		str	r2, [r3, #48]
  45              		.loc 1 559 3 view .LVU4
  46 0010 1A6B     		ldr	r2, [r3, #48]
  47 0012 02F00102 		and	r2, r2, #1
  48 0016 0092     		str	r2, [sp]
  49              		.loc 1 559 3 view .LVU5
  50 0018 009A     		ldr	r2, [sp]
  51              	.LBE4:
  52              		.loc 1 559 3 view .LVU6
 560:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  53              		.loc 1 560 3 view .LVU7
  54              	.LBB5:
  55              		.loc 1 560 3 view .LVU8
  56 001a 0191     		str	r1, [sp, #4]
  57              		.loc 1 560 3 view .LVU9
  58 001c 1A6B     		ldr	r2, [r3, #48]
  59 001e 42F00202 		orr	r2, r2, #2
  60 0022 1A63     		str	r2, [r3, #48]
  61              		.loc 1 560 3 view .LVU10
  62 0024 1B6B     		ldr	r3, [r3, #48]
  63 0026 03F00203 		and	r3, r3, #2
  64 002a 0193     		str	r3, [sp, #4]
  65              		.loc 1 560 3 view .LVU11
  66 002c 019B     		ldr	r3, [sp, #4]
  67              	.LBE5:
  68              		.loc 1 560 3 view .LVU12
ARM GAS  /tmp/ccAzc5t0.s 			page 12


 561:Core/Src/main.c **** 
 562:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 563:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 564:Core/Src/main.c **** }
  69              		.loc 1 564 1 is_stmt 0 view .LVU13
  70 002e 02B0     		add	sp, sp, #8
  71              		.cfi_def_cfa_offset 0
  72              		@ sp needed
  73 0030 7047     		bx	lr
  74              	.L4:
  75 0032 00BF     		.align	2
  76              	.L3:
  77 0034 00380240 		.word	1073887232
  78              		.cfi_endproc
  79              	.LFE149:
  81              		.section	.text.bmp280_compensate_T_int32,"ax",%progbits
  82              		.align	1
  83              		.global	bmp280_compensate_T_int32
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  88              	bmp280_compensate_T_int32:
  89              	.LVL0:
  90              	.LFB137:
  93:Core/Src/main.c **** 	int32_t var1, var2, T;
  91              		.loc 1 93 1 is_stmt 1 view -0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
  94:Core/Src/main.c **** 	var1 = ((((adc_T>>3) - ((int32_t)dig_T1<<1))) * ((int32_t)dig_T2)) >> 11;
  96              		.loc 1 94 2 view .LVU15
  95:Core/Src/main.c **** 	var2 = (((((adc_T>>4) - ((int32_t)dig_T1)) * ((adc_T>>4) - ((int32_t)dig_T1)))
  97              		.loc 1 95 2 view .LVU16
  95:Core/Src/main.c **** 	var2 = (((((adc_T>>4) - ((int32_t)dig_T1)) * ((adc_T>>4) - ((int32_t)dig_T1)))
  98              		.loc 1 95 26 is_stmt 0 view .LVU17
  99 0000 0E4B     		ldr	r3, .L6
 100 0002 1B88     		ldrh	r3, [r3]
  95:Core/Src/main.c **** 	var2 = (((((adc_T>>4) - ((int32_t)dig_T1)) * ((adc_T>>4) - ((int32_t)dig_T1)))
 101              		.loc 1 95 41 view .LVU18
 102 0004 5A00     		lsls	r2, r3, #1
  95:Core/Src/main.c **** 	var2 = (((((adc_T>>4) - ((int32_t)dig_T1)) * ((adc_T>>4) - ((int32_t)dig_T1)))
 103              		.loc 1 95 23 view .LVU19
 104 0006 C2EBE002 		rsb	r2, r2, r0, asr #3
  95:Core/Src/main.c **** 	var2 = (((((adc_T>>4) - ((int32_t)dig_T1)) * ((adc_T>>4) - ((int32_t)dig_T1)))
 105              		.loc 1 95 51 view .LVU20
 106 000a 0D49     		ldr	r1, .L6+4
 107 000c B1F90010 		ldrsh	r1, [r1]
  95:Core/Src/main.c **** 	var2 = (((((adc_T>>4) - ((int32_t)dig_T1)) * ((adc_T>>4) - ((int32_t)dig_T1)))
 108              		.loc 1 95 48 view .LVU21
 109 0010 01FB02F2 		mul	r2, r1, r2
 110              	.LVL1:
  96:Core/Src/main.c **** 	>> 12) *
 111              		.loc 1 96 2 is_stmt 1 view .LVU22
  96:Core/Src/main.c **** 	>> 12) *
 112              		.loc 1 96 24 is_stmt 0 view .LVU23
 113 0014 C3EB2010 		rsb	r0, r3, r0, asr #4
ARM GAS  /tmp/ccAzc5t0.s 			page 13


 114              	.LVL2:
  96:Core/Src/main.c **** 	>> 12) *
 115              		.loc 1 96 45 view .LVU24
 116 0018 00FB00F0 		mul	r0, r0, r0
  97:Core/Src/main.c **** 	((int32_t)dig_T3)) >> 14;
 117              		.loc 1 97 2 view .LVU25
 118 001c 0013     		asrs	r0, r0, #12
  98:Core/Src/main.c **** 	t_fine = var1 + var2;
 119              		.loc 1 98 3 view .LVU26
 120 001e 094B     		ldr	r3, .L6+8
 121 0020 B3F90030 		ldrsh	r3, [r3]
  97:Core/Src/main.c **** 	((int32_t)dig_T3)) >> 14;
 122              		.loc 1 97 9 view .LVU27
 123 0024 03FB00F0 		mul	r0, r3, r0
  96:Core/Src/main.c **** 	>> 12) *
 124              		.loc 1 96 7 view .LVU28
 125 0028 8013     		asrs	r0, r0, #14
 126              	.LVL3:
  99:Core/Src/main.c **** 	T = (t_fine * 5 + 128) >> 8;
 127              		.loc 1 99 2 is_stmt 1 view .LVU29
  99:Core/Src/main.c **** 	T = (t_fine * 5 + 128) >> 8;
 128              		.loc 1 99 16 is_stmt 0 view .LVU30
 129 002a 00EBE220 		add	r0, r0, r2, asr #11
 130              	.LVL4:
  99:Core/Src/main.c **** 	T = (t_fine * 5 + 128) >> 8;
 131              		.loc 1 99 9 view .LVU31
 132 002e 064B     		ldr	r3, .L6+12
 133              	.LVL5:
  99:Core/Src/main.c **** 	T = (t_fine * 5 + 128) >> 8;
 134              		.loc 1 99 9 view .LVU32
 135 0030 1860     		str	r0, [r3]
 100:Core/Src/main.c **** 	return T;
 136              		.loc 1 100 2 is_stmt 1 view .LVU33
 100:Core/Src/main.c **** 	return T;
 137              		.loc 1 100 14 is_stmt 0 view .LVU34
 138 0032 00EB8000 		add	r0, r0, r0, lsl #2
 100:Core/Src/main.c **** 	return T;
 139              		.loc 1 100 18 view .LVU35
 140 0036 8030     		adds	r0, r0, #128
 141              	.LVL6:
 101:Core/Src/main.c **** }
 142              		.loc 1 101 2 is_stmt 1 view .LVU36
 102:Core/Src/main.c **** 
 143              		.loc 1 102 1 is_stmt 0 view .LVU37
 144 0038 0012     		asrs	r0, r0, #8
 145              	.LVL7:
 102:Core/Src/main.c **** 
 146              		.loc 1 102 1 view .LVU38
 147 003a 7047     		bx	lr
 148              	.L7:
 149              		.align	2
 150              	.L6:
 151 003c 00000000 		.word	dig_T1
 152 0040 00000000 		.word	dig_T2
 153 0044 00000000 		.word	dig_T3
 154 0048 00000000 		.word	t_fine
 155              		.cfi_endproc
ARM GAS  /tmp/ccAzc5t0.s 			page 14


 156              	.LFE137:
 158              		.section	.text.bmp280_compensate_P_int64,"ax",%progbits
 159              		.align	1
 160              		.global	bmp280_compensate_P_int64
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 165              	bmp280_compensate_P_int64:
 166              	.LVL8:
 167              	.LFB138:
 107:Core/Src/main.c **** 	int64_t var1, var2, p;
 168              		.loc 1 107 1 is_stmt 1 view -0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 107:Core/Src/main.c **** 	int64_t var1, var2, p;
 172              		.loc 1 107 1 is_stmt 0 view .LVU40
 173 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 174              		.cfi_def_cfa_offset 24
 175              		.cfi_offset 3, -24
 176              		.cfi_offset 4, -20
 177              		.cfi_offset 5, -16
 178              		.cfi_offset 6, -12
 179              		.cfi_offset 7, -8
 180              		.cfi_offset 14, -4
 108:Core/Src/main.c **** 	var1 = ((int64_t)t_fine) - 128000;
 181              		.loc 1 108 2 is_stmt 1 view .LVU41
 109:Core/Src/main.c **** 	var2 = var1 * var1 * (int64_t)dig_P6;
 182              		.loc 1 109 2 view .LVU42
 109:Core/Src/main.c **** 	var2 = var1 * var1 * (int64_t)dig_P6;
 183              		.loc 1 109 10 is_stmt 0 view .LVU43
 184 0002 664B     		ldr	r3, .L12
 185 0004 1968     		ldr	r1, [r3]
 186 0006 CB17     		asrs	r3, r1, #31
 109:Core/Src/main.c **** 	var2 = var1 * var1 * (int64_t)dig_P6;
 187              		.loc 1 109 7 view .LVU44
 188 0008 B1F5FA31 		subs	r1, r1, #128000
 189 000c 43F1FF33 		adc	r3, r3, #-1
 190              	.LVL9:
 110:Core/Src/main.c **** 	var2 = var2 + ((var1*(int64_t)dig_P5)<<17);
 191              		.loc 1 110 2 is_stmt 1 view .LVU45
 110:Core/Src/main.c **** 	var2 = var2 + ((var1*(int64_t)dig_P5)<<17);
 192              		.loc 1 110 14 is_stmt 0 view .LVU46
 193 0010 01FB03F4 		mul	r4, r1, r3
 194 0014 A1FB0126 		umull	r2, r6, r1, r1
 195 0018 06EB4406 		add	r6, r6, r4, lsl #1
 110:Core/Src/main.c **** 	var2 = var2 + ((var1*(int64_t)dig_P5)<<17);
 196              		.loc 1 110 23 view .LVU47
 197 001c 604C     		ldr	r4, .L12+4
 198 001e B4F90050 		ldrsh	r5, [r4]
 199 0022 EC17     		asrs	r4, r5, #31
 110:Core/Src/main.c **** 	var2 = var2 + ((var1*(int64_t)dig_P5)<<17);
 200              		.loc 1 110 7 view .LVU48
 201 0024 02FB04F4 		mul	r4, r2, r4
 202 0028 05FB0644 		mla	r4, r5, r6, r4
 203 002c A2FB0575 		umull	r7, r5, r2, r5
 204 0030 2C44     		add	r4, r4, r5
ARM GAS  /tmp/ccAzc5t0.s 			page 15


 205              	.LVL10:
 111:Core/Src/main.c **** 	var2 = var2 + (((int64_t)dig_P4)<<35);
 206              		.loc 1 111 2 is_stmt 1 view .LVU49
 111:Core/Src/main.c **** 	var2 = var2 + (((int64_t)dig_P4)<<35);
 207              		.loc 1 111 23 is_stmt 0 view .LVU50
 208 0032 5C4D     		ldr	r5, .L12+8
 209 0034 B5F900C0 		ldrsh	ip, [r5]
 210 0038 4FEAEC75 		asr	r5, ip, #31
 111:Core/Src/main.c **** 	var2 = var2 + (((int64_t)dig_P4)<<35);
 211              		.loc 1 111 22 view .LVU51
 212 003c 0CFB03FE 		mul	lr, ip, r3
 213 0040 01FB05EE 		mla	lr, r1, r5, lr
 214 0044 ACFB01C5 		umull	ip, r5, ip, r1
 215 0048 AE44     		add	lr, lr, r5
 111:Core/Src/main.c **** 	var2 = var2 + (((int64_t)dig_P4)<<35);
 216              		.loc 1 111 39 view .LVU52
 217 004a 4FEA4E4E 		lsl	lr, lr, #17
 218 004e 4EEADC3E 		orr	lr, lr, ip, lsr #15
 219 0052 4FEA4C4C 		lsl	ip, ip, #17
 111:Core/Src/main.c **** 	var2 = var2 + (((int64_t)dig_P4)<<35);
 220              		.loc 1 111 7 view .LVU53
 221 0056 1CEB070C 		adds	ip, ip, r7
 222 005a 44EB0E04 		adc	r4, r4, lr
 223              	.LVL11:
 112:Core/Src/main.c **** 	var1 = ((var1 * var1 * (int64_t)dig_P3)>>8) + ((var1 * (int64_t)dig_P2)<<12);
 224              		.loc 1 112 2 is_stmt 1 view .LVU54
 112:Core/Src/main.c **** 	var1 = ((var1 * var1 * (int64_t)dig_P3)>>8) + ((var1 * (int64_t)dig_P2)<<12);
 225              		.loc 1 112 18 is_stmt 0 view .LVU55
 226 005e 524D     		ldr	r5, .L12+12
 227 0060 B5F90050 		ldrsh	r5, [r5]
 112:Core/Src/main.c **** 	var1 = ((var1 * var1 * (int64_t)dig_P3)>>8) + ((var1 * (int64_t)dig_P2)<<12);
 228              		.loc 1 112 7 view .LVU56
 229 0064 04EBC504 		add	r4, r4, r5, lsl #3
 230              	.LVL12:
 113:Core/Src/main.c **** 	var1 = (((((int64_t)1)<<47)+var1))*((int64_t)dig_P1)>>33;
 231              		.loc 1 113 2 is_stmt 1 view .LVU57
 113:Core/Src/main.c **** 	var1 = (((((int64_t)1)<<47)+var1))*((int64_t)dig_P1)>>33;
 232              		.loc 1 113 25 is_stmt 0 view .LVU58
 233 0068 504D     		ldr	r5, .L12+16
 234 006a B5F900E0 		ldrsh	lr, [r5]
 235 006e 4FEAEE75 		asr	r5, lr, #31
 113:Core/Src/main.c **** 	var1 = (((((int64_t)1)<<47)+var1))*((int64_t)dig_P1)>>33;
 236              		.loc 1 113 23 view .LVU59
 237 0072 02FB05F5 		mul	r5, r2, r5
 238 0076 0EFB0655 		mla	r5, lr, r6, r5
 239 007a A2FB0E2E 		umull	r2, lr, r2, lr
 240 007e 7544     		add	r5, r5, lr
 113:Core/Src/main.c **** 	var1 = (((((int64_t)1)<<47)+var1))*((int64_t)dig_P1)>>33;
 241              		.loc 1 113 41 view .LVU60
 242 0080 120A     		lsrs	r2, r2, #8
 243 0082 42EA0562 		orr	r2, r2, r5, lsl #24
 113:Core/Src/main.c **** 	var1 = (((((int64_t)1)<<47)+var1))*((int64_t)dig_P1)>>33;
 244              		.loc 1 113 57 view .LVU61
 245 0086 4A4E     		ldr	r6, .L12+20
 246 0088 B6F900E0 		ldrsh	lr, [r6]
 247 008c 4FEAEE76 		asr	r6, lr, #31
 113:Core/Src/main.c **** 	var1 = (((((int64_t)1)<<47)+var1))*((int64_t)dig_P1)>>33;
ARM GAS  /tmp/ccAzc5t0.s 			page 16


 248              		.loc 1 113 55 view .LVU62
 249 0090 0EFB03F3 		mul	r3, lr, r3
 250              	.LVL13:
 113:Core/Src/main.c **** 	var1 = (((((int64_t)1)<<47)+var1))*((int64_t)dig_P1)>>33;
 251              		.loc 1 113 55 view .LVU63
 252 0094 01FB0633 		mla	r3, r1, r6, r3
 253 0098 AEFB01E1 		umull	lr, r1, lr, r1
 254              	.LVL14:
 113:Core/Src/main.c **** 	var1 = (((((int64_t)1)<<47)+var1))*((int64_t)dig_P1)>>33;
 255              		.loc 1 113 55 view .LVU64
 256 009c 0B44     		add	r3, r3, r1
 113:Core/Src/main.c **** 	var1 = (((((int64_t)1)<<47)+var1))*((int64_t)dig_P1)>>33;
 257              		.loc 1 113 73 view .LVU65
 258 009e 1B03     		lsls	r3, r3, #12
 259 00a0 43EA1E53 		orr	r3, r3, lr, lsr #20
 260 00a4 4FEA0E3E 		lsl	lr, lr, #12
 113:Core/Src/main.c **** 	var1 = (((((int64_t)1)<<47)+var1))*((int64_t)dig_P1)>>33;
 261              		.loc 1 113 7 view .LVU66
 262 00a8 12EB0E02 		adds	r2, r2, lr
 263 00ac 43EB2523 		adc	r3, r3, r5, asr #8
 264              	.LVL15:
 114:Core/Src/main.c **** 
 265              		.loc 1 114 2 is_stmt 1 view .LVU67
 114:Core/Src/main.c **** 
 266              		.loc 1 114 29 is_stmt 0 view .LVU68
 267 00b0 03F50043 		add	r3, r3, #32768
 268              	.LVL16:
 114:Core/Src/main.c **** 
 269              		.loc 1 114 38 view .LVU69
 270 00b4 3F49     		ldr	r1, .L12+24
 271 00b6 0D88     		ldrh	r5, [r1]
 114:Core/Src/main.c **** 
 272              		.loc 1 114 36 view .LVU70
 273 00b8 A2FB0521 		umull	r2, r1, r2, r5
 274              	.LVL17:
 114:Core/Src/main.c **** 
 275              		.loc 1 114 36 view .LVU71
 276 00bc 05FB0311 		mla	r1, r5, r3, r1
 114:Core/Src/main.c **** 
 277              		.loc 1 114 7 view .LVU72
 278 00c0 4A10     		asrs	r2, r1, #1
 279 00c2 CB17     		asrs	r3, r1, #31
 280              	.LVL18:
 116:Core/Src/main.c **** 	{
 281              		.loc 1 116 2 is_stmt 1 view .LVU73
 116:Core/Src/main.c **** 	{
 282              		.loc 1 116 5 is_stmt 0 view .LVU74
 283 00c4 53EA6101 		orrs	r1, r3, r1, asr #1
 284 00c8 65D0     		beq	.L10
 121:Core/Src/main.c **** 	p = (((p<<31)-var2)*3125)/var1;
 285              		.loc 1 121 2 is_stmt 1 view .LVU75
 121:Core/Src/main.c **** 	p = (((p<<31)-var2)*3125)/var1;
 286              		.loc 1 121 13 is_stmt 0 view .LVU76
 287 00ca C0F5801E 		rsb	lr, r0, #1048576
 288              	.LVL19:
 122:Core/Src/main.c **** 	var1 = (((int64_t)dig_P9) * (p>>13) * (p>>13)) >> 25;
 289              		.loc 1 122 2 is_stmt 1 view .LVU77
ARM GAS  /tmp/ccAzc5t0.s 			page 17


 122:Core/Src/main.c **** 	var1 = (((int64_t)dig_P9) * (p>>13) * (p>>13)) >> 25;
 290              		.loc 1 122 10 is_stmt 0 view .LVU78
 291 00ce 4FEA6E01 		asr	r1, lr, #1
 292 00d2 4FEACE7E 		lsl	lr, lr, #31
 293              	.LVL20:
 122:Core/Src/main.c **** 	var1 = (((int64_t)dig_P9) * (p>>13) * (p>>13)) >> 25;
 294              		.loc 1 122 15 view .LVU79
 295 00d6 BEEB0C0E 		subs	lr, lr, ip
 296 00da 61EB0404 		sbc	r4, r1, r4
 297              	.LVL21:
 122:Core/Src/main.c **** 	var1 = (((int64_t)dig_P9) * (p>>13) * (p>>13)) >> 25;
 298              		.loc 1 122 21 view .LVU80
 299 00de 1EEB0E0C 		adds	ip, lr, lr
 300              	.LVL22:
 122:Core/Src/main.c **** 	var1 = (((int64_t)dig_P9) * (p>>13) * (p>>13)) >> 25;
 301              		.loc 1 122 21 view .LVU81
 302 00e2 44EB0401 		adc	r1, r4, r4
 303 00e6 1CEB0E0C 		adds	ip, ip, lr
 304 00ea 44EB0101 		adc	r1, r4, r1
 305 00ee 8801     		lsls	r0, r1, #6
 306              	.LVL23:
 122:Core/Src/main.c **** 	var1 = (((int64_t)dig_P9) * (p>>13) * (p>>13)) >> 25;
 307              		.loc 1 122 21 view .LVU82
 308 00f0 40EA9C60 		orr	r0, r0, ip, lsr #26
 309 00f4 4FEA8C15 		lsl	r5, ip, #6
 310 00f8 1CEB050C 		adds	ip, ip, r5
 311 00fc 41EB0001 		adc	r1, r1, r0
 312 0100 8900     		lsls	r1, r1, #2
 313 0102 41EA9C71 		orr	r1, r1, ip, lsr #30
 314 0106 4FEA8C0C 		lsl	ip, ip, #2
 315 010a 1CEB0E0C 		adds	ip, ip, lr
 316 010e 44EB0101 		adc	r1, r4, r1
 317 0112 8900     		lsls	r1, r1, #2
 318 0114 41EA9C71 		orr	r1, r1, ip, lsr #30
 319 0118 4FEA8C00 		lsl	r0, ip, #2
 320 011c 10EB0E00 		adds	r0, r0, lr
 122:Core/Src/main.c **** 	var1 = (((int64_t)dig_P9) * (p>>13) * (p>>13)) >> 25;
 321              		.loc 1 122 4 view .LVU83
 322 0120 44EB0101 		adc	r1, r4, r1
 323 0124 FFF7FEFF 		bl	__aeabi_ldivmod
 324              	.LVL24:
 122:Core/Src/main.c **** 	var1 = (((int64_t)dig_P9) * (p>>13) * (p>>13)) >> 25;
 325              		.loc 1 122 4 view .LVU84
 326 0128 0346     		mov	r3, r0
 327              	.LVL25:
 123:Core/Src/main.c **** 	var2 = (((int64_t)dig_P8) * p) >> 19;
 328              		.loc 1 123 2 is_stmt 1 view .LVU85
 123:Core/Src/main.c **** 	var2 = (((int64_t)dig_P8) * p) >> 19;
 329              		.loc 1 123 11 is_stmt 0 view .LVU86
 330 012a 234A     		ldr	r2, .L12+28
 331 012c B2F90050 		ldrsh	r5, [r2]
 332 0130 EF17     		asrs	r7, r5, #31
 123:Core/Src/main.c **** 	var2 = (((int64_t)dig_P8) * p) >> 19;
 333              		.loc 1 123 32 view .LVU87
 334 0132 420B     		lsrs	r2, r0, #13
 335 0134 42EAC142 		orr	r2, r2, r1, lsl #19
 336 0138 4E13     		asrs	r6, r1, #13
ARM GAS  /tmp/ccAzc5t0.s 			page 18


 123:Core/Src/main.c **** 	var2 = (((int64_t)dig_P8) * p) >> 19;
 337              		.loc 1 123 28 view .LVU88
 338 013a 05FB06F4 		mul	r4, r5, r6
 339 013e 02FB0744 		mla	r4, r2, r7, r4
 340 0142 A5FB0257 		umull	r5, r7, r5, r2
 341 0146 3C44     		add	r4, r4, r7
 123:Core/Src/main.c **** 	var2 = (((int64_t)dig_P8) * p) >> 19;
 342              		.loc 1 123 38 view .LVU89
 343 0148 02FB04F4 		mul	r4, r2, r4
 344 014c 05FB0644 		mla	r4, r5, r6, r4
 345 0150 A2FB0525 		umull	r2, r5, r2, r5
 346 0154 2C44     		add	r4, r4, r5
 123:Core/Src/main.c **** 	var2 = (((int64_t)dig_P8) * p) >> 19;
 347              		.loc 1 123 7 view .LVU90
 348 0156 520E     		lsrs	r2, r2, #25
 349 0158 42EAC412 		orr	r2, r2, r4, lsl #7
 350              	.LVL26:
 124:Core/Src/main.c **** 	p = ((p + var1 + var2) >> 8) + (((int64_t)dig_P7)<<4);
 351              		.loc 1 124 2 is_stmt 1 view .LVU91
 124:Core/Src/main.c **** 	p = ((p + var1 + var2) >> 8) + (((int64_t)dig_P7)<<4);
 352              		.loc 1 124 11 is_stmt 0 view .LVU92
 353 015c 174D     		ldr	r5, .L12+32
 354 015e B5F90050 		ldrsh	r5, [r5]
 355 0162 EF17     		asrs	r7, r5, #31
 124:Core/Src/main.c **** 	p = ((p + var1 + var2) >> 8) + (((int64_t)dig_P7)<<4);
 356              		.loc 1 124 28 view .LVU93
 357 0164 05FB01F6 		mul	r6, r5, r1
 358 0168 07FB0060 		mla	r0, r7, r0, r6
 359              	.LVL27:
 124:Core/Src/main.c **** 	p = ((p + var1 + var2) >> 8) + (((int64_t)dig_P7)<<4);
 360              		.loc 1 124 28 view .LVU94
 361 016c A5FB0356 		umull	r5, r6, r5, r3
 362 0170 3044     		add	r0, r0, r6
 124:Core/Src/main.c **** 	p = ((p + var1 + var2) >> 8) + (((int64_t)dig_P7)<<4);
 363              		.loc 1 124 7 view .LVU95
 364 0172 ED0C     		lsrs	r5, r5, #19
 365 0174 45EA4035 		orr	r5, r5, r0, lsl #13
 366              	.LVL28:
 125:Core/Src/main.c **** 	return (uint32_t)p;
 367              		.loc 1 125 2 is_stmt 1 view .LVU96
 125:Core/Src/main.c **** 	return (uint32_t)p;
 368              		.loc 1 125 10 is_stmt 0 view .LVU97
 369 0178 9B18     		adds	r3, r3, r2
 370              	.LVL29:
 125:Core/Src/main.c **** 	return (uint32_t)p;
 371              		.loc 1 125 10 view .LVU98
 372 017a 41EB6461 		adc	r1, r1, r4, asr #25
 125:Core/Src/main.c **** 	return (uint32_t)p;
 373              		.loc 1 125 17 view .LVU99
 374 017e 5B19     		adds	r3, r3, r5
 375 0180 41EBE041 		adc	r1, r1, r0, asr #19
 125:Core/Src/main.c **** 	return (uint32_t)p;
 376              		.loc 1 125 25 view .LVU100
 377 0184 180A     		lsrs	r0, r3, #8
 378              	.LVL30:
 125:Core/Src/main.c **** 	return (uint32_t)p;
 379              		.loc 1 125 25 view .LVU101
ARM GAS  /tmp/ccAzc5t0.s 			page 19


 380 0186 40EA0160 		orr	r0, r0, r1, lsl #24
 125:Core/Src/main.c **** 	return (uint32_t)p;
 381              		.loc 1 125 35 view .LVU102
 382 018a 0D4B     		ldr	r3, .L12+36
 383 018c B3F90030 		ldrsh	r3, [r3]
 384              	.LVL31:
 126:Core/Src/main.c **** }
 385              		.loc 1 126 2 is_stmt 1 view .LVU103
 126:Core/Src/main.c **** }
 386              		.loc 1 126 9 is_stmt 0 view .LVU104
 387 0190 00EB0310 		add	r0, r0, r3, lsl #4
 388              	.LVL32:
 389              	.L8:
 127:Core/Src/main.c **** 
 390              		.loc 1 127 1 view .LVU105
 391 0194 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 392              	.LVL33:
 393              	.L10:
 118:Core/Src/main.c **** 	}
 394              		.loc 1 118 10 view .LVU106
 395 0196 0020     		movs	r0, #0
 396              	.LVL34:
 118:Core/Src/main.c **** 	}
 397              		.loc 1 118 10 view .LVU107
 398 0198 FCE7     		b	.L8
 399              	.L13:
 400 019a 00BF     		.align	2
 401              	.L12:
 402 019c 00000000 		.word	t_fine
 403 01a0 00000000 		.word	dig_P6
 404 01a4 00000000 		.word	dig_P5
 405 01a8 00000000 		.word	dig_P4
 406 01ac 00000000 		.word	dig_P3
 407 01b0 00000000 		.word	dig_P2
 408 01b4 00000000 		.word	dig_P1
 409 01b8 00000000 		.word	dig_P9
 410 01bc 00000000 		.word	dig_P8
 411 01c0 00000000 		.word	dig_P7
 412              		.cfi_endproc
 413              	.LFE138:
 415              		.section	.rodata.InitBmp.str1.4,"aMS",%progbits,1
 416              		.align	2
 417              	.LC0:
 418 0000 424D5020 		.ascii	"BMP 0x58 READ SUCCESSFULLY\012\015\000"
 418      30783538 
 418      20524541 
 418      44205355 
 418      43434553 
 419              		.section	.text.InitBmp,"ax",%progbits
 420              		.align	1
 421              		.global	InitBmp
 422              		.syntax unified
 423              		.thumb
 424              		.thumb_func
 426              	InitBmp:
 427              	.LFB139:
 130:Core/Src/main.c **** 	uint16_t Address_Bmp280 = 0x76 << 1; //–∏–ª–∏ 0x77 - –∞–¥—Ä–µ—Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –ø–æ –ª–∏–Ω–∏
ARM GAS  /tmp/ccAzc5t0.s 			page 20


 428              		.loc 1 130 1 is_stmt 1 view -0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 32
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432 0000 30B5     		push	{r4, r5, lr}
 433              		.cfi_def_cfa_offset 12
 434              		.cfi_offset 4, -12
 435              		.cfi_offset 5, -8
 436              		.cfi_offset 14, -4
 437 0002 8DB0     		sub	sp, sp, #52
 438              		.cfi_def_cfa_offset 64
 131:Core/Src/main.c **** 	uint16_t Register_ID = 0xD0; //–ê–¥—Ä–µ—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞ –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö—Ä–∞–Ω–∏—Ç—Å—è –∑–Ω
 439              		.loc 1 131 2 view .LVU109
 440              	.LVL35:
 132:Core/Src/main.c **** 	uint8_t Data[1]; //–ú–∞—Å—Å–∏–≤ –≤ –∫–æ—Ç–æ—Ä–æ–º –ú–´ –±—É–¥–µ–º —Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å —
 441              		.loc 1 132 2 view .LVU110
 133:Core/Src/main.c **** 	uint16_t Size_ = 1; //–î–ª–∏–Ω–∞ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö, 1 –±–∞–π—Ç = 1 —Ä–µ–≥–∏—
 442              		.loc 1 133 2 view .LVU111
 134:Core/Src/main.c **** 	uint32_t Timeout_ = 0xFF; //–¢–∞–π–º–∞—É—Ç, 255 –º—Å
 443              		.loc 1 134 2 view .LVU112
 135:Core/Src/main.c **** 
 444              		.loc 1 135 2 view .LVU113
 137:Core/Src/main.c **** 	if (Data[0] == 0x58)
 445              		.loc 1 137 2 view .LVU114
 446 0004 FF23     		movs	r3, #255
 447 0006 0293     		str	r3, [sp, #8]
 448 0008 0123     		movs	r3, #1
 449 000a 0193     		str	r3, [sp, #4]
 450 000c 0BAA     		add	r2, sp, #44
 451 000e 0092     		str	r2, [sp]
 452 0010 D022     		movs	r2, #208
 453 0012 EC21     		movs	r1, #236
 454 0014 1A48     		ldr	r0, .L19
 455 0016 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 456              	.LVL36:
 138:Core/Src/main.c **** 	{
 457              		.loc 1 138 2 view .LVU115
 138:Core/Src/main.c **** 	{
 458              		.loc 1 138 10 is_stmt 0 view .LVU116
 459 001a 9DF82C30 		ldrb	r3, [sp, #44]	@ zero_extendqisi2
 138:Core/Src/main.c **** 	{
 460              		.loc 1 138 5 view .LVU117
 461 001e 582B     		cmp	r3, #88
 462 0020 1AD0     		beq	.L18
 463              	.LBB6:
 144:Core/Src/main.c **** 		HAL_UART_Transmit(&huart1, (uint8_t *)buffer, strlen(buffer), 1000);
 464              		.loc 1 144 3 is_stmt 1 view .LVU118
 144:Core/Src/main.c **** 		HAL_UART_Transmit(&huart1, (uint8_t *)buffer, strlen(buffer), 1000);
 465              		.loc 1 144 8 is_stmt 0 view .LVU119
 466 0022 0DF1100C 		add	ip, sp, #16
 467 0026 174C     		ldr	r4, .L19+4
 468 0028 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 469 002a ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 470 002e 2368     		ldr	r3, [r4]
 471 0030 8CF80030 		strb	r3, [ip]
 472 0034 0023     		movs	r3, #0
 473 0036 ADF82130 		strh	r3, [sp, #33]	@ unaligned
ARM GAS  /tmp/ccAzc5t0.s 			page 21


 474 003a 8DF82330 		strb	r3, [sp, #35]
 145:Core/Src/main.c **** 
 475              		.loc 1 145 3 is_stmt 1 view .LVU120
 145:Core/Src/main.c **** 
 476              		.loc 1 145 49 is_stmt 0 view .LVU121
 477 003e 04AC     		add	r4, sp, #16
 478 0040 2046     		mov	r0, r4
 479 0042 FFF7FEFF 		bl	strlen
 480              	.LVL37:
 145:Core/Src/main.c **** 
 481              		.loc 1 145 3 discriminator 1 view .LVU122
 482 0046 4FF47A73 		mov	r3, #1000
 483 004a 82B2     		uxth	r2, r0
 484 004c 2146     		mov	r1, r4
 485 004e 0E48     		ldr	r0, .L19+8
 486 0050 FFF7FEFF 		bl	HAL_UART_Transmit
 487              	.LVL38:
 488              	.L14:
 489              	.LBE6:
 148:Core/Src/main.c **** 
 490              		.loc 1 148 1 view .LVU123
 491 0054 0DB0     		add	sp, sp, #52
 492              		.cfi_remember_state
 493              		.cfi_def_cfa_offset 12
 494              		@ sp needed
 495 0056 30BD     		pop	{r4, r5, pc}
 496              	.L18:
 497              		.cfi_restore_state
 498              	.LBB7:
 140:Core/Src/main.c **** 		HAL_UART_Transmit(&huart1, (uint8_t *)buffer, strlen(buffer), 1000);
 499              		.loc 1 140 3 is_stmt 1 view .LVU124
 140:Core/Src/main.c **** 		HAL_UART_Transmit(&huart1, (uint8_t *)buffer, strlen(buffer), 1000);
 500              		.loc 1 140 8 is_stmt 0 view .LVU125
 501 0058 04AC     		add	r4, sp, #16
 502 005a 0C4D     		ldr	r5, .L19+12
 503 005c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 504 005e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 505 0060 95E80700 		ldm	r5, {r0, r1, r2}
 506 0064 84E80700 		stm	r4, {r0, r1, r2}
 141:Core/Src/main.c **** 	} else
 507              		.loc 1 141 3 is_stmt 1 view .LVU126
 141:Core/Src/main.c **** 	} else
 508              		.loc 1 141 49 is_stmt 0 view .LVU127
 509 0068 04AC     		add	r4, sp, #16
 510 006a 2046     		mov	r0, r4
 511 006c FFF7FEFF 		bl	strlen
 512              	.LVL39:
 141:Core/Src/main.c **** 	} else
 513              		.loc 1 141 3 discriminator 1 view .LVU128
 514 0070 4FF47A73 		mov	r3, #1000
 515 0074 82B2     		uxth	r2, r0
 516 0076 2146     		mov	r1, r4
 517 0078 0348     		ldr	r0, .L19+8
 518 007a FFF7FEFF 		bl	HAL_UART_Transmit
 519              	.LVL40:
 520              	.LBE7:
 521 007e E9E7     		b	.L14
ARM GAS  /tmp/ccAzc5t0.s 			page 22


 522              	.L20:
 523              		.align	2
 524              	.L19:
 525 0080 00000000 		.word	hi2c1
 526 0084 00000000 		.word	.LANCHOR0
 527 0088 00000000 		.word	huart1
 528 008c 00000000 		.word	.LC0
 529              		.cfi_endproc
 530              	.LFE139:
 532              		.section	.rodata.UART_Send_HAL_Status.str1.4,"aMS",%progbits,1
 533              		.align	2
 534              	.LC2:
 535 0000 4F4B00   		.ascii	"OK\000"
 536 0003 00       		.align	2
 537              	.LC3:
 538 0004 4552524F 		.ascii	"ERROR\000"
 538      5200
 539 000a 0000     		.align	2
 540              	.LC4:
 541 000c 42555359 		.ascii	"BUSY\000"
 541      00
 542 0011 000000   		.align	2
 543              	.LC5:
 544 0014 54494D45 		.ascii	"TIMEOUT\000"
 544      4F555400 
 545              		.align	2
 546              	.LC6:
 547 001c 3A2000   		.ascii	": \000"
 548              		.section	.text.UART_Send_HAL_Status,"ax",%progbits
 549              		.align	1
 550              		.global	UART_Send_HAL_Status
 551              		.syntax unified
 552              		.thumb
 553              		.thumb_func
 555              	UART_Send_HAL_Status:
 556              	.LVL41:
 557              	.LFB140:
 154:Core/Src/main.c ****   char* message = NULL;
 558              		.loc 1 154 1 is_stmt 1 view -0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 104
 561              		@ frame_needed = 0, uses_anonymous_args = 0
 154:Core/Src/main.c ****   char* message = NULL;
 562              		.loc 1 154 1 is_stmt 0 view .LVU130
 563 0000 30B5     		push	{r4, r5, lr}
 564              		.cfi_def_cfa_offset 12
 565              		.cfi_offset 4, -12
 566              		.cfi_offset 5, -8
 567              		.cfi_offset 14, -4
 568 0002 9BB0     		sub	sp, sp, #108
 569              		.cfi_def_cfa_offset 120
 155:Core/Src/main.c **** 
 570              		.loc 1 155 3 is_stmt 1 view .LVU131
 571              	.LVL42:
 157:Core/Src/main.c ****   {
 572              		.loc 1 157 3 view .LVU132
 573 0004 0328     		cmp	r0, #3
ARM GAS  /tmp/ccAzc5t0.s 			page 23


 574 0006 03D8     		bhi	.L22
 575 0008 DFE800F0 		tbb	[pc, r0]
 576              	.L24:
 577 000c 2E       		.byte	(.L28-.L24)/2
 578 000d 04       		.byte	(.L26-.L24)/2
 579 000e 2A       		.byte	(.L25-.L24)/2
 580 000f 2C       		.byte	(.L23-.L24)/2
 581              		.p2align 1
 582              	.L22:
 583 0010 0025     		movs	r5, #0
 584 0012 00E0     		b	.L27
 585              	.L26:
 163:Core/Src/main.c ****       break;
 586              		.loc 1 163 7 view .LVU133
 587              	.LVL43:
 164:Core/Src/main.c ****     
 588              		.loc 1 164 7 view .LVU134
 163:Core/Src/main.c ****       break;
 589              		.loc 1 163 15 is_stmt 0 view .LVU135
 590 0014 154D     		ldr	r5, .L30
 591              	.LVL44:
 592              	.L27:
 177:Core/Src/main.c ****   strcat(buffer, reg);
 593              		.loc 1 177 3 is_stmt 1 view .LVU136
 178:Core/Src/main.c ****   strcat(buffer, ": ");
 594              		.loc 1 178 3 view .LVU137
 595 0016 01AC     		add	r4, sp, #4
 596 0018 2046     		mov	r0, r4
 597              	.LVL45:
 178:Core/Src/main.c ****   strcat(buffer, ": ");
 598              		.loc 1 178 3 is_stmt 0 view .LVU138
 599 001a FFF7FEFF 		bl	strcat
 600              	.LVL46:
 179:Core/Src/main.c ****   strcat(buffer, message);
 601              		.loc 1 179 3 is_stmt 1 view .LVU139
 602 001e 2046     		mov	r0, r4
 603 0020 FFF7FEFF 		bl	strlen
 604              	.LVL47:
 179:Core/Src/main.c ****   strcat(buffer, message);
 605              		.loc 1 179 3 is_stmt 0 discriminator 1 view .LVU140
 606 0024 2218     		adds	r2, r4, r0
 607 0026 124B     		ldr	r3, .L30+4
 608 0028 1988     		ldrh	r1, [r3]	@ unaligned
 609 002a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 610 002c 2152     		strh	r1, [r4, r0]	@ unaligned
 611 002e 9370     		strb	r3, [r2, #2]
 180:Core/Src/main.c ****   strcat(buffer, "\n\r\0");
 612              		.loc 1 180 3 is_stmt 1 view .LVU141
 613 0030 2946     		mov	r1, r5
 614 0032 2046     		mov	r0, r4
 615 0034 FFF7FEFF 		bl	strcat
 616              	.LVL48:
 181:Core/Src/main.c **** 
 617              		.loc 1 181 3 view .LVU142
 618 0038 2046     		mov	r0, r4
 619 003a FFF7FEFF 		bl	strlen
 620              	.LVL49:
ARM GAS  /tmp/ccAzc5t0.s 			page 24


 181:Core/Src/main.c **** 
 621              		.loc 1 181 3 is_stmt 0 discriminator 1 view .LVU143
 622 003e 2218     		adds	r2, r4, r0
 623 0040 0C4B     		ldr	r3, .L30+8
 624 0042 998A     		ldrh	r1, [r3, #20]	@ unaligned
 625 0044 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 626 0046 2152     		strh	r1, [r4, r0]	@ unaligned
 627 0048 9370     		strb	r3, [r2, #2]
 183:Core/Src/main.c **** }
 628              		.loc 1 183 3 is_stmt 1 view .LVU144
 183:Core/Src/main.c **** }
 629              		.loc 1 183 49 is_stmt 0 view .LVU145
 630 004a 2046     		mov	r0, r4
 631 004c FFF7FEFF 		bl	strlen
 632              	.LVL50:
 183:Core/Src/main.c **** }
 633              		.loc 1 183 3 discriminator 1 view .LVU146
 634 0050 FF23     		movs	r3, #255
 635 0052 82B2     		uxth	r2, r0
 636 0054 2146     		mov	r1, r4
 637 0056 0848     		ldr	r0, .L30+12
 638 0058 FFF7FEFF 		bl	HAL_UART_Transmit
 639              	.LVL51:
 184:Core/Src/main.c **** 
 640              		.loc 1 184 1 view .LVU147
 641 005c 1BB0     		add	sp, sp, #108
 642              		.cfi_remember_state
 643              		.cfi_def_cfa_offset 12
 644              		@ sp needed
 645 005e 30BD     		pop	{r4, r5, pc}
 646              	.LVL52:
 647              	.L25:
 648              		.cfi_restore_state
 167:Core/Src/main.c ****       break;
 649              		.loc 1 167 7 is_stmt 1 view .LVU148
 168:Core/Src/main.c ****     case HAL_TIMEOUT:
 650              		.loc 1 168 7 view .LVU149
 167:Core/Src/main.c ****       break;
 651              		.loc 1 167 15 is_stmt 0 view .LVU150
 652 0060 064D     		ldr	r5, .L30+16
 168:Core/Src/main.c ****     case HAL_TIMEOUT:
 653              		.loc 1 168 7 view .LVU151
 654 0062 D8E7     		b	.L27
 655              	.LVL53:
 656              	.L23:
 170:Core/Src/main.c ****       break;
 657              		.loc 1 170 7 is_stmt 1 view .LVU152
 171:Core/Src/main.c **** 
 658              		.loc 1 171 7 view .LVU153
 170:Core/Src/main.c ****       break;
 659              		.loc 1 170 15 is_stmt 0 view .LVU154
 660 0064 064D     		ldr	r5, .L30+20
 171:Core/Src/main.c **** 
 661              		.loc 1 171 7 view .LVU155
 662 0066 D6E7     		b	.L27
 663              	.LVL54:
 664              	.L28:
ARM GAS  /tmp/ccAzc5t0.s 			page 25


 160:Core/Src/main.c ****       break;
 665              		.loc 1 160 15 view .LVU156
 666 0068 064D     		ldr	r5, .L30+24
 667 006a D4E7     		b	.L27
 668              	.L31:
 669              		.align	2
 670              	.L30:
 671 006c 04000000 		.word	.LC3
 672 0070 1C000000 		.word	.LC6
 673 0074 00000000 		.word	.LANCHOR0
 674 0078 00000000 		.word	huart1
 675 007c 0C000000 		.word	.LC4
 676 0080 14000000 		.word	.LC5
 677 0084 00000000 		.word	.LC2
 678              		.cfi_endproc
 679              	.LFE140:
 681              		.section	.rodata.Read_Dig_Variables.str1.4,"aMS",%progbits,1
 682              		.align	2
 683              	.LC8:
 684 0000 6469675F 		.ascii	"dig_T1\000"
 684      543100
 685 0007 00       		.align	2
 686              	.LC9:
 687 0008 6469675F 		.ascii	"dig_T2\000"
 687      543200
 688 000f 00       		.align	2
 689              	.LC10:
 690 0010 6469675F 		.ascii	"dig_T3\000"
 690      543300
 691 0017 00       		.align	2
 692              	.LC11:
 693 0018 6469675F 		.ascii	"dig_P1\000"
 693      503100
 694 001f 00       		.align	2
 695              	.LC12:
 696 0020 6469675F 		.ascii	"dig_P2\000"
 696      503200
 697 0027 00       		.align	2
 698              	.LC13:
 699 0028 6469675F 		.ascii	"dig_P3\000"
 699      503300
 700 002f 00       		.align	2
 701              	.LC14:
 702 0030 6469675F 		.ascii	"dig_P4\000"
 702      503400
 703 0037 00       		.align	2
 704              	.LC15:
 705 0038 6469675F 		.ascii	"dig_P5\000"
 705      503500
 706 003f 00       		.align	2
 707              	.LC16:
 708 0040 6469675F 		.ascii	"dig_P6\000"
 708      503600
 709 0047 00       		.align	2
 710              	.LC17:
 711 0048 6469675F 		.ascii	"dig_P7\000"
 711      503700
ARM GAS  /tmp/ccAzc5t0.s 			page 26


 712 004f 00       		.align	2
 713              	.LC18:
 714 0050 6469675F 		.ascii	"dig_P8\000"
 714      503800
 715 0057 00       		.align	2
 716              	.LC19:
 717 0058 6469675F 		.ascii	"dig_P9\000"
 717      503900
 718              		.section	.text.Read_Dig_Variables,"ax",%progbits
 719              		.align	1
 720              		.global	Read_Dig_Variables
 721              		.syntax unified
 722              		.thumb
 723              		.thumb_func
 725              	Read_Dig_Variables:
 726              	.LFB141:
 187:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x88, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 727              		.loc 1 187 1 is_stmt 1 view -0
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 0
 730              		@ frame_needed = 0, uses_anonymous_args = 0
 731 0000 70B5     		push	{r4, r5, r6, lr}
 732              		.cfi_def_cfa_offset 16
 733              		.cfi_offset 4, -16
 734              		.cfi_offset 5, -12
 735              		.cfi_offset 6, -8
 736              		.cfi_offset 14, -4
 737 0002 84B0     		sub	sp, sp, #16
 738              		.cfi_def_cfa_offset 32
 188:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x8A, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 739              		.loc 1 188 3 view .LVU158
 740 0004 504C     		ldr	r4, .L34
 741 0006 FF26     		movs	r6, #255
 742 0008 0296     		str	r6, [sp, #8]
 743 000a 0225     		movs	r5, #2
 744 000c 0195     		str	r5, [sp, #4]
 745 000e 4F4B     		ldr	r3, .L34+4
 746 0010 0093     		str	r3, [sp]
 747 0012 0123     		movs	r3, #1
 748 0014 8822     		movs	r2, #136
 749 0016 EC21     		movs	r1, #236
 750 0018 2046     		mov	r0, r4
 751 001a FFF7FEFF 		bl	HAL_I2C_Mem_Read
 752              	.LVL55:
 188:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x8A, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 753              		.loc 1 188 3 is_stmt 0 discriminator 1 view .LVU159
 754 001e 4C49     		ldr	r1, .L34+8
 755 0020 FFF7FEFF 		bl	UART_Send_HAL_Status
 756              	.LVL56:
 189:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x8C, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 757              		.loc 1 189 3 is_stmt 1 view .LVU160
 758 0024 0296     		str	r6, [sp, #8]
 759 0026 0195     		str	r5, [sp, #4]
 760 0028 4A4B     		ldr	r3, .L34+12
 761 002a 0093     		str	r3, [sp]
 762 002c 0123     		movs	r3, #1
 763 002e 8A22     		movs	r2, #138
ARM GAS  /tmp/ccAzc5t0.s 			page 27


 764 0030 EC21     		movs	r1, #236
 765 0032 2046     		mov	r0, r4
 766 0034 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 767              	.LVL57:
 189:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x8C, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 768              		.loc 1 189 3 is_stmt 0 discriminator 1 view .LVU161
 769 0038 4749     		ldr	r1, .L34+16
 770 003a FFF7FEFF 		bl	UART_Send_HAL_Status
 771              	.LVL58:
 190:Core/Src/main.c ****   
 772              		.loc 1 190 3 is_stmt 1 view .LVU162
 773 003e 0296     		str	r6, [sp, #8]
 774 0040 0195     		str	r5, [sp, #4]
 775 0042 464B     		ldr	r3, .L34+20
 776 0044 0093     		str	r3, [sp]
 777 0046 0123     		movs	r3, #1
 778 0048 8C22     		movs	r2, #140
 779 004a EC21     		movs	r1, #236
 780 004c 2046     		mov	r0, r4
 781 004e FFF7FEFF 		bl	HAL_I2C_Mem_Read
 782              	.LVL59:
 190:Core/Src/main.c ****   
 783              		.loc 1 190 3 is_stmt 0 discriminator 1 view .LVU163
 784 0052 4349     		ldr	r1, .L34+24
 785 0054 FFF7FEFF 		bl	UART_Send_HAL_Status
 786              	.LVL60:
 192:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x90, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 787              		.loc 1 192 3 is_stmt 1 view .LVU164
 788 0058 0296     		str	r6, [sp, #8]
 789 005a 0195     		str	r5, [sp, #4]
 790 005c 414B     		ldr	r3, .L34+28
 791 005e 0093     		str	r3, [sp]
 792 0060 0123     		movs	r3, #1
 793 0062 8E22     		movs	r2, #142
 794 0064 EC21     		movs	r1, #236
 795 0066 2046     		mov	r0, r4
 796 0068 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 797              	.LVL61:
 192:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x90, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 798              		.loc 1 192 3 is_stmt 0 discriminator 1 view .LVU165
 799 006c 3E49     		ldr	r1, .L34+32
 800 006e FFF7FEFF 		bl	UART_Send_HAL_Status
 801              	.LVL62:
 193:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x92, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 802              		.loc 1 193 3 is_stmt 1 view .LVU166
 803 0072 0296     		str	r6, [sp, #8]
 804 0074 0195     		str	r5, [sp, #4]
 805 0076 3D4B     		ldr	r3, .L34+36
 806 0078 0093     		str	r3, [sp]
 807 007a 0123     		movs	r3, #1
 808 007c 9022     		movs	r2, #144
 809 007e EC21     		movs	r1, #236
 810 0080 2046     		mov	r0, r4
 811 0082 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 812              	.LVL63:
 193:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x92, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 813              		.loc 1 193 3 is_stmt 0 discriminator 1 view .LVU167
ARM GAS  /tmp/ccAzc5t0.s 			page 28


 814 0086 3A49     		ldr	r1, .L34+40
 815 0088 FFF7FEFF 		bl	UART_Send_HAL_Status
 816              	.LVL64:
 194:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x94, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 817              		.loc 1 194 3 is_stmt 1 view .LVU168
 818 008c 0296     		str	r6, [sp, #8]
 819 008e 0195     		str	r5, [sp, #4]
 820 0090 384B     		ldr	r3, .L34+44
 821 0092 0093     		str	r3, [sp]
 822 0094 0123     		movs	r3, #1
 823 0096 9222     		movs	r2, #146
 824 0098 EC21     		movs	r1, #236
 825 009a 2046     		mov	r0, r4
 826 009c FFF7FEFF 		bl	HAL_I2C_Mem_Read
 827              	.LVL65:
 194:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x94, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 828              		.loc 1 194 3 is_stmt 0 discriminator 1 view .LVU169
 829 00a0 3549     		ldr	r1, .L34+48
 830 00a2 FFF7FEFF 		bl	UART_Send_HAL_Status
 831              	.LVL66:
 195:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x96, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 832              		.loc 1 195 3 is_stmt 1 view .LVU170
 833 00a6 0296     		str	r6, [sp, #8]
 834 00a8 0195     		str	r5, [sp, #4]
 835 00aa 344B     		ldr	r3, .L34+52
 836 00ac 0093     		str	r3, [sp]
 837 00ae 0123     		movs	r3, #1
 838 00b0 9422     		movs	r2, #148
 839 00b2 EC21     		movs	r1, #236
 840 00b4 2046     		mov	r0, r4
 841 00b6 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 842              	.LVL67:
 195:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x96, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 843              		.loc 1 195 3 is_stmt 0 discriminator 1 view .LVU171
 844 00ba 3149     		ldr	r1, .L34+56
 845 00bc FFF7FEFF 		bl	UART_Send_HAL_Status
 846              	.LVL68:
 196:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x98, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 847              		.loc 1 196 3 is_stmt 1 view .LVU172
 848 00c0 0296     		str	r6, [sp, #8]
 849 00c2 0195     		str	r5, [sp, #4]
 850 00c4 2F4B     		ldr	r3, .L34+60
 851 00c6 0093     		str	r3, [sp]
 852 00c8 0123     		movs	r3, #1
 853 00ca 9622     		movs	r2, #150
 854 00cc EC21     		movs	r1, #236
 855 00ce 2046     		mov	r0, r4
 856 00d0 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 857              	.LVL69:
 196:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x98, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 858              		.loc 1 196 3 is_stmt 0 discriminator 1 view .LVU173
 859 00d4 2C49     		ldr	r1, .L34+64
 860 00d6 FFF7FEFF 		bl	UART_Send_HAL_Status
 861              	.LVL70:
 197:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x9A, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 862              		.loc 1 197 3 is_stmt 1 view .LVU174
 863 00da 0296     		str	r6, [sp, #8]
ARM GAS  /tmp/ccAzc5t0.s 			page 29


 864 00dc 0195     		str	r5, [sp, #4]
 865 00de 2B4B     		ldr	r3, .L34+68
 866 00e0 0093     		str	r3, [sp]
 867 00e2 0123     		movs	r3, #1
 868 00e4 9822     		movs	r2, #152
 869 00e6 EC21     		movs	r1, #236
 870 00e8 2046     		mov	r0, r4
 871 00ea FFF7FEFF 		bl	HAL_I2C_Mem_Read
 872              	.LVL71:
 197:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x9A, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 873              		.loc 1 197 3 is_stmt 0 discriminator 1 view .LVU175
 874 00ee 2849     		ldr	r1, .L34+72
 875 00f0 FFF7FEFF 		bl	UART_Send_HAL_Status
 876              	.LVL72:
 198:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x9C, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 877              		.loc 1 198 3 is_stmt 1 view .LVU176
 878 00f4 0296     		str	r6, [sp, #8]
 879 00f6 0195     		str	r5, [sp, #4]
 880 00f8 264B     		ldr	r3, .L34+76
 881 00fa 0093     		str	r3, [sp]
 882 00fc 0123     		movs	r3, #1
 883 00fe 9A22     		movs	r2, #154
 884 0100 EC21     		movs	r1, #236
 885 0102 2046     		mov	r0, r4
 886 0104 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 887              	.LVL73:
 198:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x9C, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 888              		.loc 1 198 3 is_stmt 0 discriminator 1 view .LVU177
 889 0108 2349     		ldr	r1, .L34+80
 890 010a FFF7FEFF 		bl	UART_Send_HAL_Status
 891              	.LVL74:
 199:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x9E, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 892              		.loc 1 199 3 is_stmt 1 view .LVU178
 893 010e 0296     		str	r6, [sp, #8]
 894 0110 0195     		str	r5, [sp, #4]
 895 0112 224B     		ldr	r3, .L34+84
 896 0114 0093     		str	r3, [sp]
 897 0116 0123     		movs	r3, #1
 898 0118 9C22     		movs	r2, #156
 899 011a EC21     		movs	r1, #236
 900 011c 2046     		mov	r0, r4
 901 011e FFF7FEFF 		bl	HAL_I2C_Mem_Read
 902              	.LVL75:
 199:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0x9E, I2C_MEMADD_SIZE_8BIT, (uint8_t *)&
 903              		.loc 1 199 3 is_stmt 0 discriminator 1 view .LVU179
 904 0122 1F49     		ldr	r1, .L34+88
 905 0124 FFF7FEFF 		bl	UART_Send_HAL_Status
 906              	.LVL76:
 200:Core/Src/main.c **** }
 907              		.loc 1 200 3 is_stmt 1 view .LVU180
 908 0128 0296     		str	r6, [sp, #8]
 909 012a 0195     		str	r5, [sp, #4]
 910 012c 1D4B     		ldr	r3, .L34+92
 911 012e 0093     		str	r3, [sp]
 912 0130 0123     		movs	r3, #1
 913 0132 9E22     		movs	r2, #158
 914 0134 EC21     		movs	r1, #236
ARM GAS  /tmp/ccAzc5t0.s 			page 30


 915 0136 2046     		mov	r0, r4
 916 0138 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 917              	.LVL77:
 200:Core/Src/main.c **** }
 918              		.loc 1 200 3 is_stmt 0 discriminator 1 view .LVU181
 919 013c 1A49     		ldr	r1, .L34+96
 920 013e FFF7FEFF 		bl	UART_Send_HAL_Status
 921              	.LVL78:
 201:Core/Src/main.c **** 
 922              		.loc 1 201 1 view .LVU182
 923 0142 04B0     		add	sp, sp, #16
 924              		.cfi_def_cfa_offset 16
 925              		@ sp needed
 926 0144 70BD     		pop	{r4, r5, r6, pc}
 927              	.L35:
 928 0146 00BF     		.align	2
 929              	.L34:
 930 0148 00000000 		.word	hi2c1
 931 014c 00000000 		.word	dig_T1
 932 0150 00000000 		.word	.LC8
 933 0154 00000000 		.word	dig_T2
 934 0158 08000000 		.word	.LC9
 935 015c 00000000 		.word	dig_T3
 936 0160 10000000 		.word	.LC10
 937 0164 00000000 		.word	dig_P1
 938 0168 18000000 		.word	.LC11
 939 016c 00000000 		.word	dig_P2
 940 0170 20000000 		.word	.LC12
 941 0174 00000000 		.word	dig_P3
 942 0178 28000000 		.word	.LC13
 943 017c 00000000 		.word	dig_P4
 944 0180 30000000 		.word	.LC14
 945 0184 00000000 		.word	dig_P5
 946 0188 38000000 		.word	.LC15
 947 018c 00000000 		.word	dig_P6
 948 0190 40000000 		.word	.LC16
 949 0194 00000000 		.word	dig_P7
 950 0198 48000000 		.word	.LC17
 951 019c 00000000 		.word	dig_P8
 952 01a0 50000000 		.word	.LC18
 953 01a4 00000000 		.word	dig_P9
 954 01a8 58000000 		.word	.LC19
 955              		.cfi_endproc
 956              	.LFE141:
 958              		.section	.rodata.Acc_LSM_Init.str1.4,"aMS",%progbits,1
 959              		.align	2
 960              	.LC21:
 961 0000 57484F20 		.ascii	"WHO AM I\000"
 961      414D2049 
 961      00
 962 0009 000000   		.align	2
 963              	.LC23:
 964 000c 6374726C 		.ascii	"ctrl_meas\000"
 964      5F6D6561 
 964      7300
 965 0016 0000     		.align	2
 966              	.LC20:
ARM GAS  /tmp/ccAzc5t0.s 			page 31


 967 0018 2D2D2D2D 		.ascii	"--------------------LSM6DS33 init------------------"
 967      2D2D2D2D 
 967      2D2D2D2D 
 967      2D2D2D2D 
 967      2D2D2D2D 
 968 004b 2D2D2D2D 		.ascii	"--------\012\015\000"
 968      2D2D2D2D 
 968      0A0D00
 969 0056 0000     		.align	2
 970              	.LC22:
 971 0058 41434345 		.ascii	"ACCELEROMETER READ SUCCESSFULLY (nice)\012\015\000"
 971      4C45524F 
 971      4D455445 
 971      52205245 
 971      41442053 
 972              		.section	.text.Acc_LSM_Init,"ax",%progbits
 973              		.align	1
 974              		.global	Acc_LSM_Init
 975              		.syntax unified
 976              		.thumb
 977              		.thumb_func
 979              	Acc_LSM_Init:
 980              	.LFB142:
 205:Core/Src/main.c ****   char str_buf[100] =  "--------------------LSM6DS33 init--------------------------\n\r";
 981              		.loc 1 205 1 is_stmt 1 view -0
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 208
 984              		@ frame_needed = 0, uses_anonymous_args = 0
 985 0000 30B5     		push	{r4, r5, lr}
 986              		.cfi_def_cfa_offset 12
 987              		.cfi_offset 4, -12
 988              		.cfi_offset 5, -8
 989              		.cfi_offset 14, -4
 990 0002 B9B0     		sub	sp, sp, #228
 991              		.cfi_def_cfa_offset 240
 206:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, (uint8_t*)str_buf, strlen(str_buf), 1000);
 992              		.loc 1 206 3 view .LVU184
 206:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, (uint8_t*)str_buf, strlen(str_buf), 1000);
 993              		.loc 1 206 8 is_stmt 0 view .LVU185
 994 0004 4D4C     		ldr	r4, .L43
 995 0006 0DF17C0E 		add	lr, sp, #124
 996 000a 04F13005 		add	r5, r4, #48
 997              	.L37:
 998 000e F446     		mov	ip, lr
 999 0010 2068     		ldr	r0, [r4]	@ unaligned
 1000 0012 6168     		ldr	r1, [r4, #4]	@ unaligned
 1001 0014 A268     		ldr	r2, [r4, #8]	@ unaligned
 1002 0016 E368     		ldr	r3, [r4, #12]	@ unaligned
 1003 0018 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1004 001c 1034     		adds	r4, r4, #16
 1005 001e E646     		mov	lr, ip
 1006 0020 AC42     		cmp	r4, r5
 1007 0022 F4D1     		bne	.L37
 1008 0024 2068     		ldr	r0, [r4]	@ unaligned
 1009 0026 6168     		ldr	r1, [r4, #4]	@ unaligned
 1010 0028 A268     		ldr	r2, [r4, #8]	@ unaligned
 1011 002a AEE80700 		stmia	lr!, {r0, r1, r2}
ARM GAS  /tmp/ccAzc5t0.s 			page 32


 1012 002e A389     		ldrh	r3, [r4, #12]	@ unaligned
 1013 0030 AEF80030 		strh	r3, [lr]	@ unaligned
 1014 0034 2622     		movs	r2, #38
 1015 0036 0021     		movs	r1, #0
 1016 0038 0DF1BA00 		add	r0, sp, #186
 1017 003c FFF7FEFF 		bl	memset
 1018              	.LVL79:
 207:Core/Src/main.c **** 
 1019              		.loc 1 207 3 is_stmt 1 view .LVU186
 207:Core/Src/main.c **** 
 1020              		.loc 1 207 49 is_stmt 0 view .LVU187
 1021 0040 1FAC     		add	r4, sp, #124
 1022 0042 2046     		mov	r0, r4
 1023 0044 FFF7FEFF 		bl	strlen
 1024              	.LVL80:
 207:Core/Src/main.c **** 
 1025              		.loc 1 207 3 discriminator 1 view .LVU188
 1026 0048 4FF47A73 		mov	r3, #1000
 1027 004c 82B2     		uxth	r2, r0
 1028 004e 2146     		mov	r1, r4
 1029 0050 3B48     		ldr	r0, .L43+4
 1030 0052 FFF7FEFF 		bl	HAL_UART_Transmit
 1031              	.LVL81:
 209:Core/Src/main.c **** 	uint16_t register_address = 0x0F; //–ê–¥—Ä–µ—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞ –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö—Ä–∞–Ω–∏—Ç—Å—è
 1032              		.loc 1 209 2 is_stmt 1 view .LVU189
 210:Core/Src/main.c **** 	uint8_t data; //–ú–∞—Å—Å–∏–≤ –≤ –∫–æ—Ç–æ—Ä–æ–º –ú–´ –±—É–¥–µ–º —Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å —Ä–µ
 1033              		.loc 1 210 2 view .LVU190
 211:Core/Src/main.c **** 	uint16_t Size_ = 1; //–î–ª–∏–Ω–∞ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö, 1 –±–∞–π—Ç = 1 —Ä–µ–≥–∏—
 1034              		.loc 1 211 2 view .LVU191
 212:Core/Src/main.c **** 	uint32_t Timeout_ = 0xFF; //–¢–∞–π–º–∞—É—Ç, 255 –º—Å
 1035              		.loc 1 212 2 view .LVU192
 213:Core/Src/main.c **** 
 1036              		.loc 1 213 2 view .LVU193
 215:Core/Src/main.c **** 	if (data == 0x69)
 1037              		.loc 1 215 2 view .LVU194
 1038 0056 FF23     		movs	r3, #255
 1039 0058 0293     		str	r3, [sp, #8]
 1040 005a 0123     		movs	r3, #1
 1041 005c 0193     		str	r3, [sp, #4]
 1042 005e 0DF17B02 		add	r2, sp, #123
 1043 0062 0092     		str	r2, [sp]
 1044 0064 0F22     		movs	r2, #15
 1045 0066 D421     		movs	r1, #212
 1046 0068 3648     		ldr	r0, .L43+8
 1047 006a FFF7FEFF 		bl	HAL_I2C_Mem_Read
 1048              	.LVL82:
 215:Core/Src/main.c **** 	if (data == 0x69)
 1049              		.loc 1 215 2 is_stmt 0 discriminator 1 view .LVU195
 1050 006e 3649     		ldr	r1, .L43+12
 1051 0070 FFF7FEFF 		bl	UART_Send_HAL_Status
 1052              	.LVL83:
 216:Core/Src/main.c **** 	{
 1053              		.loc 1 216 2 is_stmt 1 view .LVU196
 216:Core/Src/main.c **** 	{
 1054              		.loc 1 216 11 is_stmt 0 view .LVU197
 1055 0074 9DF87B30 		ldrb	r3, [sp, #123]	@ zero_extendqisi2
 216:Core/Src/main.c **** 	{
ARM GAS  /tmp/ccAzc5t0.s 			page 33


 1056              		.loc 1 216 5 view .LVU198
 1057 0078 692B     		cmp	r3, #105
 1058 007a 24D0     		beq	.L42
 1059              	.LBB8:
 226:Core/Src/main.c **** 		HAL_UART_Transmit(&huart1, (uint8_t *)buffer, strlen(buffer), 1000);
 1060              		.loc 1 226 3 is_stmt 1 view .LVU199
 226:Core/Src/main.c **** 		HAL_UART_Transmit(&huart1, (uint8_t *)buffer, strlen(buffer), 1000);
 1061              		.loc 1 226 8 is_stmt 0 view .LVU200
 1062 007c 05AC     		add	r4, sp, #20
 1063 007e 334D     		ldr	r5, .L43+16
 1064 0080 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1065 0082 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1066 0084 95E80700 		ldm	r5, {r0, r1, r2}
 1067 0088 03C4     		stmia	r4!, {r0, r1}
 1068 008a 24F8022B 		strh	r2, [r4], #2	@ movhi
 1069 008e 120C     		lsrs	r2, r2, #16
 1070 0090 2270     		strb	r2, [r4]
 1071 0092 0023     		movs	r3, #0
 1072 0094 CDF82F30 		str	r3, [sp, #47]	@ unaligned
 1073 0098 CDF83330 		str	r3, [sp, #51]	@ unaligned
 1074 009c CDF83730 		str	r3, [sp, #55]	@ unaligned
 1075 00a0 CDF83B30 		str	r3, [sp, #59]	@ unaligned
 1076 00a4 CDF83F30 		str	r3, [sp, #63]	@ unaligned
 1077 00a8 CDF84230 		str	r3, [sp, #66]	@ unaligned
 227:Core/Src/main.c **** 	}
 1078              		.loc 1 227 3 is_stmt 1 view .LVU201
 227:Core/Src/main.c **** 	}
 1079              		.loc 1 227 49 is_stmt 0 view .LVU202
 1080 00ac 05AC     		add	r4, sp, #20
 1081 00ae 2046     		mov	r0, r4
 1082 00b0 FFF7FEFF 		bl	strlen
 1083              	.LVL84:
 227:Core/Src/main.c **** 	}
 1084              		.loc 1 227 3 discriminator 1 view .LVU203
 1085 00b4 4FF47A73 		mov	r3, #1000
 1086 00b8 82B2     		uxth	r2, r0
 1087 00ba 2146     		mov	r1, r4
 1088 00bc 2048     		ldr	r0, .L43+4
 1089 00be FFF7FEFF 		bl	HAL_UART_Transmit
 1090              	.LVL85:
 1091              	.L36:
 1092              	.LBE8:
 229:Core/Src/main.c **** 
 1093              		.loc 1 229 1 view .LVU204
 1094 00c2 39B0     		add	sp, sp, #228
 1095              		.cfi_remember_state
 1096              		.cfi_def_cfa_offset 12
 1097              		@ sp needed
 1098 00c4 30BD     		pop	{r4, r5, pc}
 1099              	.L42:
 1100              		.cfi_restore_state
 1101              	.LBB9:
 218:Core/Src/main.c **** 		HAL_UART_Transmit(&huart1, (uint8_t *)buffer, strlen(buffer), 1000);
 1102              		.loc 1 218 3 is_stmt 1 view .LVU205
 218:Core/Src/main.c **** 		HAL_UART_Transmit(&huart1, (uint8_t *)buffer, strlen(buffer), 1000);
 1103              		.loc 1 218 8 is_stmt 0 view .LVU206
 1104 00c6 224C     		ldr	r4, .L43+20
ARM GAS  /tmp/ccAzc5t0.s 			page 34


 1105 00c8 0DF1140C 		add	ip, sp, #20
 1106 00cc 04F1200E 		add	lr, r4, #32
 1107              	.L39:
 1108 00d0 6546     		mov	r5, ip
 1109 00d2 2068     		ldr	r0, [r4]	@ unaligned
 1110 00d4 6168     		ldr	r1, [r4, #4]	@ unaligned
 1111 00d6 A268     		ldr	r2, [r4, #8]	@ unaligned
 1112 00d8 E368     		ldr	r3, [r4, #12]	@ unaligned
 1113 00da 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 1114 00dc 1034     		adds	r4, r4, #16
 1115 00de AC46     		mov	ip, r5
 1116 00e0 7445     		cmp	r4, lr
 1117 00e2 F5D1     		bne	.L39
 1118 00e4 2068     		ldr	r0, [r4]	@ unaligned
 1119 00e6 6168     		ldr	r1, [r4, #4]	@ unaligned
 1120 00e8 ACE80300 		stmia	ip!, {r0, r1}
 1121 00ec 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 1122 00ee 8CF80030 		strb	r3, [ip]
 1123 00f2 3B22     		movs	r2, #59
 1124 00f4 0021     		movs	r1, #0
 1125 00f6 0DF13D00 		add	r0, sp, #61
 1126 00fa FFF7FEFF 		bl	memset
 1127              	.LVL86:
 219:Core/Src/main.c **** 
 1128              		.loc 1 219 3 is_stmt 1 view .LVU207
 219:Core/Src/main.c **** 
 1129              		.loc 1 219 49 is_stmt 0 view .LVU208
 1130 00fe 05AC     		add	r4, sp, #20
 1131 0100 2046     		mov	r0, r4
 1132 0102 FFF7FEFF 		bl	strlen
 1133              	.LVL87:
 219:Core/Src/main.c **** 
 1134              		.loc 1 219 3 discriminator 1 view .LVU209
 1135 0106 4FF47A73 		mov	r3, #1000
 1136 010a 82B2     		uxth	r2, r0
 1137 010c 2146     		mov	r1, r4
 1138 010e 0C48     		ldr	r0, .L43+4
 1139 0110 FFF7FEFF 		bl	HAL_UART_Transmit
 1140              	.LVL88:
 222:Core/Src/main.c ****     UART_Send_HAL_Status(HAL_I2C_Mem_Write(&hi2c1, dev_address, 0x10, I2C_MEMADD_SIZE_8BIT, &acc_po
 1141              		.loc 1 222 5 is_stmt 1 view .LVU210
 222:Core/Src/main.c ****     UART_Send_HAL_Status(HAL_I2C_Mem_Write(&hi2c1, dev_address, 0x10, I2C_MEMADD_SIZE_8BIT, &acc_po
 1142              		.loc 1 222 13 is_stmt 0 view .LVU211
 1143 0114 4423     		movs	r3, #68
 1144 0116 8DF81330 		strb	r3, [sp, #19]
 223:Core/Src/main.c **** 	} else
 1145              		.loc 1 223 5 is_stmt 1 view .LVU212
 1146 011a FF23     		movs	r3, #255
 1147 011c 0293     		str	r3, [sp, #8]
 1148 011e 0123     		movs	r3, #1
 1149 0120 0193     		str	r3, [sp, #4]
 1150 0122 0DF11302 		add	r2, sp, #19
 1151 0126 0092     		str	r2, [sp]
 1152 0128 1022     		movs	r2, #16
 1153 012a D421     		movs	r1, #212
 1154 012c 0548     		ldr	r0, .L43+8
 1155 012e FFF7FEFF 		bl	HAL_I2C_Mem_Write
ARM GAS  /tmp/ccAzc5t0.s 			page 35


 1156              	.LVL89:
 223:Core/Src/main.c **** 	} else
 1157              		.loc 1 223 5 is_stmt 0 discriminator 1 view .LVU213
 1158 0132 0849     		ldr	r1, .L43+24
 1159 0134 FFF7FEFF 		bl	UART_Send_HAL_Status
 1160              	.LVL90:
 1161              	.LBE9:
 1162 0138 C3E7     		b	.L36
 1163              	.L44:
 1164 013a 00BF     		.align	2
 1165              	.L43:
 1166 013c 18000000 		.word	.LC20
 1167 0140 00000000 		.word	huart1
 1168 0144 00000000 		.word	hi2c1
 1169 0148 00000000 		.word	.LC21
 1170 014c 18000000 		.word	.LANCHOR0+24
 1171 0150 58000000 		.word	.LC22
 1172 0154 0C000000 		.word	.LC23
 1173              		.cfi_endproc
 1174              	.LFE142:
 1176              		.section	.rodata.Read_Acc.str1.4,"aMS",%progbits,1
 1177              		.align	2
 1178              	.LC25:
 1179 0000 4F555458 		.ascii	"OUTX_L_XL\000"
 1179      5F4C5F58 
 1179      4C00
 1180 000a 0000     		.align	2
 1181              	.LC26:
 1182 000c 4F555458 		.ascii	"OUTX_H_XL\000"
 1182      5F485F58 
 1182      4C00
 1183 0016 0000     		.align	2
 1184              	.LC27:
 1185 0018 4F555459 		.ascii	"OUTY_L_XL\000"
 1185      5F4C5F58 
 1185      4C00
 1186 0022 0000     		.align	2
 1187              	.LC28:
 1188 0024 4F555459 		.ascii	"OUTY_H_XL\000"
 1188      5F485F58 
 1188      4C00
 1189 002e 0000     		.align	2
 1190              	.LC29:
 1191 0030 4F55545A 		.ascii	"OUTZ_L_XL\000"
 1191      5F4C5F58 
 1191      4C00
 1192 003a 0000     		.align	2
 1193              	.LC30:
 1194 003c 4F55545A 		.ascii	"OUTZ_H_XL\000"
 1194      5F485F58 
 1194      4C00
 1195              		.section	.text.Read_Acc,"ax",%progbits
 1196              		.align	1
 1197              		.global	Read_Acc
 1198              		.syntax unified
 1199              		.thumb
 1200              		.thumb_func
ARM GAS  /tmp/ccAzc5t0.s 			page 36


 1202              	Read_Acc:
 1203              	.LVL91:
 1204              	.LFB143:
 232:Core/Src/main.c **** 	uint8_t dev_address = 0b11010100;
 1205              		.loc 1 232 1 is_stmt 1 view -0
 1206              		.cfi_startproc
 1207              		@ args = 0, pretend = 0, frame = 16
 1208              		@ frame_needed = 0, uses_anonymous_args = 0
 232:Core/Src/main.c **** 	uint8_t dev_address = 0b11010100;
 1209              		.loc 1 232 1 is_stmt 0 view .LVU215
 1210 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1211              		.cfi_def_cfa_offset 36
 1212              		.cfi_offset 4, -36
 1213              		.cfi_offset 5, -32
 1214              		.cfi_offset 6, -28
 1215              		.cfi_offset 7, -24
 1216              		.cfi_offset 8, -20
 1217              		.cfi_offset 9, -16
 1218              		.cfi_offset 10, -12
 1219              		.cfi_offset 11, -8
 1220              		.cfi_offset 14, -4
 1221 0004 89B0     		sub	sp, sp, #36
 1222              		.cfi_def_cfa_offset 72
 1223 0006 8046     		mov	r8, r0
 233:Core/Src/main.c ****   uint16_t raw_val[2];
 1224              		.loc 1 233 2 is_stmt 1 view .LVU216
 1225              	.LVL92:
 234:Core/Src/main.c **** 
 1226              		.loc 1 234 3 view .LVU217
 236:Core/Src/main.c **** 	UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, dev_address, 0x29, I2C_MEMADD_SIZE_8BIT, (uint8_t*)r
 1227              		.loc 1 236 2 view .LVU218
 1228 0008 5D4E     		ldr	r6, .L47+16
 1229 000a FF27     		movs	r7, #255
 1230 000c 0297     		str	r7, [sp, #8]
 1231 000e 0124     		movs	r4, #1
 1232 0010 0194     		str	r4, [sp, #4]
 1233 0012 0DF11C0B 		add	fp, sp, #28
 1234 0016 CDF800B0 		str	fp, [sp]
 1235 001a 2346     		mov	r3, r4
 1236 001c 2822     		movs	r2, #40
 1237 001e D421     		movs	r1, #212
 1238 0020 3046     		mov	r0, r6
 1239              	.LVL93:
 236:Core/Src/main.c **** 	UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, dev_address, 0x29, I2C_MEMADD_SIZE_8BIT, (uint8_t*)r
 1240              		.loc 1 236 2 is_stmt 0 view .LVU219
 1241 0022 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 1242              	.LVL94:
 236:Core/Src/main.c **** 	UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, dev_address, 0x29, I2C_MEMADD_SIZE_8BIT, (uint8_t*)r
 1243              		.loc 1 236 2 discriminator 1 view .LVU220
 1244 0026 5749     		ldr	r1, .L47+20
 1245 0028 FFF7FEFF 		bl	UART_Send_HAL_Status
 1246              	.LVL95:
 237:Core/Src/main.c **** 
 1247              		.loc 1 237 2 is_stmt 1 view .LVU221
 1248 002c 0297     		str	r7, [sp, #8]
 1249 002e 0194     		str	r4, [sp, #4]
 1250 0030 0DF11D0A 		add	r10, sp, #29
ARM GAS  /tmp/ccAzc5t0.s 			page 37


 1251 0034 CDF800A0 		str	r10, [sp]
 1252 0038 2346     		mov	r3, r4
 1253 003a 2922     		movs	r2, #41
 1254 003c D421     		movs	r1, #212
 1255 003e 3046     		mov	r0, r6
 1256 0040 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 1257              	.LVL96:
 237:Core/Src/main.c **** 
 1258              		.loc 1 237 2 is_stmt 0 discriminator 1 view .LVU222
 1259 0044 5049     		ldr	r1, .L47+24
 1260 0046 FFF7FEFF 		bl	UART_Send_HAL_Status
 1261              	.LVL97:
 239:Core/Src/main.c ****   raw_val[0] = raw_val[1] = 0;
 1262              		.loc 1 239 3 is_stmt 1 view .LVU223
 239:Core/Src/main.c ****   raw_val[0] = raw_val[1] = 0;
 1263              		.loc 1 239 26 is_stmt 0 view .LVU224
 1264 004a BDF81E50 		ldrh	r5, [sp, #30]
 239:Core/Src/main.c ****   raw_val[0] = raw_val[1] = 0;
 1265              		.loc 1 239 35 view .LVU225
 1266 004e 2D02     		lsls	r5, r5, #8
 1267 0050 2DB2     		sxth	r5, r5
 239:Core/Src/main.c ****   raw_val[0] = raw_val[1] = 0;
 1268              		.loc 1 239 44 view .LVU226
 1269 0052 BDF91C30 		ldrsh	r3, [sp, #28]
 239:Core/Src/main.c ****   raw_val[0] = raw_val[1] = 0;
 1270              		.loc 1 239 11 view .LVU227
 1271 0056 1D43     		orrs	r5, r5, r3
 1272              	.LVL98:
 240:Core/Src/main.c ****   
 1273              		.loc 1 240 3 is_stmt 1 view .LVU228
 240:Core/Src/main.c ****   
 1274              		.loc 1 240 27 is_stmt 0 view .LVU229
 1275 0058 4FF00009 		mov	r9, #0
 1276 005c ADF81E90 		strh	r9, [sp, #30]	@ movhi
 240:Core/Src/main.c ****   
 1277              		.loc 1 240 14 view .LVU230
 1278 0060 ADF81C90 		strh	r9, [sp, #28]	@ movhi
 242:Core/Src/main.c **** 	UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, dev_address, 0x2B, I2C_MEMADD_SIZE_8BIT, (uint8_t*)r
 1279              		.loc 1 242 2 is_stmt 1 view .LVU231
 1280 0064 0297     		str	r7, [sp, #8]
 1281 0066 0194     		str	r4, [sp, #4]
 1282 0068 CDF800B0 		str	fp, [sp]
 1283 006c 2346     		mov	r3, r4
 1284 006e 2A22     		movs	r2, #42
 1285 0070 D421     		movs	r1, #212
 1286 0072 3046     		mov	r0, r6
 1287 0074 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 1288              	.LVL99:
 242:Core/Src/main.c **** 	UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, dev_address, 0x2B, I2C_MEMADD_SIZE_8BIT, (uint8_t*)r
 1289              		.loc 1 242 2 is_stmt 0 discriminator 1 view .LVU232
 1290 0078 4449     		ldr	r1, .L47+28
 1291 007a FFF7FEFF 		bl	UART_Send_HAL_Status
 1292              	.LVL100:
 243:Core/Src/main.c **** 
 1293              		.loc 1 243 2 is_stmt 1 view .LVU233
 1294 007e 0297     		str	r7, [sp, #8]
 1295 0080 0194     		str	r4, [sp, #4]
ARM GAS  /tmp/ccAzc5t0.s 			page 38


 1296 0082 CDF800A0 		str	r10, [sp]
 1297 0086 2346     		mov	r3, r4
 1298 0088 2B22     		movs	r2, #43
 1299 008a D421     		movs	r1, #212
 1300 008c 3046     		mov	r0, r6
 1301 008e FFF7FEFF 		bl	HAL_I2C_Mem_Read
 1302              	.LVL101:
 243:Core/Src/main.c **** 
 1303              		.loc 1 243 2 is_stmt 0 discriminator 1 view .LVU234
 1304 0092 3F49     		ldr	r1, .L47+32
 1305 0094 FFF7FEFF 		bl	UART_Send_HAL_Status
 1306              	.LVL102:
 245:Core/Src/main.c ****   raw_val[0] = raw_val[1] = 0;
 1307              		.loc 1 245 3 is_stmt 1 view .LVU235
 245:Core/Src/main.c ****   raw_val[0] = raw_val[1] = 0;
 1308              		.loc 1 245 26 is_stmt 0 view .LVU236
 1309 0098 BDF81E30 		ldrh	r3, [sp, #30]
 245:Core/Src/main.c ****   raw_val[0] = raw_val[1] = 0;
 1310              		.loc 1 245 35 view .LVU237
 1311 009c 1B02     		lsls	r3, r3, #8
 1312 009e 1BB2     		sxth	r3, r3
 245:Core/Src/main.c ****   raw_val[0] = raw_val[1] = 0;
 1313              		.loc 1 245 44 view .LVU238
 1314 00a0 BDF91C20 		ldrsh	r2, [sp, #28]
 245:Core/Src/main.c ****   raw_val[0] = raw_val[1] = 0;
 1315              		.loc 1 245 11 view .LVU239
 1316 00a4 1343     		orrs	r3, r3, r2
 1317 00a6 0593     		str	r3, [sp, #20]
 1318              	.LVL103:
 246:Core/Src/main.c ****   
 1319              		.loc 1 246 3 is_stmt 1 view .LVU240
 246:Core/Src/main.c ****   
 1320              		.loc 1 246 27 is_stmt 0 view .LVU241
 1321 00a8 ADF81E90 		strh	r9, [sp, #30]	@ movhi
 246:Core/Src/main.c ****   
 1322              		.loc 1 246 14 view .LVU242
 1323 00ac ADF81C90 		strh	r9, [sp, #28]	@ movhi
 248:Core/Src/main.c **** 	UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, dev_address, 0x2D, I2C_MEMADD_SIZE_8BIT, (uint8_t*)r
 1324              		.loc 1 248 2 is_stmt 1 view .LVU243
 1325 00b0 0297     		str	r7, [sp, #8]
 1326 00b2 0194     		str	r4, [sp, #4]
 1327 00b4 CDF800B0 		str	fp, [sp]
 1328 00b8 2346     		mov	r3, r4
 1329 00ba 2C22     		movs	r2, #44
 1330 00bc D421     		movs	r1, #212
 1331 00be 3046     		mov	r0, r6
 1332 00c0 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 1333              	.LVL104:
 248:Core/Src/main.c **** 	UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, dev_address, 0x2D, I2C_MEMADD_SIZE_8BIT, (uint8_t*)r
 1334              		.loc 1 248 2 is_stmt 0 discriminator 1 view .LVU244
 1335 00c4 3349     		ldr	r1, .L47+36
 1336 00c6 FFF7FEFF 		bl	UART_Send_HAL_Status
 1337              	.LVL105:
 249:Core/Src/main.c **** 
 1338              		.loc 1 249 2 is_stmt 1 view .LVU245
 1339 00ca 0297     		str	r7, [sp, #8]
 1340 00cc 0194     		str	r4, [sp, #4]
ARM GAS  /tmp/ccAzc5t0.s 			page 39


 1341 00ce CDF800A0 		str	r10, [sp]
 1342 00d2 2346     		mov	r3, r4
 1343 00d4 2D22     		movs	r2, #45
 1344 00d6 D421     		movs	r1, #212
 1345 00d8 3046     		mov	r0, r6
 1346 00da FFF7FEFF 		bl	HAL_I2C_Mem_Read
 1347              	.LVL106:
 249:Core/Src/main.c **** 
 1348              		.loc 1 249 2 is_stmt 0 discriminator 1 view .LVU246
 1349 00de 2E49     		ldr	r1, .L47+40
 1350 00e0 FFF7FEFF 		bl	UART_Send_HAL_Status
 1351              	.LVL107:
 251:Core/Src/main.c **** 
 1352              		.loc 1 251 3 is_stmt 1 view .LVU247
 251:Core/Src/main.c **** 
 1353              		.loc 1 251 26 is_stmt 0 view .LVU248
 1354 00e4 BDF81E40 		ldrh	r4, [sp, #30]
 251:Core/Src/main.c **** 
 1355              		.loc 1 251 35 view .LVU249
 1356 00e8 2402     		lsls	r4, r4, #8
 1357 00ea 24B2     		sxth	r4, r4
 251:Core/Src/main.c **** 
 1358              		.loc 1 251 44 view .LVU250
 1359 00ec BDF91C30 		ldrsh	r3, [sp, #28]
 251:Core/Src/main.c **** 
 1360              		.loc 1 251 11 view .LVU251
 1361 00f0 1C43     		orrs	r4, r4, r3
 1362              	.LVL108:
 253:Core/Src/main.c ****   buffer_xyz[1] = ((double)y_val * 0.488/1000)*9.81;
 1363              		.loc 1 253 3 is_stmt 1 view .LVU252
 253:Core/Src/main.c ****   buffer_xyz[1] = ((double)y_val * 0.488/1000)*9.81;
 1364              		.loc 1 253 20 is_stmt 0 view .LVU253
 1365 00f2 2846     		mov	r0, r5
 1366 00f4 FFF7FEFF 		bl	__aeabi_i2d
 1367              	.LVL109:
 253:Core/Src/main.c ****   buffer_xyz[1] = ((double)y_val * 0.488/1000)*9.81;
 1368              		.loc 1 253 34 view .LVU254
 1369 00f8 1DA3     		adr	r3, .L47
 1370 00fa D3E90023 		ldrd	r2, [r3]
 1371 00fe FFF7FEFF 		bl	__aeabi_dmul
 1372              	.LVL110:
 253:Core/Src/main.c ****   buffer_xyz[1] = ((double)y_val * 0.488/1000)*9.81;
 1373              		.loc 1 253 41 view .LVU255
 1374 0102 0022     		movs	r2, #0
 1375 0104 254B     		ldr	r3, .L47+44
 1376 0106 FFF7FEFF 		bl	__aeabi_ddiv
 1377              	.LVL111:
 253:Core/Src/main.c ****   buffer_xyz[1] = ((double)y_val * 0.488/1000)*9.81;
 1378              		.loc 1 253 47 view .LVU256
 1379 010a 1BA3     		adr	r3, .L47+8
 1380 010c D3E90023 		ldrd	r2, [r3]
 1381 0110 FFF7FEFF 		bl	__aeabi_dmul
 1382              	.LVL112:
 253:Core/Src/main.c ****   buffer_xyz[1] = ((double)y_val * 0.488/1000)*9.81;
 1383              		.loc 1 253 17 view .LVU257
 1384 0114 C8E90001 		strd	r0, [r8]
 254:Core/Src/main.c ****   buffer_xyz[2] = ((double)z_val * 0.488/1000)*9.81;
ARM GAS  /tmp/ccAzc5t0.s 			page 40


 1385              		.loc 1 254 3 is_stmt 1 view .LVU258
 254:Core/Src/main.c ****   buffer_xyz[2] = ((double)z_val * 0.488/1000)*9.81;
 1386              		.loc 1 254 20 is_stmt 0 view .LVU259
 1387 0118 0598     		ldr	r0, [sp, #20]
 1388 011a FFF7FEFF 		bl	__aeabi_i2d
 1389              	.LVL113:
 254:Core/Src/main.c ****   buffer_xyz[2] = ((double)z_val * 0.488/1000)*9.81;
 1390              		.loc 1 254 34 view .LVU260
 1391 011e 14A3     		adr	r3, .L47
 1392 0120 D3E90023 		ldrd	r2, [r3]
 1393 0124 FFF7FEFF 		bl	__aeabi_dmul
 1394              	.LVL114:
 254:Core/Src/main.c ****   buffer_xyz[2] = ((double)z_val * 0.488/1000)*9.81;
 1395              		.loc 1 254 41 view .LVU261
 1396 0128 0022     		movs	r2, #0
 1397 012a 1C4B     		ldr	r3, .L47+44
 1398 012c FFF7FEFF 		bl	__aeabi_ddiv
 1399              	.LVL115:
 254:Core/Src/main.c ****   buffer_xyz[2] = ((double)z_val * 0.488/1000)*9.81;
 1400              		.loc 1 254 47 view .LVU262
 1401 0130 11A3     		adr	r3, .L47+8
 1402 0132 D3E90023 		ldrd	r2, [r3]
 1403 0136 FFF7FEFF 		bl	__aeabi_dmul
 1404              	.LVL116:
 254:Core/Src/main.c ****   buffer_xyz[2] = ((double)z_val * 0.488/1000)*9.81;
 1405              		.loc 1 254 17 view .LVU263
 1406 013a C8E90201 		strd	r0, [r8, #8]
 255:Core/Src/main.c **** }
 1407              		.loc 1 255 3 is_stmt 1 view .LVU264
 255:Core/Src/main.c **** }
 1408              		.loc 1 255 20 is_stmt 0 view .LVU265
 1409 013e 2046     		mov	r0, r4
 1410 0140 FFF7FEFF 		bl	__aeabi_i2d
 1411              	.LVL117:
 255:Core/Src/main.c **** }
 1412              		.loc 1 255 34 view .LVU266
 1413 0144 0AA3     		adr	r3, .L47
 1414 0146 D3E90023 		ldrd	r2, [r3]
 1415 014a FFF7FEFF 		bl	__aeabi_dmul
 1416              	.LVL118:
 255:Core/Src/main.c **** }
 1417              		.loc 1 255 41 view .LVU267
 1418 014e 0022     		movs	r2, #0
 1419 0150 124B     		ldr	r3, .L47+44
 1420 0152 FFF7FEFF 		bl	__aeabi_ddiv
 1421              	.LVL119:
 255:Core/Src/main.c **** }
 1422              		.loc 1 255 47 view .LVU268
 1423 0156 08A3     		adr	r3, .L47+8
 1424 0158 D3E90023 		ldrd	r2, [r3]
 1425 015c FFF7FEFF 		bl	__aeabi_dmul
 1426              	.LVL120:
 255:Core/Src/main.c **** }
 1427              		.loc 1 255 17 view .LVU269
 1428 0160 C8E90401 		strd	r0, [r8, #16]
 256:Core/Src/main.c **** 
 1429              		.loc 1 256 1 view .LVU270
ARM GAS  /tmp/ccAzc5t0.s 			page 41


 1430 0164 09B0     		add	sp, sp, #36
 1431              		.cfi_def_cfa_offset 36
 1432              		@ sp needed
 1433 0166 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1434              	.LVL121:
 1435              	.L48:
 256:Core/Src/main.c **** 
 1436              		.loc 1 256 1 view .LVU271
 1437 016a 00BFAFF3 		.align	3
 1437      0080
 1438              	.L47:
 1439 0170 08AC1C5A 		.word	1511828488
 1440 0174 643BDF3F 		.word	1071594340
 1441 0178 1F85EB51 		.word	1374389535
 1442 017c B89E2340 		.word	1076076216
 1443 0180 00000000 		.word	hi2c1
 1444 0184 00000000 		.word	.LC25
 1445 0188 0C000000 		.word	.LC26
 1446 018c 18000000 		.word	.LC27
 1447 0190 24000000 		.word	.LC28
 1448 0194 30000000 		.word	.LC29
 1449 0198 3C000000 		.word	.LC30
 1450 019c 00408F40 		.word	1083129856
 1451              		.cfi_endproc
 1452              	.LFE143:
 1454              		.section	.text.Error_Handler,"ax",%progbits
 1455              		.align	1
 1456              		.global	Error_Handler
 1457              		.syntax unified
 1458              		.thumb
 1459              		.thumb_func
 1461              	Error_Handler:
 1462              	.LFB150:
 565:Core/Src/main.c **** 
 566:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 567:Core/Src/main.c **** 
 568:Core/Src/main.c **** /* USER CODE END 4 */
 569:Core/Src/main.c **** 
 570:Core/Src/main.c **** /**
 571:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 572:Core/Src/main.c ****   * @retval None
 573:Core/Src/main.c ****   */
 574:Core/Src/main.c **** void Error_Handler(void)
 575:Core/Src/main.c **** {
 1463              		.loc 1 575 1 is_stmt 1 view -0
 1464              		.cfi_startproc
 1465              		@ Volatile: function does not return.
 1466              		@ args = 0, pretend = 0, frame = 0
 1467              		@ frame_needed = 0, uses_anonymous_args = 0
 1468              		@ link register save eliminated.
 576:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 577:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 578:Core/Src/main.c ****   __disable_irq();
 1469              		.loc 1 578 3 view .LVU273
 1470              	.LBB10:
 1471              	.LBI10:
 1472              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
ARM GAS  /tmp/ccAzc5t0.s 			page 42


   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccAzc5t0.s 			page 43


  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
ARM GAS  /tmp/ccAzc5t0.s 			page 44


 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccAzc5t0.s 			page 45


 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
ARM GAS  /tmp/ccAzc5t0.s 			page 46


 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccAzc5t0.s 			page 47


 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
ARM GAS  /tmp/ccAzc5t0.s 			page 48


 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
ARM GAS  /tmp/ccAzc5t0.s 			page 49


 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
ARM GAS  /tmp/ccAzc5t0.s 			page 50


 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccAzc5t0.s 			page 51


 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccAzc5t0.s 			page 52


 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
ARM GAS  /tmp/ccAzc5t0.s 			page 53


 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccAzc5t0.s 			page 54


 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
ARM GAS  /tmp/ccAzc5t0.s 			page 55


 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccAzc5t0.s 			page 56


 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
ARM GAS  /tmp/ccAzc5t0.s 			page 57


 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  /tmp/ccAzc5t0.s 			page 58


 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1473              		.loc 2 960 27 view .LVU274
 1474              	.LBB11:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1475              		.loc 2 962 3 view .LVU275
 1476              		.syntax unified
 1477              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1478 0000 72B6     		cpsid i
 1479              	@ 0 "" 2
ARM GAS  /tmp/ccAzc5t0.s 			page 59


 1480              		.thumb
 1481              		.syntax unified
 1482              	.L50:
 1483              	.LBE11:
 1484              	.LBE10:
 579:Core/Src/main.c ****   while (1)
 1485              		.loc 1 579 3 view .LVU276
 580:Core/Src/main.c ****   {
 581:Core/Src/main.c ****   }
 1486              		.loc 1 581 3 view .LVU277
 579:Core/Src/main.c ****   while (1)
 1487              		.loc 1 579 9 view .LVU278
 1488 0002 FEE7     		b	.L50
 1489              		.cfi_endproc
 1490              	.LFE150:
 1492              		.section	.text.MX_I2C1_Init,"ax",%progbits
 1493              		.align	1
 1494              		.syntax unified
 1495              		.thumb
 1496              		.thumb_func
 1498              	MX_I2C1_Init:
 1499              	.LFB146:
 412:Core/Src/main.c **** 
 1500              		.loc 1 412 1 view -0
 1501              		.cfi_startproc
 1502              		@ args = 0, pretend = 0, frame = 0
 1503              		@ frame_needed = 0, uses_anonymous_args = 0
 1504 0000 08B5     		push	{r3, lr}
 1505              		.cfi_def_cfa_offset 8
 1506              		.cfi_offset 3, -8
 1507              		.cfi_offset 14, -4
 421:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 1508              		.loc 1 421 3 view .LVU280
 421:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 1509              		.loc 1 421 18 is_stmt 0 view .LVU281
 1510 0002 0A48     		ldr	r0, .L55
 1511 0004 0A4B     		ldr	r3, .L55+4
 1512 0006 0360     		str	r3, [r0]
 422:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1513              		.loc 1 422 3 is_stmt 1 view .LVU282
 422:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1514              		.loc 1 422 25 is_stmt 0 view .LVU283
 1515 0008 0A4B     		ldr	r3, .L55+8
 1516 000a 4360     		str	r3, [r0, #4]
 423:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 1517              		.loc 1 423 3 is_stmt 1 view .LVU284
 423:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 1518              		.loc 1 423 24 is_stmt 0 view .LVU285
 1519 000c 0023     		movs	r3, #0
 1520 000e 8360     		str	r3, [r0, #8]
 424:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1521              		.loc 1 424 3 is_stmt 1 view .LVU286
 424:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1522              		.loc 1 424 26 is_stmt 0 view .LVU287
 1523 0010 C360     		str	r3, [r0, #12]
 425:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1524              		.loc 1 425 3 is_stmt 1 view .LVU288
ARM GAS  /tmp/ccAzc5t0.s 			page 60


 425:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1525              		.loc 1 425 29 is_stmt 0 view .LVU289
 1526 0012 4FF48042 		mov	r2, #16384
 1527 0016 0261     		str	r2, [r0, #16]
 426:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 1528              		.loc 1 426 3 is_stmt 1 view .LVU290
 426:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 1529              		.loc 1 426 30 is_stmt 0 view .LVU291
 1530 0018 4361     		str	r3, [r0, #20]
 427:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1531              		.loc 1 427 3 is_stmt 1 view .LVU292
 427:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1532              		.loc 1 427 26 is_stmt 0 view .LVU293
 1533 001a 8361     		str	r3, [r0, #24]
 428:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1534              		.loc 1 428 3 is_stmt 1 view .LVU294
 428:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1535              		.loc 1 428 30 is_stmt 0 view .LVU295
 1536 001c C361     		str	r3, [r0, #28]
 429:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1537              		.loc 1 429 3 is_stmt 1 view .LVU296
 429:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1538              		.loc 1 429 28 is_stmt 0 view .LVU297
 1539 001e 0362     		str	r3, [r0, #32]
 430:Core/Src/main.c ****   {
 1540              		.loc 1 430 3 is_stmt 1 view .LVU298
 430:Core/Src/main.c ****   {
 1541              		.loc 1 430 7 is_stmt 0 view .LVU299
 1542 0020 FFF7FEFF 		bl	HAL_I2C_Init
 1543              	.LVL122:
 430:Core/Src/main.c ****   {
 1544              		.loc 1 430 6 discriminator 1 view .LVU300
 1545 0024 00B9     		cbnz	r0, .L54
 438:Core/Src/main.c **** 
 1546              		.loc 1 438 1 view .LVU301
 1547 0026 08BD     		pop	{r3, pc}
 1548              	.L54:
 432:Core/Src/main.c ****   }
 1549              		.loc 1 432 5 is_stmt 1 view .LVU302
 1550 0028 FFF7FEFF 		bl	Error_Handler
 1551              	.LVL123:
 1552              	.L56:
 1553              		.align	2
 1554              	.L55:
 1555 002c 00000000 		.word	hi2c1
 1556 0030 00540040 		.word	1073763328
 1557 0034 A0860100 		.word	100000
 1558              		.cfi_endproc
 1559              	.LFE146:
 1561              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 1562              		.align	1
 1563              		.syntax unified
 1564              		.thumb
 1565              		.thumb_func
 1567              	MX_USART1_UART_Init:
 1568              	.LFB148:
 521:Core/Src/main.c **** 
ARM GAS  /tmp/ccAzc5t0.s 			page 61


 1569              		.loc 1 521 1 view -0
 1570              		.cfi_startproc
 1571              		@ args = 0, pretend = 0, frame = 0
 1572              		@ frame_needed = 0, uses_anonymous_args = 0
 1573 0000 08B5     		push	{r3, lr}
 1574              		.cfi_def_cfa_offset 8
 1575              		.cfi_offset 3, -8
 1576              		.cfi_offset 14, -4
 530:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 1577              		.loc 1 530 3 view .LVU304
 530:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 1578              		.loc 1 530 19 is_stmt 0 view .LVU305
 1579 0002 0A48     		ldr	r0, .L61
 1580 0004 0A4B     		ldr	r3, .L61+4
 1581 0006 0360     		str	r3, [r0]
 531:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1582              		.loc 1 531 3 is_stmt 1 view .LVU306
 531:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1583              		.loc 1 531 24 is_stmt 0 view .LVU307
 1584 0008 4FF4E133 		mov	r3, #115200
 1585 000c 4360     		str	r3, [r0, #4]
 532:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1586              		.loc 1 532 3 is_stmt 1 view .LVU308
 532:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1587              		.loc 1 532 26 is_stmt 0 view .LVU309
 1588 000e 0023     		movs	r3, #0
 1589 0010 8360     		str	r3, [r0, #8]
 533:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1590              		.loc 1 533 3 is_stmt 1 view .LVU310
 533:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1591              		.loc 1 533 24 is_stmt 0 view .LVU311
 1592 0012 C360     		str	r3, [r0, #12]
 534:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1593              		.loc 1 534 3 is_stmt 1 view .LVU312
 534:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1594              		.loc 1 534 22 is_stmt 0 view .LVU313
 1595 0014 0361     		str	r3, [r0, #16]
 535:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1596              		.loc 1 535 3 is_stmt 1 view .LVU314
 535:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1597              		.loc 1 535 20 is_stmt 0 view .LVU315
 1598 0016 0C22     		movs	r2, #12
 1599 0018 4261     		str	r2, [r0, #20]
 536:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1600              		.loc 1 536 3 is_stmt 1 view .LVU316
 536:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1601              		.loc 1 536 25 is_stmt 0 view .LVU317
 1602 001a 8361     		str	r3, [r0, #24]
 537:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1603              		.loc 1 537 3 is_stmt 1 view .LVU318
 537:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1604              		.loc 1 537 28 is_stmt 0 view .LVU319
 1605 001c C361     		str	r3, [r0, #28]
 538:Core/Src/main.c ****   {
 1606              		.loc 1 538 3 is_stmt 1 view .LVU320
 538:Core/Src/main.c ****   {
 1607              		.loc 1 538 7 is_stmt 0 view .LVU321
ARM GAS  /tmp/ccAzc5t0.s 			page 62


 1608 001e FFF7FEFF 		bl	HAL_UART_Init
 1609              	.LVL124:
 538:Core/Src/main.c ****   {
 1610              		.loc 1 538 6 discriminator 1 view .LVU322
 1611 0022 00B9     		cbnz	r0, .L60
 546:Core/Src/main.c **** 
 1612              		.loc 1 546 1 view .LVU323
 1613 0024 08BD     		pop	{r3, pc}
 1614              	.L60:
 540:Core/Src/main.c ****   }
 1615              		.loc 1 540 5 is_stmt 1 view .LVU324
 1616 0026 FFF7FEFF 		bl	Error_Handler
 1617              	.LVL125:
 1618              	.L62:
 1619 002a 00BF     		.align	2
 1620              	.L61:
 1621 002c 00000000 		.word	huart1
 1622 0030 00100140 		.word	1073811456
 1623              		.cfi_endproc
 1624              	.LFE148:
 1626              		.section	.text.MX_TIM1_Init,"ax",%progbits
 1627              		.align	1
 1628              		.syntax unified
 1629              		.thumb
 1630              		.thumb_func
 1632              	MX_TIM1_Init:
 1633              	.LFB147:
 446:Core/Src/main.c **** 
 1634              		.loc 1 446 1 view -0
 1635              		.cfi_startproc
 1636              		@ args = 0, pretend = 0, frame = 88
 1637              		@ frame_needed = 0, uses_anonymous_args = 0
 1638 0000 10B5     		push	{r4, lr}
 1639              		.cfi_def_cfa_offset 8
 1640              		.cfi_offset 4, -8
 1641              		.cfi_offset 14, -4
 1642 0002 96B0     		sub	sp, sp, #88
 1643              		.cfi_def_cfa_offset 96
 452:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1644              		.loc 1 452 3 view .LVU326
 452:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1645              		.loc 1 452 26 is_stmt 0 view .LVU327
 1646 0004 0024     		movs	r4, #0
 1647 0006 1294     		str	r4, [sp, #72]
 1648 0008 1394     		str	r4, [sp, #76]
 1649 000a 1494     		str	r4, [sp, #80]
 1650 000c 1594     		str	r4, [sp, #84]
 453:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1651              		.loc 1 453 3 is_stmt 1 view .LVU328
 453:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1652              		.loc 1 453 27 is_stmt 0 view .LVU329
 1653 000e 1094     		str	r4, [sp, #64]
 1654 0010 1194     		str	r4, [sp, #68]
 454:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1655              		.loc 1 454 3 is_stmt 1 view .LVU330
 454:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1656              		.loc 1 454 22 is_stmt 0 view .LVU331
ARM GAS  /tmp/ccAzc5t0.s 			page 63


 1657 0012 0994     		str	r4, [sp, #36]
 1658 0014 0A94     		str	r4, [sp, #40]
 1659 0016 0B94     		str	r4, [sp, #44]
 1660 0018 0C94     		str	r4, [sp, #48]
 1661 001a 0D94     		str	r4, [sp, #52]
 1662 001c 0E94     		str	r4, [sp, #56]
 1663 001e 0F94     		str	r4, [sp, #60]
 455:Core/Src/main.c **** 
 1664              		.loc 1 455 3 is_stmt 1 view .LVU332
 455:Core/Src/main.c **** 
 1665              		.loc 1 455 34 is_stmt 0 view .LVU333
 1666 0020 2022     		movs	r2, #32
 1667 0022 2146     		mov	r1, r4
 1668 0024 01A8     		add	r0, sp, #4
 1669 0026 FFF7FEFF 		bl	memset
 1670              	.LVL126:
 460:Core/Src/main.c ****   htim1.Init.Prescaler = 999;
 1671              		.loc 1 460 3 is_stmt 1 view .LVU334
 460:Core/Src/main.c ****   htim1.Init.Prescaler = 999;
 1672              		.loc 1 460 18 is_stmt 0 view .LVU335
 1673 002a 2B48     		ldr	r0, .L77
 1674 002c 2B4B     		ldr	r3, .L77+4
 1675 002e 0360     		str	r3, [r0]
 461:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1676              		.loc 1 461 3 is_stmt 1 view .LVU336
 461:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1677              		.loc 1 461 24 is_stmt 0 view .LVU337
 1678 0030 40F2E733 		movw	r3, #999
 1679 0034 4360     		str	r3, [r0, #4]
 462:Core/Src/main.c ****   htim1.Init.Period = 1999;
 1680              		.loc 1 462 3 is_stmt 1 view .LVU338
 462:Core/Src/main.c ****   htim1.Init.Period = 1999;
 1681              		.loc 1 462 26 is_stmt 0 view .LVU339
 1682 0036 8460     		str	r4, [r0, #8]
 463:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1683              		.loc 1 463 3 is_stmt 1 view .LVU340
 463:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1684              		.loc 1 463 21 is_stmt 0 view .LVU341
 1685 0038 40F2CF73 		movw	r3, #1999
 1686 003c C360     		str	r3, [r0, #12]
 464:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 1687              		.loc 1 464 3 is_stmt 1 view .LVU342
 464:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 1688              		.loc 1 464 28 is_stmt 0 view .LVU343
 1689 003e 0461     		str	r4, [r0, #16]
 465:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1690              		.loc 1 465 3 is_stmt 1 view .LVU344
 465:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1691              		.loc 1 465 32 is_stmt 0 view .LVU345
 1692 0040 4461     		str	r4, [r0, #20]
 466:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 1693              		.loc 1 466 3 is_stmt 1 view .LVU346
 466:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 1694              		.loc 1 466 32 is_stmt 0 view .LVU347
 1695 0042 8461     		str	r4, [r0, #24]
 467:Core/Src/main.c ****   {
 1696              		.loc 1 467 3 is_stmt 1 view .LVU348
ARM GAS  /tmp/ccAzc5t0.s 			page 64


 467:Core/Src/main.c ****   {
 1697              		.loc 1 467 7 is_stmt 0 view .LVU349
 1698 0044 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1699              	.LVL127:
 467:Core/Src/main.c ****   {
 1700              		.loc 1 467 6 discriminator 1 view .LVU350
 1701 0048 0028     		cmp	r0, #0
 1702 004a 38D1     		bne	.L71
 471:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 1703              		.loc 1 471 3 is_stmt 1 view .LVU351
 471:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 1704              		.loc 1 471 34 is_stmt 0 view .LVU352
 1705 004c 4FF48053 		mov	r3, #4096
 1706 0050 1293     		str	r3, [sp, #72]
 472:Core/Src/main.c ****   {
 1707              		.loc 1 472 3 is_stmt 1 view .LVU353
 472:Core/Src/main.c ****   {
 1708              		.loc 1 472 7 is_stmt 0 view .LVU354
 1709 0052 12A9     		add	r1, sp, #72
 1710 0054 2048     		ldr	r0, .L77
 1711 0056 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1712              	.LVL128:
 472:Core/Src/main.c ****   {
 1713              		.loc 1 472 6 discriminator 1 view .LVU355
 1714 005a 0028     		cmp	r0, #0
 1715 005c 31D1     		bne	.L72
 476:Core/Src/main.c ****   {
 1716              		.loc 1 476 3 is_stmt 1 view .LVU356
 476:Core/Src/main.c ****   {
 1717              		.loc 1 476 7 is_stmt 0 view .LVU357
 1718 005e 1E48     		ldr	r0, .L77
 1719 0060 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1720              	.LVL129:
 476:Core/Src/main.c ****   {
 1721              		.loc 1 476 6 discriminator 1 view .LVU358
 1722 0064 0028     		cmp	r0, #0
 1723 0066 2ED1     		bne	.L73
 480:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1724              		.loc 1 480 3 is_stmt 1 view .LVU359
 480:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1725              		.loc 1 480 37 is_stmt 0 view .LVU360
 1726 0068 0023     		movs	r3, #0
 1727 006a 1093     		str	r3, [sp, #64]
 481:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1728              		.loc 1 481 3 is_stmt 1 view .LVU361
 481:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1729              		.loc 1 481 33 is_stmt 0 view .LVU362
 1730 006c 1193     		str	r3, [sp, #68]
 482:Core/Src/main.c ****   {
 1731              		.loc 1 482 3 is_stmt 1 view .LVU363
 482:Core/Src/main.c ****   {
 1732              		.loc 1 482 7 is_stmt 0 view .LVU364
 1733 006e 10A9     		add	r1, sp, #64
 1734 0070 1948     		ldr	r0, .L77
 1735 0072 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1736              	.LVL130:
 482:Core/Src/main.c ****   {
ARM GAS  /tmp/ccAzc5t0.s 			page 65


 1737              		.loc 1 482 6 discriminator 1 view .LVU365
 1738 0076 40BB     		cbnz	r0, .L74
 486:Core/Src/main.c ****   sConfigOC.Pulse = 250;
 1739              		.loc 1 486 3 is_stmt 1 view .LVU366
 486:Core/Src/main.c ****   sConfigOC.Pulse = 250;
 1740              		.loc 1 486 20 is_stmt 0 view .LVU367
 1741 0078 6023     		movs	r3, #96
 1742 007a 0993     		str	r3, [sp, #36]
 487:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1743              		.loc 1 487 3 is_stmt 1 view .LVU368
 487:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1744              		.loc 1 487 19 is_stmt 0 view .LVU369
 1745 007c FA23     		movs	r3, #250
 1746 007e 0A93     		str	r3, [sp, #40]
 488:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1747              		.loc 1 488 3 is_stmt 1 view .LVU370
 488:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1748              		.loc 1 488 24 is_stmt 0 view .LVU371
 1749 0080 0022     		movs	r2, #0
 1750 0082 0B92     		str	r2, [sp, #44]
 489:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1751              		.loc 1 489 3 is_stmt 1 view .LVU372
 489:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1752              		.loc 1 489 25 is_stmt 0 view .LVU373
 1753 0084 0C92     		str	r2, [sp, #48]
 490:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1754              		.loc 1 490 3 is_stmt 1 view .LVU374
 490:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1755              		.loc 1 490 24 is_stmt 0 view .LVU375
 1756 0086 0D92     		str	r2, [sp, #52]
 491:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1757              		.loc 1 491 3 is_stmt 1 view .LVU376
 491:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1758              		.loc 1 491 25 is_stmt 0 view .LVU377
 1759 0088 0E92     		str	r2, [sp, #56]
 492:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1760              		.loc 1 492 3 is_stmt 1 view .LVU378
 492:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1761              		.loc 1 492 26 is_stmt 0 view .LVU379
 1762 008a 0F92     		str	r2, [sp, #60]
 493:Core/Src/main.c ****   {
 1763              		.loc 1 493 3 is_stmt 1 view .LVU380
 493:Core/Src/main.c ****   {
 1764              		.loc 1 493 7 is_stmt 0 view .LVU381
 1765 008c 09A9     		add	r1, sp, #36
 1766 008e 1248     		ldr	r0, .L77
 1767 0090 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1768              	.LVL131:
 493:Core/Src/main.c ****   {
 1769              		.loc 1 493 6 discriminator 1 view .LVU382
 1770 0094 D8B9     		cbnz	r0, .L75
 497:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1771              		.loc 1 497 3 is_stmt 1 view .LVU383
 497:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1772              		.loc 1 497 40 is_stmt 0 view .LVU384
 1773 0096 0023     		movs	r3, #0
 1774 0098 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccAzc5t0.s 			page 66


 498:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1775              		.loc 1 498 3 is_stmt 1 view .LVU385
 498:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1776              		.loc 1 498 41 is_stmt 0 view .LVU386
 1777 009a 0293     		str	r3, [sp, #8]
 499:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 1778              		.loc 1 499 3 is_stmt 1 view .LVU387
 499:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 1779              		.loc 1 499 34 is_stmt 0 view .LVU388
 1780 009c 0393     		str	r3, [sp, #12]
 500:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1781              		.loc 1 500 3 is_stmt 1 view .LVU389
 500:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1782              		.loc 1 500 33 is_stmt 0 view .LVU390
 1783 009e 0493     		str	r3, [sp, #16]
 501:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1784              		.loc 1 501 3 is_stmt 1 view .LVU391
 501:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1785              		.loc 1 501 35 is_stmt 0 view .LVU392
 1786 00a0 0593     		str	r3, [sp, #20]
 502:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1787              		.loc 1 502 3 is_stmt 1 view .LVU393
 502:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1788              		.loc 1 502 38 is_stmt 0 view .LVU394
 1789 00a2 4FF40052 		mov	r2, #8192
 1790 00a6 0692     		str	r2, [sp, #24]
 503:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1791              		.loc 1 503 3 is_stmt 1 view .LVU395
 503:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1792              		.loc 1 503 40 is_stmt 0 view .LVU396
 1793 00a8 0893     		str	r3, [sp, #32]
 504:Core/Src/main.c ****   {
 1794              		.loc 1 504 3 is_stmt 1 view .LVU397
 504:Core/Src/main.c ****   {
 1795              		.loc 1 504 7 is_stmt 0 view .LVU398
 1796 00aa 01A9     		add	r1, sp, #4
 1797 00ac 0A48     		ldr	r0, .L77
 1798 00ae FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 1799              	.LVL132:
 504:Core/Src/main.c ****   {
 1800              		.loc 1 504 6 discriminator 1 view .LVU399
 1801 00b2 70B9     		cbnz	r0, .L76
 511:Core/Src/main.c **** 
 1802              		.loc 1 511 3 is_stmt 1 view .LVU400
 1803 00b4 0848     		ldr	r0, .L77
 1804 00b6 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1805              	.LVL133:
 513:Core/Src/main.c **** 
 1806              		.loc 1 513 1 is_stmt 0 view .LVU401
 1807 00ba 16B0     		add	sp, sp, #88
 1808              		.cfi_remember_state
 1809              		.cfi_def_cfa_offset 8
 1810              		@ sp needed
 1811 00bc 10BD     		pop	{r4, pc}
 1812              	.L71:
 1813              		.cfi_restore_state
 469:Core/Src/main.c ****   }
ARM GAS  /tmp/ccAzc5t0.s 			page 67


 1814              		.loc 1 469 5 is_stmt 1 view .LVU402
 1815 00be FFF7FEFF 		bl	Error_Handler
 1816              	.LVL134:
 1817              	.L72:
 474:Core/Src/main.c ****   }
 1818              		.loc 1 474 5 view .LVU403
 1819 00c2 FFF7FEFF 		bl	Error_Handler
 1820              	.LVL135:
 1821              	.L73:
 478:Core/Src/main.c ****   }
 1822              		.loc 1 478 5 view .LVU404
 1823 00c6 FFF7FEFF 		bl	Error_Handler
 1824              	.LVL136:
 1825              	.L74:
 484:Core/Src/main.c ****   }
 1826              		.loc 1 484 5 view .LVU405
 1827 00ca FFF7FEFF 		bl	Error_Handler
 1828              	.LVL137:
 1829              	.L75:
 495:Core/Src/main.c ****   }
 1830              		.loc 1 495 5 view .LVU406
 1831 00ce FFF7FEFF 		bl	Error_Handler
 1832              	.LVL138:
 1833              	.L76:
 506:Core/Src/main.c ****   }
 1834              		.loc 1 506 5 view .LVU407
 1835 00d2 FFF7FEFF 		bl	Error_Handler
 1836              	.LVL139:
 1837              	.L78:
 1838 00d6 00BF     		.align	2
 1839              	.L77:
 1840 00d8 00000000 		.word	htim1
 1841 00dc 00000140 		.word	1073807360
 1842              		.cfi_endproc
 1843              	.LFE147:
 1845              		.section	.text.SystemClock_Config,"ax",%progbits
 1846              		.align	1
 1847              		.global	SystemClock_Config
 1848              		.syntax unified
 1849              		.thumb
 1850              		.thumb_func
 1852              	SystemClock_Config:
 1853              	.LFB145:
 365:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1854              		.loc 1 365 1 view -0
 1855              		.cfi_startproc
 1856              		@ args = 0, pretend = 0, frame = 80
 1857              		@ frame_needed = 0, uses_anonymous_args = 0
 1858 0000 10B5     		push	{r4, lr}
 1859              		.cfi_def_cfa_offset 8
 1860              		.cfi_offset 4, -8
 1861              		.cfi_offset 14, -4
 1862 0002 94B0     		sub	sp, sp, #80
 1863              		.cfi_def_cfa_offset 88
 366:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1864              		.loc 1 366 3 view .LVU409
 366:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
ARM GAS  /tmp/ccAzc5t0.s 			page 68


 1865              		.loc 1 366 22 is_stmt 0 view .LVU410
 1866 0004 08AC     		add	r4, sp, #32
 1867 0006 3022     		movs	r2, #48
 1868 0008 0021     		movs	r1, #0
 1869 000a 2046     		mov	r0, r4
 1870 000c FFF7FEFF 		bl	memset
 1871              	.LVL140:
 367:Core/Src/main.c **** 
 1872              		.loc 1 367 3 is_stmt 1 view .LVU411
 367:Core/Src/main.c **** 
 1873              		.loc 1 367 22 is_stmt 0 view .LVU412
 1874 0010 0023     		movs	r3, #0
 1875 0012 0393     		str	r3, [sp, #12]
 1876 0014 0493     		str	r3, [sp, #16]
 1877 0016 0593     		str	r3, [sp, #20]
 1878 0018 0693     		str	r3, [sp, #24]
 1879 001a 0793     		str	r3, [sp, #28]
 371:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1880              		.loc 1 371 3 is_stmt 1 view .LVU413
 1881              	.LBB12:
 371:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1882              		.loc 1 371 3 view .LVU414
 1883 001c 0193     		str	r3, [sp, #4]
 371:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1884              		.loc 1 371 3 view .LVU415
 1885 001e 1E4A     		ldr	r2, .L85
 1886 0020 116C     		ldr	r1, [r2, #64]
 1887 0022 41F08051 		orr	r1, r1, #268435456
 1888 0026 1164     		str	r1, [r2, #64]
 371:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1889              		.loc 1 371 3 view .LVU416
 1890 0028 126C     		ldr	r2, [r2, #64]
 1891 002a 02F08052 		and	r2, r2, #268435456
 1892 002e 0192     		str	r2, [sp, #4]
 371:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1893              		.loc 1 371 3 view .LVU417
 1894 0030 019A     		ldr	r2, [sp, #4]
 1895              	.LBE12:
 371:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1896              		.loc 1 371 3 view .LVU418
 372:Core/Src/main.c **** 
 1897              		.loc 1 372 3 view .LVU419
 1898              	.LBB13:
 372:Core/Src/main.c **** 
 1899              		.loc 1 372 3 view .LVU420
 1900 0032 0293     		str	r3, [sp, #8]
 372:Core/Src/main.c **** 
 1901              		.loc 1 372 3 view .LVU421
 1902 0034 194A     		ldr	r2, .L85+4
 1903 0036 1168     		ldr	r1, [r2]
 1904 0038 41F44041 		orr	r1, r1, #49152
 1905 003c 1160     		str	r1, [r2]
 372:Core/Src/main.c **** 
 1906              		.loc 1 372 3 view .LVU422
 1907 003e 1268     		ldr	r2, [r2]
 1908 0040 02F44042 		and	r2, r2, #49152
 1909 0044 0292     		str	r2, [sp, #8]
ARM GAS  /tmp/ccAzc5t0.s 			page 69


 372:Core/Src/main.c **** 
 1910              		.loc 1 372 3 view .LVU423
 1911 0046 029A     		ldr	r2, [sp, #8]
 1912              	.LBE13:
 372:Core/Src/main.c **** 
 1913              		.loc 1 372 3 view .LVU424
 377:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1914              		.loc 1 377 3 view .LVU425
 377:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1915              		.loc 1 377 36 is_stmt 0 view .LVU426
 1916 0048 0222     		movs	r2, #2
 1917 004a 0892     		str	r2, [sp, #32]
 378:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1918              		.loc 1 378 3 is_stmt 1 view .LVU427
 378:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1919              		.loc 1 378 30 is_stmt 0 view .LVU428
 1920 004c 0121     		movs	r1, #1
 1921 004e 0B91     		str	r1, [sp, #44]
 379:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1922              		.loc 1 379 3 is_stmt 1 view .LVU429
 379:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1923              		.loc 1 379 41 is_stmt 0 view .LVU430
 1924 0050 1021     		movs	r1, #16
 1925 0052 0C91     		str	r1, [sp, #48]
 380:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1926              		.loc 1 380 3 is_stmt 1 view .LVU431
 380:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1927              		.loc 1 380 34 is_stmt 0 view .LVU432
 1928 0054 0E92     		str	r2, [sp, #56]
 381:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1929              		.loc 1 381 3 is_stmt 1 view .LVU433
 381:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1930              		.loc 1 381 35 is_stmt 0 view .LVU434
 1931 0056 0F93     		str	r3, [sp, #60]
 382:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 100;
 1932              		.loc 1 382 3 is_stmt 1 view .LVU435
 382:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 100;
 1933              		.loc 1 382 30 is_stmt 0 view .LVU436
 1934 0058 0823     		movs	r3, #8
 1935 005a 1093     		str	r3, [sp, #64]
 383:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1936              		.loc 1 383 3 is_stmt 1 view .LVU437
 383:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1937              		.loc 1 383 30 is_stmt 0 view .LVU438
 1938 005c 6423     		movs	r3, #100
 1939 005e 1193     		str	r3, [sp, #68]
 384:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1940              		.loc 1 384 3 is_stmt 1 view .LVU439
 384:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1941              		.loc 1 384 30 is_stmt 0 view .LVU440
 1942 0060 1292     		str	r2, [sp, #72]
 385:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1943              		.loc 1 385 3 is_stmt 1 view .LVU441
 385:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1944              		.loc 1 385 30 is_stmt 0 view .LVU442
 1945 0062 0423     		movs	r3, #4
 1946 0064 1393     		str	r3, [sp, #76]
ARM GAS  /tmp/ccAzc5t0.s 			page 70


 386:Core/Src/main.c ****   {
 1947              		.loc 1 386 3 is_stmt 1 view .LVU443
 386:Core/Src/main.c ****   {
 1948              		.loc 1 386 7 is_stmt 0 view .LVU444
 1949 0066 2046     		mov	r0, r4
 1950 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1951              	.LVL141:
 386:Core/Src/main.c ****   {
 1952              		.loc 1 386 6 discriminator 1 view .LVU445
 1953 006c 80B9     		cbnz	r0, .L83
 393:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1954              		.loc 1 393 3 is_stmt 1 view .LVU446
 393:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1955              		.loc 1 393 31 is_stmt 0 view .LVU447
 1956 006e 0F23     		movs	r3, #15
 1957 0070 0393     		str	r3, [sp, #12]
 395:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1958              		.loc 1 395 3 is_stmt 1 view .LVU448
 395:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1959              		.loc 1 395 34 is_stmt 0 view .LVU449
 1960 0072 0223     		movs	r3, #2
 1961 0074 0493     		str	r3, [sp, #16]
 396:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1962              		.loc 1 396 3 is_stmt 1 view .LVU450
 396:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1963              		.loc 1 396 35 is_stmt 0 view .LVU451
 1964 0076 0023     		movs	r3, #0
 1965 0078 0593     		str	r3, [sp, #20]
 397:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1966              		.loc 1 397 3 is_stmt 1 view .LVU452
 397:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1967              		.loc 1 397 36 is_stmt 0 view .LVU453
 1968 007a 4FF48052 		mov	r2, #4096
 1969 007e 0692     		str	r2, [sp, #24]
 398:Core/Src/main.c **** 
 1970              		.loc 1 398 3 is_stmt 1 view .LVU454
 398:Core/Src/main.c **** 
 1971              		.loc 1 398 36 is_stmt 0 view .LVU455
 1972 0080 0793     		str	r3, [sp, #28]
 400:Core/Src/main.c ****   {
 1973              		.loc 1 400 3 is_stmt 1 view .LVU456
 400:Core/Src/main.c ****   {
 1974              		.loc 1 400 7 is_stmt 0 view .LVU457
 1975 0082 0321     		movs	r1, #3
 1976 0084 03A8     		add	r0, sp, #12
 1977 0086 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1978              	.LVL142:
 400:Core/Src/main.c ****   {
 1979              		.loc 1 400 6 discriminator 1 view .LVU458
 1980 008a 18B9     		cbnz	r0, .L84
 404:Core/Src/main.c **** 
 1981              		.loc 1 404 1 view .LVU459
 1982 008c 14B0     		add	sp, sp, #80
 1983              		.cfi_remember_state
 1984              		.cfi_def_cfa_offset 8
 1985              		@ sp needed
 1986 008e 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccAzc5t0.s 			page 71


 1987              	.L83:
 1988              		.cfi_restore_state
 388:Core/Src/main.c ****   }
 1989              		.loc 1 388 5 is_stmt 1 view .LVU460
 1990 0090 FFF7FEFF 		bl	Error_Handler
 1991              	.LVL143:
 1992              	.L84:
 402:Core/Src/main.c ****   }
 1993              		.loc 1 402 5 view .LVU461
 1994 0094 FFF7FEFF 		bl	Error_Handler
 1995              	.LVL144:
 1996              	.L86:
 1997              		.align	2
 1998              	.L85:
 1999 0098 00380240 		.word	1073887232
 2000 009c 00700040 		.word	1073770496
 2001              		.cfi_endproc
 2002              	.LFE145:
 2004              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 2005              		.align	2
 2006              	.LC33:
 2007 0000 74656D70 		.ascii	"temp_msb\000"
 2007      5F6D7362 
 2007      00
 2008 0009 000000   		.align	2
 2009              	.LC34:
 2010 000c 74656D70 		.ascii	"temp_lsb\000"
 2010      5F6C7362 
 2010      00
 2011 0015 000000   		.align	2
 2012              	.LC35:
 2013 0018 74656D70 		.ascii	"temp_xlsb\000"
 2013      5F786C73 
 2013      6200
 2014 0022 0000     		.align	2
 2015              	.LC36:
 2016 0024 54656D70 		.ascii	"Temperature: %.2f Celsius\012\012\015\000"
 2016      65726174 
 2016      7572653A 
 2016      20252E32 
 2016      66204365 
 2017 0041 000000   		.align	2
 2018              	.LC37:
 2019 0044 70726573 		.ascii	"press_msb\000"
 2019      735F6D73 
 2019      6200
 2020 004e 0000     		.align	2
 2021              	.LC38:
 2022 0050 70726573 		.ascii	"press_lsb\000"
 2022      735F6C73 
 2022      6200
 2023 005a 0000     		.align	2
 2024              	.LC39:
 2025 005c 70726573 		.ascii	"press_xlsb\000"
 2025      735F786C 
 2025      736200
 2026 0067 00       		.align	2
ARM GAS  /tmp/ccAzc5t0.s 			page 72


 2027              	.LC40:
 2028 0068 50726573 		.ascii	"Pressure: %.4f Pa\012\012\015\000"
 2028      73757265 
 2028      3A20252E 
 2028      34662050 
 2028      610A0A0D 
 2029 007d 000000   		.align	2
 2030              	.LC42:
 2031 0080 41636365 		.ascii	"Acceleration: (%0.4f, %0.4f, %0.4f) \012\012\015\000"
 2031      6C657261 
 2031      74696F6E 
 2031      3A202825 
 2031      302E3466 
 2032              		.section	.text.main,"ax",%progbits
 2033              		.align	1
 2034              		.global	main
 2035              		.syntax unified
 2036              		.thumb
 2037              		.thumb_func
 2039              	main:
 2040              	.LFB144:
 265:Core/Src/main.c **** 
 2041              		.loc 1 265 1 view -0
 2042              		.cfi_startproc
 2043              		@ args = 0, pretend = 0, frame = 640
 2044              		@ frame_needed = 0, uses_anonymous_args = 0
 2045 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 2046              		.cfi_def_cfa_offset 28
 2047              		.cfi_offset 4, -28
 2048              		.cfi_offset 5, -24
 2049              		.cfi_offset 6, -20
 2050              		.cfi_offset 7, -16
 2051              		.cfi_offset 8, -12
 2052              		.cfi_offset 9, -8
 2053              		.cfi_offset 14, -4
 2054 0004 ADF5257D 		sub	sp, sp, #660
 2055              		.cfi_def_cfa_offset 688
 268:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)data, strlen(data), 1000);
 2056              		.loc 1 268 5 view .LVU463
 268:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)data, strlen(data), 1000);
 2057              		.loc 1 268 10 is_stmt 0 view .LVU464
 2058 0008 B84D     		ldr	r5, .L92
 2059 000a 8BAC     		add	r4, sp, #556
 2060 000c E86C     		ldr	r0, [r5, #76]	@ unaligned
 2061 000e 296D     		ldr	r1, [r5, #80]	@ unaligned
 2062 0010 6A6D     		ldr	r2, [r5, #84]	@ unaligned
 2063 0012 AB6D     		ldr	r3, [r5, #88]	@ unaligned
 2064 0014 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 2065 0016 E86D     		ldr	r0, [r5, #92]	@ unaligned
 2066 0018 296E     		ldr	r1, [r5, #96]	@ unaligned
 2067 001a 03C4     		stmia	r4!, {r0, r1}
 2068 001c 4C22     		movs	r2, #76
 2069 001e 0021     		movs	r1, #0
 2070 0020 2046     		mov	r0, r4
 2071 0022 FFF7FEFF 		bl	memset
 2072              	.LVL145:
 269:Core/Src/main.c **** 
ARM GAS  /tmp/ccAzc5t0.s 			page 73


 2073              		.loc 1 269 5 is_stmt 1 view .LVU465
 269:Core/Src/main.c **** 
 2074              		.loc 1 269 48 is_stmt 0 view .LVU466
 2075 0026 8BAC     		add	r4, sp, #556
 2076 0028 2046     		mov	r0, r4
 2077 002a FFF7FEFF 		bl	strlen
 2078              	.LVL146:
 269:Core/Src/main.c **** 
 2079              		.loc 1 269 5 discriminator 1 view .LVU467
 2080 002e 4FF47A73 		mov	r3, #1000
 2081 0032 82B2     		uxth	r2, r0
 2082 0034 2146     		mov	r1, r4
 2083 0036 AE48     		ldr	r0, .L92+4
 2084 0038 FFF7FEFF 		bl	HAL_UART_Transmit
 2085              	.LVL147:
 276:Core/Src/main.c **** 
 2086              		.loc 1 276 3 is_stmt 1 view .LVU468
 2087 003c FFF7FEFF 		bl	HAL_Init
 2088              	.LVL148:
 283:Core/Src/main.c **** 
 2089              		.loc 1 283 3 view .LVU469
 2090 0040 FFF7FEFF 		bl	SystemClock_Config
 2091              	.LVL149:
 290:Core/Src/main.c ****   MX_I2C1_Init();
 2092              		.loc 1 290 3 view .LVU470
 2093 0044 FFF7FEFF 		bl	MX_GPIO_Init
 2094              	.LVL150:
 291:Core/Src/main.c ****   MX_USART1_UART_Init();
 2095              		.loc 1 291 3 view .LVU471
 2096 0048 FFF7FEFF 		bl	MX_I2C1_Init
 2097              	.LVL151:
 292:Core/Src/main.c ****   MX_TIM1_Init();
 2098              		.loc 1 292 3 view .LVU472
 2099 004c FFF7FEFF 		bl	MX_USART1_UART_Init
 2100              	.LVL152:
 293:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 2101              		.loc 1 293 3 view .LVU473
 2102 0050 FFF7FEFF 		bl	MX_TIM1_Init
 2103              	.LVL153:
 295:Core/Src/main.c **** 
 2104              		.loc 1 295 3 view .LVU474
 2105 0054 0021     		movs	r1, #0
 2106 0056 A748     		ldr	r0, .L92+8
 2107 0058 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 2108              	.LVL154:
 297:Core/Src/main.c ****   InitBmp();
 2109              		.loc 1 297 3 view .LVU475
 2110 005c FFF7FEFF 		bl	Acc_LSM_Init
 2111              	.LVL155:
 298:Core/Src/main.c ****   Read_Dig_Variables();
 2112              		.loc 1 298 3 view .LVU476
 2113 0060 FFF7FEFF 		bl	InitBmp
 2114              	.LVL156:
 299:Core/Src/main.c **** 
 2115              		.loc 1 299 3 view .LVU477
 2116 0064 FFF7FEFF 		bl	Read_Dig_Variables
 2117              	.LVL157:
ARM GAS  /tmp/ccAzc5t0.s 			page 74


 302:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Write(&hi2c1, 0x76 << 1, 0xF4, I2C_MEMADD_SIZE_8BIT, &ctrl_meas,
 2118              		.loc 1 302 3 view .LVU478
 302:Core/Src/main.c ****   UART_Send_HAL_Status(HAL_I2C_Mem_Write(&hi2c1, 0x76 << 1, 0xF4, I2C_MEMADD_SIZE_8BIT, &ctrl_meas,
 2119              		.loc 1 302 11 is_stmt 0 view .LVU479
 2120 0068 4923     		movs	r3, #73
 2121 006a 8DF82B32 		strb	r3, [sp, #555]
 303:Core/Src/main.c **** 
 2122              		.loc 1 303 3 is_stmt 1 view .LVU480
 2123 006e FF23     		movs	r3, #255
 2124 0070 0293     		str	r3, [sp, #8]
 2125 0072 0123     		movs	r3, #1
 2126 0074 0193     		str	r3, [sp, #4]
 2127 0076 0DF22B22 		addw	r2, sp, #555
 2128 007a 0092     		str	r2, [sp]
 2129 007c F422     		movs	r2, #244
 2130 007e EC21     		movs	r1, #236
 2131 0080 9D48     		ldr	r0, .L92+12
 2132 0082 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 2133              	.LVL158:
 303:Core/Src/main.c **** 
 2134              		.loc 1 303 3 is_stmt 0 discriminator 1 view .LVU481
 2135 0086 9D49     		ldr	r1, .L92+16
 2136 0088 FFF7FEFF 		bl	UART_Send_HAL_Status
 2137              	.LVL159:
 2138              	.L90:
 309:Core/Src/main.c ****   {
 2139              		.loc 1 309 3 is_stmt 1 view .LVU482
 2140              	.LBB14:
 311:Core/Src/main.c **** 
 2141              		.loc 1 311 5 view .LVU483
 2142 008c 4FF47A70 		mov	r0, #1000
 2143 0090 FFF7FEFF 		bl	HAL_Delay
 2144              	.LVL160:
 313:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)data, strlen(data), 1000);
 2145              		.loc 1 313 5 view .LVU484
 313:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)data, strlen(data), 1000);
 2146              		.loc 1 313 10 is_stmt 0 view .LVU485
 2147 0094 0DAE     		add	r6, sp, #52
 2148 0096 954C     		ldr	r4, .L92
 2149 0098 04F1640C 		add	ip, r4, #100
 2150 009c 3546     		mov	r5, r6
 2151 009e 9434     		adds	r4, r4, #148
 2152              	.L88:
 2153 00a0 AE46     		mov	lr, r5
 2154 00a2 DCF80000 		ldr	r0, [ip]	@ unaligned
 2155 00a6 DCF80410 		ldr	r1, [ip, #4]	@ unaligned
 2156 00aa DCF80820 		ldr	r2, [ip, #8]	@ unaligned
 2157 00ae DCF80C30 		ldr	r3, [ip, #12]	@ unaligned
 2158 00b2 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 2159 00b6 0CF1100C 		add	ip, ip, #16
 2160 00ba 7546     		mov	r5, lr
 2161 00bc A445     		cmp	ip, r4
 2162 00be EFD1     		bne	.L88
 2163 00c0 DCF80000 		ldr	r0, [ip]	@ unaligned
 2164 00c4 CEF80000 		str	r0, [lr]
 2165 00c8 9CF80430 		ldrb	r3, [ip, #4]	@ zero_extendqisi2
 2166 00cc 8EF80430 		strb	r3, [lr, #4]
ARM GAS  /tmp/ccAzc5t0.s 			page 75


 2167 00d0 2F22     		movs	r2, #47
 2168 00d2 0021     		movs	r1, #0
 2169 00d4 06F13500 		add	r0, r6, #53
 2170 00d8 FFF7FEFF 		bl	memset
 2171              	.LVL161:
 314:Core/Src/main.c **** 
 2172              		.loc 1 314 5 is_stmt 1 view .LVU486
 314:Core/Src/main.c **** 
 2173              		.loc 1 314 48 is_stmt 0 view .LVU487
 2174 00dc 0DAC     		add	r4, sp, #52
 2175 00de 2046     		mov	r0, r4
 2176 00e0 FFF7FEFF 		bl	strlen
 2177              	.LVL162:
 314:Core/Src/main.c **** 
 2178              		.loc 1 314 5 discriminator 1 view .LVU488
 2179 00e4 DFF80882 		ldr	r8, .L92+4
 2180 00e8 4FF47A73 		mov	r3, #1000
 2181 00ec 82B2     		uxth	r2, r0
 2182 00ee 2146     		mov	r1, r4
 2183 00f0 4046     		mov	r0, r8
 2184 00f2 FFF7FEFF 		bl	HAL_UART_Transmit
 2185              	.LVL163:
 317:Core/Src/main.c ****     temp_raw[0] = temp_raw[1] = temp_raw[2]  = 0;
 2186              		.loc 1 317 5 is_stmt 1 view .LVU489
 318:Core/Src/main.c ****     UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0xFA, I2C_MEMADD_SIZE_8BIT, temp_raw, 
 2187              		.loc 1 318 5 view .LVU490
 318:Core/Src/main.c ****     UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0xFA, I2C_MEMADD_SIZE_8BIT, temp_raw, 
 2188              		.loc 1 318 46 is_stmt 0 view .LVU491
 2189 00f6 04AD     		add	r5, sp, #16
 2190 00f8 4FF00009 		mov	r9, #0
 2191 00fc 8DF81290 		strb	r9, [sp, #18]
 318:Core/Src/main.c ****     UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0xFA, I2C_MEMADD_SIZE_8BIT, temp_raw, 
 2192              		.loc 1 318 31 view .LVU492
 2193 0100 8DF81190 		strb	r9, [sp, #17]
 318:Core/Src/main.c ****     UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0xFA, I2C_MEMADD_SIZE_8BIT, temp_raw, 
 2194              		.loc 1 318 17 view .LVU493
 2195 0104 8DF81090 		strb	r9, [sp, #16]
 319:Core/Src/main.c ****     UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0xFB, I2C_MEMADD_SIZE_8BIT, temp_raw+1
 2196              		.loc 1 319 5 is_stmt 1 view .LVU494
 2197 0108 7B4E     		ldr	r6, .L92+12
 2198 010a FF27     		movs	r7, #255
 2199 010c 0297     		str	r7, [sp, #8]
 2200 010e 0124     		movs	r4, #1
 2201 0110 0194     		str	r4, [sp, #4]
 2202 0112 0095     		str	r5, [sp]
 2203 0114 2346     		mov	r3, r4
 2204 0116 FA22     		movs	r2, #250
 2205 0118 EC21     		movs	r1, #236
 2206 011a 3046     		mov	r0, r6
 2207 011c FFF7FEFF 		bl	HAL_I2C_Mem_Read
 2208              	.LVL164:
 319:Core/Src/main.c ****     UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0xFB, I2C_MEMADD_SIZE_8BIT, temp_raw+1
 2209              		.loc 1 319 5 is_stmt 0 discriminator 1 view .LVU495
 2210 0120 7749     		ldr	r1, .L92+20
 2211 0122 FFF7FEFF 		bl	UART_Send_HAL_Status
 2212              	.LVL165:
 320:Core/Src/main.c ****     UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0xFC, I2C_MEMADD_SIZE_8BIT, temp_raw+2
ARM GAS  /tmp/ccAzc5t0.s 			page 76


 2213              		.loc 1 320 5 is_stmt 1 view .LVU496
 2214 0126 0297     		str	r7, [sp, #8]
 2215 0128 0194     		str	r4, [sp, #4]
 2216 012a 0DF11103 		add	r3, sp, #17
 2217 012e 0093     		str	r3, [sp]
 2218 0130 2346     		mov	r3, r4
 2219 0132 FB22     		movs	r2, #251
 2220 0134 EC21     		movs	r1, #236
 2221 0136 3046     		mov	r0, r6
 2222 0138 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 2223              	.LVL166:
 320:Core/Src/main.c ****     UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0xFC, I2C_MEMADD_SIZE_8BIT, temp_raw+2
 2224              		.loc 1 320 5 is_stmt 0 discriminator 1 view .LVU497
 2225 013c 7149     		ldr	r1, .L92+24
 2226 013e FFF7FEFF 		bl	UART_Send_HAL_Status
 2227              	.LVL167:
 321:Core/Src/main.c **** 
 2228              		.loc 1 321 5 is_stmt 1 view .LVU498
 2229 0142 0297     		str	r7, [sp, #8]
 2230 0144 0194     		str	r4, [sp, #4]
 2231 0146 0DF11203 		add	r3, sp, #18
 2232 014a 0093     		str	r3, [sp]
 2233 014c 2346     		mov	r3, r4
 2234 014e FC22     		movs	r2, #252
 2235 0150 EC21     		movs	r1, #236
 2236 0152 3046     		mov	r0, r6
 2237 0154 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 2238              	.LVL168:
 321:Core/Src/main.c **** 
 2239              		.loc 1 321 5 is_stmt 0 discriminator 1 view .LVU499
 2240 0158 6B49     		ldr	r1, .L92+28
 2241 015a FFF7FEFF 		bl	UART_Send_HAL_Status
 2242              	.LVL169:
 323:Core/Src/main.c ****     actual_temp = 0;
 2243              		.loc 1 323 5 is_stmt 1 view .LVU500
 323:Core/Src/main.c ****     actual_temp = 0;
 2244              		.loc 1 323 58 is_stmt 0 view .LVU501
 2245 015e 9DF81020 		ldrb	r2, [sp, #16]	@ zero_extendqisi2
 323:Core/Src/main.c ****     actual_temp = 0;
 2246              		.loc 1 323 90 view .LVU502
 2247 0162 9DF81130 		ldrb	r3, [sp, #17]	@ zero_extendqisi2
 323:Core/Src/main.c ****     actual_temp = 0;
 2248              		.loc 1 323 94 view .LVU503
 2249 0166 1B01     		lsls	r3, r3, #4
 323:Core/Src/main.c ****     actual_temp = 0;
 2250              		.loc 1 323 69 view .LVU504
 2251 0168 43EA0233 		orr	r3, r3, r2, lsl #12
 323:Core/Src/main.c ****     actual_temp = 0;
 2252              		.loc 1 323 121 view .LVU505
 2253 016c 9DF81200 		ldrb	r0, [sp, #18]	@ zero_extendqisi2
 2254              	.LVL170:
 324:Core/Src/main.c ****     actual_temp = bmp280_compensate_T_int32(temp_raw_32);
 2255              		.loc 1 324 5 is_stmt 1 view .LVU506
 324:Core/Src/main.c ****     actual_temp = bmp280_compensate_T_int32(temp_raw_32);
 2256              		.loc 1 324 17 is_stmt 0 view .LVU507
 2257 0170 664D     		ldr	r5, .L92+32
 2258 0172 C5F80090 		str	r9, [r5]
ARM GAS  /tmp/ccAzc5t0.s 			page 77


 325:Core/Src/main.c **** 
 2259              		.loc 1 325 5 is_stmt 1 view .LVU508
 325:Core/Src/main.c **** 
 2260              		.loc 1 325 19 is_stmt 0 view .LVU509
 2261 0176 43EA1010 		orr	r0, r3, r0, lsr #4
 2262              	.LVL171:
 325:Core/Src/main.c **** 
 2263              		.loc 1 325 19 view .LVU510
 2264 017a FFF7FEFF 		bl	bmp280_compensate_T_int32
 2265              	.LVL172:
 325:Core/Src/main.c **** 
 2266              		.loc 1 325 17 discriminator 1 view .LVU511
 2267 017e 2860     		str	r0, [r5]
 327:Core/Src/main.c ****     sprintf(temp_str, "Temperature: %.2f Celsius\n\n\r", ((float)actual_temp)/100);
 2268              		.loc 1 327 5 is_stmt 1 view .LVU512
 328:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)temp_str, strlen(temp_str), 1000);
 2269              		.loc 1 328 5 view .LVU513
 328:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)temp_str, strlen(temp_str), 1000);
 2270              		.loc 1 328 59 is_stmt 0 view .LVU514
 2271 0180 07EE900A 		vmov	s15, r0	@ int
 2272 0184 F8EEE77A 		vcvt.f32.s32	s15, s15
 328:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)temp_str, strlen(temp_str), 1000);
 2273              		.loc 1 328 5 view .LVU515
 2274 0188 9FED617A 		vldr.32	s14, .L92+36
 2275 018c C7EE877A 		vdiv.f32	s15, s15, s14
 2276 0190 17EE900A 		vmov	r0, s15
 2277 0194 FFF7FEFF 		bl	__aeabi_f2d
 2278              	.LVL173:
 2279 0198 0246     		mov	r2, r0
 2280 019a 0B46     		mov	r3, r1
 2281 019c 26AD     		add	r5, sp, #152
 2282 019e 5D49     		ldr	r1, .L92+40
 2283 01a0 2846     		mov	r0, r5
 2284 01a2 FFF7FEFF 		bl	sprintf
 2285              	.LVL174:
 329:Core/Src/main.c **** 
 2286              		.loc 1 329 5 is_stmt 1 view .LVU516
 329:Core/Src/main.c **** 
 2287              		.loc 1 329 52 is_stmt 0 view .LVU517
 2288 01a6 2846     		mov	r0, r5
 2289 01a8 FFF7FEFF 		bl	strlen
 2290              	.LVL175:
 329:Core/Src/main.c **** 
 2291              		.loc 1 329 5 discriminator 1 view .LVU518
 2292 01ac 4FF47A73 		mov	r3, #1000
 2293 01b0 82B2     		uxth	r2, r0
 2294 01b2 2946     		mov	r1, r5
 2295 01b4 4046     		mov	r0, r8
 2296 01b6 FFF7FEFF 		bl	HAL_UART_Transmit
 2297              	.LVL176:
 331:Core/Src/main.c ****     UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0xF7, I2C_MEMADD_SIZE_8BIT, pressure_r
 2298              		.loc 1 331 5 is_stmt 1 view .LVU519
 332:Core/Src/main.c ****     UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0xF8, I2C_MEMADD_SIZE_8BIT, pressure_r
 2299              		.loc 1 332 5 view .LVU520
 2300 01ba 0297     		str	r7, [sp, #8]
 2301 01bc 0194     		str	r4, [sp, #4]
 2302 01be 05AD     		add	r5, sp, #20
ARM GAS  /tmp/ccAzc5t0.s 			page 78


 2303 01c0 0095     		str	r5, [sp]
 2304 01c2 2346     		mov	r3, r4
 2305 01c4 F722     		movs	r2, #247
 2306 01c6 EC21     		movs	r1, #236
 2307 01c8 3046     		mov	r0, r6
 2308 01ca FFF7FEFF 		bl	HAL_I2C_Mem_Read
 2309              	.LVL177:
 332:Core/Src/main.c ****     UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0xF8, I2C_MEMADD_SIZE_8BIT, pressure_r
 2310              		.loc 1 332 5 is_stmt 0 discriminator 1 view .LVU521
 2311 01ce 5249     		ldr	r1, .L92+44
 2312 01d0 FFF7FEFF 		bl	UART_Send_HAL_Status
 2313              	.LVL178:
 333:Core/Src/main.c ****     UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0xF9, I2C_MEMADD_SIZE_8BIT, pressure_r
 2314              		.loc 1 333 5 is_stmt 1 view .LVU522
 2315 01d4 0297     		str	r7, [sp, #8]
 2316 01d6 0194     		str	r4, [sp, #4]
 2317 01d8 0DF11503 		add	r3, sp, #21
 2318 01dc 0093     		str	r3, [sp]
 2319 01de 2346     		mov	r3, r4
 2320 01e0 F822     		movs	r2, #248
 2321 01e2 EC21     		movs	r1, #236
 2322 01e4 3046     		mov	r0, r6
 2323 01e6 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 2324              	.LVL179:
 333:Core/Src/main.c ****     UART_Send_HAL_Status(HAL_I2C_Mem_Read(&hi2c1, 0x76 << 1, 0xF9, I2C_MEMADD_SIZE_8BIT, pressure_r
 2325              		.loc 1 333 5 is_stmt 0 discriminator 1 view .LVU523
 2326 01ea 4C49     		ldr	r1, .L92+48
 2327 01ec FFF7FEFF 		bl	UART_Send_HAL_Status
 2328              	.LVL180:
 334:Core/Src/main.c **** 
 2329              		.loc 1 334 5 is_stmt 1 view .LVU524
 2330 01f0 0297     		str	r7, [sp, #8]
 2331 01f2 0194     		str	r4, [sp, #4]
 2332 01f4 0DF11603 		add	r3, sp, #22
 2333 01f8 0093     		str	r3, [sp]
 2334 01fa 2346     		mov	r3, r4
 2335 01fc F922     		movs	r2, #249
 2336 01fe EC21     		movs	r1, #236
 2337 0200 3046     		mov	r0, r6
 2338 0202 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 2339              	.LVL181:
 334:Core/Src/main.c **** 
 2340              		.loc 1 334 5 is_stmt 0 discriminator 1 view .LVU525
 2341 0206 4649     		ldr	r1, .L92+52
 2342 0208 FFF7FEFF 		bl	UART_Send_HAL_Status
 2343              	.LVL182:
 336:Core/Src/main.c ****     actual_pressure = bmp280_compensate_P_int64(pressure_raw_32);
 2344              		.loc 1 336 5 is_stmt 1 view .LVU526
 336:Core/Src/main.c ****     actual_pressure = bmp280_compensate_P_int64(pressure_raw_32);
 2345              		.loc 1 336 66 is_stmt 0 view .LVU527
 2346 020c 9DF81420 		ldrb	r2, [sp, #20]	@ zero_extendqisi2
 336:Core/Src/main.c ****     actual_pressure = bmp280_compensate_P_int64(pressure_raw_32);
 2347              		.loc 1 336 102 view .LVU528
 2348 0210 9DF81530 		ldrb	r3, [sp, #21]	@ zero_extendqisi2
 336:Core/Src/main.c ****     actual_pressure = bmp280_compensate_P_int64(pressure_raw_32);
 2349              		.loc 1 336 106 view .LVU529
 2350 0214 1B01     		lsls	r3, r3, #4
ARM GAS  /tmp/ccAzc5t0.s 			page 79


 336:Core/Src/main.c ****     actual_pressure = bmp280_compensate_P_int64(pressure_raw_32);
 2351              		.loc 1 336 77 view .LVU530
 2352 0216 43EA0233 		orr	r3, r3, r2, lsl #12
 336:Core/Src/main.c ****     actual_pressure = bmp280_compensate_P_int64(pressure_raw_32);
 2353              		.loc 1 336 137 view .LVU531
 2354 021a 9DF81600 		ldrb	r0, [sp, #22]	@ zero_extendqisi2
 2355              	.LVL183:
 337:Core/Src/main.c **** 
 2356              		.loc 1 337 5 is_stmt 1 view .LVU532
 337:Core/Src/main.c **** 
 2357              		.loc 1 337 23 is_stmt 0 view .LVU533
 2358 021e 43EA1010 		orr	r0, r3, r0, lsr #4
 2359              	.LVL184:
 337:Core/Src/main.c **** 
 2360              		.loc 1 337 23 view .LVU534
 2361 0222 FFF7FEFF 		bl	bmp280_compensate_P_int64
 2362              	.LVL185:
 337:Core/Src/main.c **** 
 2363              		.loc 1 337 21 discriminator 1 view .LVU535
 2364 0226 3F4B     		ldr	r3, .L92+56
 2365 0228 1860     		str	r0, [r3]
 339:Core/Src/main.c ****     sprintf(pressure_str, "Pressure: %.4f Pa\n\n\r",  ((float)actual_pressure)/256);
 2366              		.loc 1 339 5 is_stmt 1 view .LVU536
 340:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)pressure_str, strlen(pressure_str), 1000);
 2367              		.loc 1 340 5 view .LVU537
 340:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)pressure_str, strlen(pressure_str), 1000);
 2368              		.loc 1 340 56 is_stmt 0 view .LVU538
 2369 022a 07EE900A 		vmov	s15, r0	@ int
 2370 022e F8EE677A 		vcvt.f32.u32	s15, s15
 340:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)pressure_str, strlen(pressure_str), 1000);
 2371              		.loc 1 340 5 view .LVU539
 2372 0232 9FED3D7A 		vldr.32	s14, .L92+60
 2373 0236 67EE877A 		vmul.f32	s15, s15, s14
 2374 023a 17EE900A 		vmov	r0, s15
 2375 023e FFF7FEFF 		bl	__aeabi_f2d
 2376              	.LVL186:
 2377 0242 0246     		mov	r2, r0
 2378 0244 0B46     		mov	r3, r1
 2379 0246 3FAC     		add	r4, sp, #252
 2380 0248 3849     		ldr	r1, .L92+64
 2381 024a 2046     		mov	r0, r4
 2382 024c FFF7FEFF 		bl	sprintf
 2383              	.LVL187:
 341:Core/Src/main.c **** 
 2384              		.loc 1 341 5 is_stmt 1 view .LVU540
 341:Core/Src/main.c **** 
 2385              		.loc 1 341 56 is_stmt 0 view .LVU541
 2386 0250 2046     		mov	r0, r4
 2387 0252 FFF7FEFF 		bl	strlen
 2388              	.LVL188:
 341:Core/Src/main.c **** 
 2389              		.loc 1 341 5 discriminator 1 view .LVU542
 2390 0256 4FF47A73 		mov	r3, #1000
 2391 025a 82B2     		uxth	r2, r0
 2392 025c 2146     		mov	r1, r4
 2393 025e 4046     		mov	r0, r8
 2394 0260 FFF7FEFF 		bl	HAL_UART_Transmit
ARM GAS  /tmp/ccAzc5t0.s 			page 80


 2395              	.LVL189:
 343:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)data1, strlen(data), 1000);
 2396              		.loc 1 343 5 is_stmt 1 view .LVU543
 343:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)data1, strlen(data), 1000);
 2397              		.loc 1 343 10 is_stmt 0 view .LVU544
 2398 0264 0DF5B07C 		add	ip, sp, #352
 2399 0268 204E     		ldr	r6, .L92
 2400 026a 06F19C04 		add	r4, r6, #156
 2401 026e 6746     		mov	r7, ip
 2402 0270 CC36     		adds	r6, r6, #204
 2403              	.L89:
 2404 0272 3D46     		mov	r5, r7
 2405 0274 2068     		ldr	r0, [r4]	@ unaligned
 2406 0276 6168     		ldr	r1, [r4, #4]	@ unaligned
 2407 0278 A268     		ldr	r2, [r4, #8]	@ unaligned
 2408 027a E368     		ldr	r3, [r4, #12]	@ unaligned
 2409 027c 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 2410 027e 1034     		adds	r4, r4, #16
 2411 0280 2F46     		mov	r7, r5
 2412 0282 B442     		cmp	r4, r6
 2413 0284 F5D1     		bne	.L89
 2414 0286 2068     		ldr	r0, [r4]	@ unaligned
 2415 0288 2860     		str	r0, [r5]
 2416 028a 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2417 028c 2B71     		strb	r3, [r5, #4]
 2418 028e 2F22     		movs	r2, #47
 2419 0290 0021     		movs	r1, #0
 2420 0292 0CF13500 		add	r0, ip, #53
 2421 0296 FFF7FEFF 		bl	memset
 2422              	.LVL190:
 344:Core/Src/main.c **** 
 2423              		.loc 1 344 5 is_stmt 1 view .LVU545
 344:Core/Src/main.c **** 
 2424              		.loc 1 344 49 is_stmt 0 view .LVU546
 2425 029a 0DA8     		add	r0, sp, #52
 2426 029c FFF7FEFF 		bl	strlen
 2427              	.LVL191:
 344:Core/Src/main.c **** 
 2428              		.loc 1 344 5 discriminator 1 view .LVU547
 2429 02a0 134E     		ldr	r6, .L92+4
 2430 02a2 4FF47A73 		mov	r3, #1000
 2431 02a6 82B2     		uxth	r2, r0
 2432 02a8 58A9     		add	r1, sp, #352
 2433 02aa 3046     		mov	r0, r6
 2434 02ac FFF7FEFF 		bl	HAL_UART_Transmit
 2435              	.LVL192:
 346:Core/Src/main.c ****     Read_Acc(acc_vals);
 2436              		.loc 1 346 5 is_stmt 1 view .LVU548
 347:Core/Src/main.c **** 
 2437              		.loc 1 347 5 view .LVU549
 2438 02b0 06AC     		add	r4, sp, #24
 2439 02b2 2046     		mov	r0, r4
 2440 02b4 FFF7FEFF 		bl	Read_Acc
 2441              	.LVL193:
 349:Core/Src/main.c ****     sprintf(acc_str, "Acceleration: (%0.4f, %0.4f, %0.4f) \n\n\r", acc_vals[0], acc_vals[1], acc_va
 2442              		.loc 1 349 5 view .LVU550
 350:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)acc_str, strlen(acc_str), 1000);
ARM GAS  /tmp/ccAzc5t0.s 			page 81


 2443              		.loc 1 350 5 view .LVU551
 2444 02b8 71AD     		add	r5, sp, #452
 2445 02ba DDE90A23 		ldrd	r2, [sp, #40]
 2446 02be CDE90223 		strd	r2, [sp, #8]
 2447 02c2 DDE90823 		ldrd	r2, [sp, #32]
 2448 02c6 CDE90023 		strd	r2, [sp]
 2449 02ca DDE90623 		ldrd	r2, [sp, #24]
 2450 02ce 1849     		ldr	r1, .L92+68
 2451 02d0 2846     		mov	r0, r5
 2452 02d2 FFF7FEFF 		bl	sprintf
 2453              	.LVL194:
 351:Core/Src/main.c **** 
 2454              		.loc 1 351 5 view .LVU552
 351:Core/Src/main.c **** 
 2455              		.loc 1 351 51 is_stmt 0 view .LVU553
 2456 02d6 2846     		mov	r0, r5
 2457 02d8 FFF7FEFF 		bl	strlen
 2458              	.LVL195:
 351:Core/Src/main.c **** 
 2459              		.loc 1 351 5 discriminator 1 view .LVU554
 2460 02dc 4FF47A73 		mov	r3, #1000
 2461 02e0 82B2     		uxth	r2, r0
 2462 02e2 2946     		mov	r1, r5
 2463 02e4 3046     		mov	r0, r6
 2464 02e6 FFF7FEFF 		bl	HAL_UART_Transmit
 2465              	.LVL196:
 2466              	.LBE14:
 309:Core/Src/main.c ****   {
 2467              		.loc 1 309 9 is_stmt 1 view .LVU555
 2468 02ea CFE6     		b	.L90
 2469              	.L93:
 2470              		.align	2
 2471              	.L92:
 2472 02ec 00000000 		.word	.LANCHOR0
 2473 02f0 00000000 		.word	huart1
 2474 02f4 00000000 		.word	htim1
 2475 02f8 00000000 		.word	hi2c1
 2476 02fc 0C000000 		.word	.LC23
 2477 0300 00000000 		.word	.LC33
 2478 0304 0C000000 		.word	.LC34
 2479 0308 18000000 		.word	.LC35
 2480 030c 00000000 		.word	actual_temp
 2481 0310 0000C842 		.word	1120403456
 2482 0314 24000000 		.word	.LC36
 2483 0318 44000000 		.word	.LC37
 2484 031c 50000000 		.word	.LC38
 2485 0320 5C000000 		.word	.LC39
 2486 0324 00000000 		.word	actual_pressure
 2487 0328 0000803B 		.word	998244352
 2488 032c 68000000 		.word	.LC40
 2489 0330 80000000 		.word	.LC42
 2490              		.cfi_endproc
 2491              	.LFE144:
 2493              		.global	t_fine
 2494              		.section	.bss.t_fine,"aw",%nobits
 2495              		.align	2
 2498              	t_fine:
ARM GAS  /tmp/ccAzc5t0.s 			page 82


 2499 0000 00000000 		.space	4
 2500              		.global	actual_pressure
 2501              		.section	.bss.actual_pressure,"aw",%nobits
 2502              		.align	2
 2505              	actual_pressure:
 2506 0000 00000000 		.space	4
 2507              		.global	actual_temp
 2508              		.section	.bss.actual_temp,"aw",%nobits
 2509              		.align	2
 2512              	actual_temp:
 2513 0000 00000000 		.space	4
 2514              		.global	dig_P9
 2515              		.section	.bss.dig_P9,"aw",%nobits
 2516              		.align	1
 2519              	dig_P9:
 2520 0000 0000     		.space	2
 2521              		.global	dig_P8
 2522              		.section	.bss.dig_P8,"aw",%nobits
 2523              		.align	1
 2526              	dig_P8:
 2527 0000 0000     		.space	2
 2528              		.global	dig_P7
 2529              		.section	.bss.dig_P7,"aw",%nobits
 2530              		.align	1
 2533              	dig_P7:
 2534 0000 0000     		.space	2
 2535              		.global	dig_P6
 2536              		.section	.bss.dig_P6,"aw",%nobits
 2537              		.align	1
 2540              	dig_P6:
 2541 0000 0000     		.space	2
 2542              		.global	dig_P5
 2543              		.section	.bss.dig_P5,"aw",%nobits
 2544              		.align	1
 2547              	dig_P5:
 2548 0000 0000     		.space	2
 2549              		.global	dig_P4
 2550              		.section	.bss.dig_P4,"aw",%nobits
 2551              		.align	1
 2554              	dig_P4:
 2555 0000 0000     		.space	2
 2556              		.global	dig_P3
 2557              		.section	.bss.dig_P3,"aw",%nobits
 2558              		.align	1
 2561              	dig_P3:
 2562 0000 0000     		.space	2
 2563              		.global	dig_P2
 2564              		.section	.bss.dig_P2,"aw",%nobits
 2565              		.align	1
 2568              	dig_P2:
 2569 0000 0000     		.space	2
 2570              		.global	dig_P1
 2571              		.section	.bss.dig_P1,"aw",%nobits
 2572              		.align	1
 2575              	dig_P1:
 2576 0000 0000     		.space	2
 2577              		.global	dig_T3
ARM GAS  /tmp/ccAzc5t0.s 			page 83


 2578              		.section	.bss.dig_T3,"aw",%nobits
 2579              		.align	1
 2582              	dig_T3:
 2583 0000 0000     		.space	2
 2584              		.global	dig_T2
 2585              		.section	.bss.dig_T2,"aw",%nobits
 2586              		.align	1
 2589              	dig_T2:
 2590 0000 0000     		.space	2
 2591              		.global	dig_T1
 2592              		.section	.bss.dig_T1,"aw",%nobits
 2593              		.align	1
 2596              	dig_T1:
 2597 0000 0000     		.space	2
 2598              		.global	huart1
 2599              		.section	.bss.huart1,"aw",%nobits
 2600              		.align	2
 2603              	huart1:
 2604 0000 00000000 		.space	72
 2604      00000000 
 2604      00000000 
 2604      00000000 
 2604      00000000 
 2605              		.global	htim1
 2606              		.section	.bss.htim1,"aw",%nobits
 2607              		.align	2
 2610              	htim1:
 2611 0000 00000000 		.space	72
 2611      00000000 
 2611      00000000 
 2611      00000000 
 2611      00000000 
 2612              		.global	hi2c1
 2613              		.section	.bss.hi2c1,"aw",%nobits
 2614              		.align	2
 2617              	hi2c1:
 2618 0000 00000000 		.space	84
 2618      00000000 
 2618      00000000 
 2618      00000000 
 2618      00000000 
 2619              		.section	.rodata
 2620              		.align	2
 2621              		.set	.LANCHOR0,. + 0
 2622              	.LC1:
 2623 0000 424D5020 		.ascii	"BMP READ ERROR\012\015\000"
 2623      52454144 
 2623      20455252 
 2623      4F520A0D 
 2623      00
 2624 0011 000000   		.space	3
 2625              	.LC7:
 2626 0014 0A0D0000 		.ascii	"\012\015\000\000"
 2627              	.LC24:
 2628 0018 41434345 		.ascii	"ACCELEROMETER READ ERROR\012\015\000"
 2628      4C45524F 
 2628      4D455445 
ARM GAS  /tmp/ccAzc5t0.s 			page 84


 2628      52205245 
 2628      41442045 
 2629 0033 00000000 		.space	23
 2629      00000000 
 2629      00000000 
 2629      00000000 
 2629      00000000 
 2630 004a 0000     		.space	2
 2631              	.LC31:
 2632 004c 46343131 		.ascii	"F411 says: I'm alive\012\015\000\000"
 2632      20736179 
 2632      733A2049 
 2632      276D2061 
 2632      6C697665 
 2633              	.LC32:
 2634 0064 2D2D2D2D 		.ascii	"------------------------BMP----------------------\012"
 2634      2D2D2D2D 
 2634      2D2D2D2D 
 2634      2D2D2D2D 
 2634      2D2D2D2D 
 2635 0096 0D0000   		.ascii	"\015\000\000"
 2636 0099 000000   		.space	3
 2637              	.LC41:
 2638 009c 2D2D2D2D 		.ascii	"------------------------ACC----------------------\012"
 2638      2D2D2D2D 
 2638      2D2D2D2D 
 2638      2D2D2D2D 
 2638      2D2D2D2D 
 2639 00ce 0D0000   		.ascii	"\015\000\000"
 2640              		.text
 2641              	.Letext0:
 2642              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2643              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2644              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 2645              		.file 6 "/usr/lib/gcc/arm-none-eabi/14.2.0/include/stddef.h"
 2646              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2647              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2648              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2649              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2650              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 2651              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2652              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2653              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 2654              		.file 15 "/usr/arm-none-eabi/include/stdio.h"
 2655              		.file 16 "Core/Inc/main.h"
 2656              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2657              		.file 18 "/usr/arm-none-eabi/include/string.h"
 2658              		.file 19 "<built-in>"
ARM GAS  /tmp/ccAzc5t0.s 			page 85


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccAzc5t0.s:21     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccAzc5t0.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccAzc5t0.s:77     .text.MX_GPIO_Init:00000034 $d
     /tmp/ccAzc5t0.s:82     .text.bmp280_compensate_T_int32:00000000 $t
     /tmp/ccAzc5t0.s:88     .text.bmp280_compensate_T_int32:00000000 bmp280_compensate_T_int32
     /tmp/ccAzc5t0.s:151    .text.bmp280_compensate_T_int32:0000003c $d
     /tmp/ccAzc5t0.s:2596   .bss.dig_T1:00000000 dig_T1
     /tmp/ccAzc5t0.s:2589   .bss.dig_T2:00000000 dig_T2
     /tmp/ccAzc5t0.s:2582   .bss.dig_T3:00000000 dig_T3
     /tmp/ccAzc5t0.s:2498   .bss.t_fine:00000000 t_fine
     /tmp/ccAzc5t0.s:159    .text.bmp280_compensate_P_int64:00000000 $t
     /tmp/ccAzc5t0.s:165    .text.bmp280_compensate_P_int64:00000000 bmp280_compensate_P_int64
     /tmp/ccAzc5t0.s:402    .text.bmp280_compensate_P_int64:0000019c $d
     /tmp/ccAzc5t0.s:2540   .bss.dig_P6:00000000 dig_P6
     /tmp/ccAzc5t0.s:2547   .bss.dig_P5:00000000 dig_P5
     /tmp/ccAzc5t0.s:2554   .bss.dig_P4:00000000 dig_P4
     /tmp/ccAzc5t0.s:2561   .bss.dig_P3:00000000 dig_P3
     /tmp/ccAzc5t0.s:2568   .bss.dig_P2:00000000 dig_P2
     /tmp/ccAzc5t0.s:2575   .bss.dig_P1:00000000 dig_P1
     /tmp/ccAzc5t0.s:2519   .bss.dig_P9:00000000 dig_P9
     /tmp/ccAzc5t0.s:2526   .bss.dig_P8:00000000 dig_P8
     /tmp/ccAzc5t0.s:2533   .bss.dig_P7:00000000 dig_P7
     /tmp/ccAzc5t0.s:416    .rodata.InitBmp.str1.4:00000000 $d
     /tmp/ccAzc5t0.s:420    .text.InitBmp:00000000 $t
     /tmp/ccAzc5t0.s:426    .text.InitBmp:00000000 InitBmp
     /tmp/ccAzc5t0.s:525    .text.InitBmp:00000080 $d
     /tmp/ccAzc5t0.s:2617   .bss.hi2c1:00000000 hi2c1
     /tmp/ccAzc5t0.s:2603   .bss.huart1:00000000 huart1
     /tmp/ccAzc5t0.s:533    .rodata.UART_Send_HAL_Status.str1.4:00000000 $d
     /tmp/ccAzc5t0.s:549    .text.UART_Send_HAL_Status:00000000 $t
     /tmp/ccAzc5t0.s:555    .text.UART_Send_HAL_Status:00000000 UART_Send_HAL_Status
     /tmp/ccAzc5t0.s:577    .text.UART_Send_HAL_Status:0000000c $d
     /tmp/ccAzc5t0.s:581    .text.UART_Send_HAL_Status:00000010 $t
     /tmp/ccAzc5t0.s:671    .text.UART_Send_HAL_Status:0000006c $d
     /tmp/ccAzc5t0.s:682    .rodata.Read_Dig_Variables.str1.4:00000000 $d
     /tmp/ccAzc5t0.s:719    .text.Read_Dig_Variables:00000000 $t
     /tmp/ccAzc5t0.s:725    .text.Read_Dig_Variables:00000000 Read_Dig_Variables
     /tmp/ccAzc5t0.s:930    .text.Read_Dig_Variables:00000148 $d
     /tmp/ccAzc5t0.s:959    .rodata.Acc_LSM_Init.str1.4:00000000 $d
     /tmp/ccAzc5t0.s:973    .text.Acc_LSM_Init:00000000 $t
     /tmp/ccAzc5t0.s:979    .text.Acc_LSM_Init:00000000 Acc_LSM_Init
     /tmp/ccAzc5t0.s:1166   .text.Acc_LSM_Init:0000013c $d
     /tmp/ccAzc5t0.s:1177   .rodata.Read_Acc.str1.4:00000000 $d
     /tmp/ccAzc5t0.s:1196   .text.Read_Acc:00000000 $t
     /tmp/ccAzc5t0.s:1202   .text.Read_Acc:00000000 Read_Acc
     /tmp/ccAzc5t0.s:1439   .text.Read_Acc:00000170 $d
     /tmp/ccAzc5t0.s:1455   .text.Error_Handler:00000000 $t
     /tmp/ccAzc5t0.s:1461   .text.Error_Handler:00000000 Error_Handler
     /tmp/ccAzc5t0.s:1493   .text.MX_I2C1_Init:00000000 $t
     /tmp/ccAzc5t0.s:1498   .text.MX_I2C1_Init:00000000 MX_I2C1_Init
     /tmp/ccAzc5t0.s:1555   .text.MX_I2C1_Init:0000002c $d
     /tmp/ccAzc5t0.s:1562   .text.MX_USART1_UART_Init:00000000 $t
     /tmp/ccAzc5t0.s:1567   .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
     /tmp/ccAzc5t0.s:1621   .text.MX_USART1_UART_Init:0000002c $d
     /tmp/ccAzc5t0.s:1627   .text.MX_TIM1_Init:00000000 $t
ARM GAS  /tmp/ccAzc5t0.s 			page 86


     /tmp/ccAzc5t0.s:1632   .text.MX_TIM1_Init:00000000 MX_TIM1_Init
     /tmp/ccAzc5t0.s:1840   .text.MX_TIM1_Init:000000d8 $d
     /tmp/ccAzc5t0.s:2610   .bss.htim1:00000000 htim1
     /tmp/ccAzc5t0.s:1846   .text.SystemClock_Config:00000000 $t
     /tmp/ccAzc5t0.s:1852   .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccAzc5t0.s:1999   .text.SystemClock_Config:00000098 $d
     /tmp/ccAzc5t0.s:2005   .rodata.main.str1.4:00000000 $d
     /tmp/ccAzc5t0.s:2033   .text.main:00000000 $t
     /tmp/ccAzc5t0.s:2039   .text.main:00000000 main
     /tmp/ccAzc5t0.s:2472   .text.main:000002ec $d
     /tmp/ccAzc5t0.s:2512   .bss.actual_temp:00000000 actual_temp
     /tmp/ccAzc5t0.s:2505   .bss.actual_pressure:00000000 actual_pressure
     /tmp/ccAzc5t0.s:2495   .bss.t_fine:00000000 $d
     /tmp/ccAzc5t0.s:2502   .bss.actual_pressure:00000000 $d
     /tmp/ccAzc5t0.s:2509   .bss.actual_temp:00000000 $d
     /tmp/ccAzc5t0.s:2516   .bss.dig_P9:00000000 $d
     /tmp/ccAzc5t0.s:2523   .bss.dig_P8:00000000 $d
     /tmp/ccAzc5t0.s:2530   .bss.dig_P7:00000000 $d
     /tmp/ccAzc5t0.s:2537   .bss.dig_P6:00000000 $d
     /tmp/ccAzc5t0.s:2544   .bss.dig_P5:00000000 $d
     /tmp/ccAzc5t0.s:2551   .bss.dig_P4:00000000 $d
     /tmp/ccAzc5t0.s:2558   .bss.dig_P3:00000000 $d
     /tmp/ccAzc5t0.s:2565   .bss.dig_P2:00000000 $d
     /tmp/ccAzc5t0.s:2572   .bss.dig_P1:00000000 $d
     /tmp/ccAzc5t0.s:2579   .bss.dig_T3:00000000 $d
     /tmp/ccAzc5t0.s:2586   .bss.dig_T2:00000000 $d
     /tmp/ccAzc5t0.s:2593   .bss.dig_T1:00000000 $d
     /tmp/ccAzc5t0.s:2600   .bss.huart1:00000000 $d
     /tmp/ccAzc5t0.s:2607   .bss.htim1:00000000 $d
     /tmp/ccAzc5t0.s:2614   .bss.hi2c1:00000000 $d
     /tmp/ccAzc5t0.s:2620   .rodata:00000000 $d

UNDEFINED SYMBOLS
__aeabi_ldivmod
HAL_I2C_Mem_Read
strlen
HAL_UART_Transmit
strcat
memset
HAL_I2C_Mem_Write
__aeabi_i2d
__aeabi_dmul
__aeabi_ddiv
HAL_I2C_Init
HAL_UART_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_PWM_Start
HAL_Delay
ARM GAS  /tmp/ccAzc5t0.s 			page 87


__aeabi_f2d
sprintf
