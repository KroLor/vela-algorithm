ARM GAS  /tmp/ccuHEjgd.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"accelerometer.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/modules/sensors/accelerometer.c"
  20              		.section	.rodata.check_acc_identity.str1.4,"aMS",%progbits,1
  21              		.align	2
  22              	.LC0:
  23 0000 57484F20 		.ascii	"WHO AM I\000"
  23      414D2049 
  23      00
  24              		.section	.text.check_acc_identity,"ax",%progbits
  25              		.align	1
  26              		.global	check_acc_identity
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  31              	check_acc_identity:
  32              	.LFB134:
   1:Core/Src/modules/sensors/accelerometer.c **** #include "accelerometer.h"
   2:Core/Src/modules/sensors/accelerometer.c **** #include <stdint.h>
   3:Core/Src/modules/sensors/accelerometer.c **** #include "i2c.h"
   4:Core/Src/modules/sensors/accelerometer.c **** #include "usart.h"
   5:Core/Src/modules/sensors/accelerometer.c **** #include "communication.h"
   6:Core/Src/modules/sensors/accelerometer.c **** #include "string.h"
   7:Core/Src/modules/sensors/accelerometer.c **** 
   8:Core/Src/modules/sensors/accelerometer.c **** const uint8_t dev_address = 0b11010100; //–∞–¥—Ä–µ—Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –ø–æ –ª–∏–Ω–∏–∏ I2C
   9:Core/Src/modules/sensors/accelerometer.c **** 
  10:Core/Src/modules/sensors/accelerometer.c **** short check_acc_identity()
  11:Core/Src/modules/sensors/accelerometer.c **** {
  33              		.loc 1 11 1 view -0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 56
  36              		@ frame_needed = 0, uses_anonymous_args = 0
  37 0000 10B5     		push	{r4, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 4, -8
  40              		.cfi_offset 14, -4
  41 0002 92B0     		sub	sp, sp, #72
  42              		.cfi_def_cfa_offset 80
  12:Core/Src/modules/sensors/accelerometer.c **** 	uint16_t register_address = 0x0F; //–ê–¥—Ä–µ—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞ –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö—Ä–∞–Ω–∏—Ç—Å—è
  43              		.loc 1 12 2 view .LVU1
  44              	.LVL0:
ARM GAS  /tmp/ccuHEjgd.s 			page 2


  13:Core/Src/modules/sensors/accelerometer.c **** 	uint8_t data; //–ú–∞—Å—Å–∏–≤ –≤ –∫–æ—Ç–æ—Ä–æ–º –ú–´ –±—É–¥–µ–º —Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å —Ä–µ
  45              		.loc 1 13 2 view .LVU2
  14:Core/Src/modules/sensors/accelerometer.c **** 	uint16_t Size_ = 1; //–î–ª–∏–Ω–∞ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö, 1 –±–∞–π—Ç = 1 —Ä–µ–≥–∏—
  46              		.loc 1 14 2 view .LVU3
  15:Core/Src/modules/sensors/accelerometer.c **** 	uint32_t Timeout_ = 0xFF; //–¢–∞–π–º–∞—É—Ç, 255 –º—Å
  47              		.loc 1 15 2 view .LVU4
  16:Core/Src/modules/sensors/accelerometer.c **** 
  17:Core/Src/modules/sensors/accelerometer.c **** 	send_reg_log(HAL_I2C_Mem_Read(&hi2c1, dev_address, register_address, I2C_MEMADD_SIZE_8BIT, &data, 
  48              		.loc 1 17 2 view .LVU5
  49 0004 FF23     		movs	r3, #255
  50 0006 0293     		str	r3, [sp, #8]
  51 0008 0123     		movs	r3, #1
  52 000a 0193     		str	r3, [sp, #4]
  53 000c 0DF14702 		add	r2, sp, #71
  54 0010 0092     		str	r2, [sp]
  55 0012 0F22     		movs	r2, #15
  56 0014 D421     		movs	r1, #212
  57 0016 1748     		ldr	r0, .L6
  58 0018 FFF7FEFF 		bl	HAL_I2C_Mem_Read
  59              	.LVL1:
  60              		.loc 1 17 2 is_stmt 0 discriminator 1 view .LVU6
  61 001c 1649     		ldr	r1, .L6+4
  62 001e FFF7FEFF 		bl	send_reg_log
  63              	.LVL2:
  18:Core/Src/modules/sensors/accelerometer.c **** 	if (data == 0x69)
  64              		.loc 1 18 2 is_stmt 1 view .LVU7
  65              		.loc 1 18 11 is_stmt 0 view .LVU8
  66 0022 9DF84730 		ldrb	r3, [sp, #71]	@ zero_extendqisi2
  67              		.loc 1 18 5 view .LVU9
  68 0026 692B     		cmp	r3, #105
  69 0028 02D1     		bne	.L5
  19:Core/Src/modules/sensors/accelerometer.c **** 	{
  20:Core/Src/modules/sensors/accelerometer.c ****         //successfuly read register
  21:Core/Src/modules/sensors/accelerometer.c ****         return 1;
  70              		.loc 1 21 16 view .LVU10
  71 002a 0120     		movs	r0, #1
  72              	.L2:
  22:Core/Src/modules/sensors/accelerometer.c **** 	} else
  23:Core/Src/modules/sensors/accelerometer.c **** 	{
  24:Core/Src/modules/sensors/accelerometer.c **** 		char buffer [50] = "ACCELEROMETER READ ERROR\n\r";
  25:Core/Src/modules/sensors/accelerometer.c **** 		send_message(buffer, PRIORITY_HIGH);
  26:Core/Src/modules/sensors/accelerometer.c **** 		return 0;
  27:Core/Src/modules/sensors/accelerometer.c ****     }
  28:Core/Src/modules/sensors/accelerometer.c **** }
  73              		.loc 1 28 1 view .LVU11
  74 002c 12B0     		add	sp, sp, #72
  75              		.cfi_remember_state
  76              		.cfi_def_cfa_offset 8
  77              		@ sp needed
  78 002e 10BD     		pop	{r4, pc}
  79              	.L5:
  80              		.cfi_restore_state
  81              	.LBB2:
  24:Core/Src/modules/sensors/accelerometer.c **** 		send_message(buffer, PRIORITY_HIGH);
  82              		.loc 1 24 3 is_stmt 1 view .LVU12
  24:Core/Src/modules/sensors/accelerometer.c **** 		send_message(buffer, PRIORITY_HIGH);
  83              		.loc 1 24 8 is_stmt 0 view .LVU13
ARM GAS  /tmp/ccuHEjgd.s 			page 3


  84 0030 0DF1140C 		add	ip, sp, #20
  85 0034 114C     		ldr	r4, .L6+8
  86 0036 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
  87 0038 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
  88 003c 94E80700 		ldm	r4, {r0, r1, r2}
  89 0040 ACE80300 		stmia	ip!, {r0, r1}
  90 0044 2CF8022B 		strh	r2, [ip], #2	@ movhi
  91 0048 120C     		lsrs	r2, r2, #16
  92 004a 8CF80020 		strb	r2, [ip]
  93 004e 0024     		movs	r4, #0
  94 0050 CDF82F40 		str	r4, [sp, #47]	@ unaligned
  95 0054 CDF83340 		str	r4, [sp, #51]	@ unaligned
  96 0058 CDF83740 		str	r4, [sp, #55]	@ unaligned
  97 005c CDF83B40 		str	r4, [sp, #59]	@ unaligned
  98 0060 CDF83F40 		str	r4, [sp, #63]	@ unaligned
  99 0064 CDF84240 		str	r4, [sp, #66]	@ unaligned
  25:Core/Src/modules/sensors/accelerometer.c **** 		return 0;
 100              		.loc 1 25 3 is_stmt 1 view .LVU14
 101 0068 0221     		movs	r1, #2
 102 006a 05A8     		add	r0, sp, #20
 103 006c FFF7FEFF 		bl	send_message
 104              	.LVL3:
  26:Core/Src/modules/sensors/accelerometer.c ****     }
 105              		.loc 1 26 3 view .LVU15
  26:Core/Src/modules/sensors/accelerometer.c ****     }
 106              		.loc 1 26 10 is_stmt 0 view .LVU16
 107 0070 2046     		mov	r0, r4
 108 0072 DBE7     		b	.L2
 109              	.L7:
 110              		.align	2
 111              	.L6:
 112 0074 00000000 		.word	hi2c1
 113 0078 00000000 		.word	.LC0
 114 007c 00000000 		.word	.LANCHOR0
 115              	.LBE2:
 116              		.cfi_endproc
 117              	.LFE134:
 119              		.section	.rodata.acc_power_on.str1.4,"aMS",%progbits,1
 120              		.align	2
 121              	.LC2:
 122 0000 6374726C 		.ascii	"ctrl_meas\000"
 122      5F6D6561 
 122      7300
 123              		.section	.text.acc_power_on,"ax",%progbits
 124              		.align	1
 125              		.global	acc_power_on
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 130              	acc_power_on:
 131              	.LFB135:
  29:Core/Src/modules/sensors/accelerometer.c **** 
  30:Core/Src/modules/sensors/accelerometer.c **** short acc_power_on()
  31:Core/Src/modules/sensors/accelerometer.c **** {
 132              		.loc 1 31 1 is_stmt 1 view -0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccuHEjgd.s 			page 4


 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136 0000 00B5     		push	{lr}
 137              		.cfi_def_cfa_offset 4
 138              		.cfi_offset 14, -4
 139 0002 87B0     		sub	sp, sp, #28
 140              		.cfi_def_cfa_offset 32
  32:Core/Src/modules/sensors/accelerometer.c **** 	uint8_t acc_power_mode = 0b01000100;
 141              		.loc 1 32 2 view .LVU18
 142              		.loc 1 32 10 is_stmt 0 view .LVU19
 143 0004 4423     		movs	r3, #68
 144 0006 8DF81730 		strb	r3, [sp, #23]
  33:Core/Src/modules/sensors/accelerometer.c **** 	send_reg_log(HAL_I2C_Mem_Write(&hi2c1, dev_address, 0x10, I2C_MEMADD_SIZE_8BIT, &acc_power_mode, 1
 145              		.loc 1 33 2 is_stmt 1 view .LVU20
 146 000a FF23     		movs	r3, #255
 147 000c 0293     		str	r3, [sp, #8]
 148 000e 0123     		movs	r3, #1
 149 0010 0193     		str	r3, [sp, #4]
 150 0012 0DF11702 		add	r2, sp, #23
 151 0016 0092     		str	r2, [sp]
 152 0018 1022     		movs	r2, #16
 153 001a D421     		movs	r1, #212
 154 001c 0448     		ldr	r0, .L10
 155 001e FFF7FEFF 		bl	HAL_I2C_Mem_Write
 156              	.LVL4:
 157              		.loc 1 33 2 is_stmt 0 discriminator 1 view .LVU21
 158 0022 0449     		ldr	r1, .L10+4
 159 0024 FFF7FEFF 		bl	send_reg_log
 160              	.LVL5:
  34:Core/Src/modules/sensors/accelerometer.c **** 
  35:Core/Src/modules/sensors/accelerometer.c ****     return 0;
 161              		.loc 1 35 5 is_stmt 1 view .LVU22
  36:Core/Src/modules/sensors/accelerometer.c **** }
 162              		.loc 1 36 1 is_stmt 0 view .LVU23
 163 0028 0020     		movs	r0, #0
 164 002a 07B0     		add	sp, sp, #28
 165              		.cfi_def_cfa_offset 4
 166              		@ sp needed
 167 002c 5DF804FB 		ldr	pc, [sp], #4
 168              	.L11:
 169              		.align	2
 170              	.L10:
 171 0030 00000000 		.word	hi2c1
 172 0034 00000000 		.word	.LC2
 173              		.cfi_endproc
 174              	.LFE135:
 176              		.global	dev_address
 177              		.section	.rodata.dev_address,"a"
 180              	dev_address:
 181 0000 D4       		.byte	-44
 182              		.section	.rodata
 183              		.align	2
 184              		.set	.LANCHOR0,. + 0
 185              	.LC1:
 186 0000 41434345 		.ascii	"ACCELEROMETER READ ERROR\012\015\000"
 186      4C45524F 
 186      4D455445 
 186      52205245 
ARM GAS  /tmp/ccuHEjgd.s 			page 5


 186      41442045 
 187 001b 00000000 		.space	23
 187      00000000 
 187      00000000 
 187      00000000 
 187      00000000 
 188              		.text
 189              	.Letext0:
 190              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 191              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 192              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 193              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 194              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 195              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 196              		.file 8 "Core/Inc/modules/communication.h"
 197              		.file 9 "Core/Inc/i2c.h"
ARM GAS  /tmp/ccuHEjgd.s 			page 6


DEFINED SYMBOLS
                            *ABS*:00000000 accelerometer.c
     /tmp/ccuHEjgd.s:21     .rodata.check_acc_identity.str1.4:00000000 $d
     /tmp/ccuHEjgd.s:25     .text.check_acc_identity:00000000 $t
     /tmp/ccuHEjgd.s:31     .text.check_acc_identity:00000000 check_acc_identity
     /tmp/ccuHEjgd.s:112    .text.check_acc_identity:00000074 $d
     /tmp/ccuHEjgd.s:120    .rodata.acc_power_on.str1.4:00000000 $d
     /tmp/ccuHEjgd.s:124    .text.acc_power_on:00000000 $t
     /tmp/ccuHEjgd.s:130    .text.acc_power_on:00000000 acc_power_on
     /tmp/ccuHEjgd.s:171    .text.acc_power_on:00000030 $d
     /tmp/ccuHEjgd.s:180    .rodata.dev_address:00000000 dev_address
     /tmp/ccuHEjgd.s:183    .rodata:00000000 $d

UNDEFINED SYMBOLS
HAL_I2C_Mem_Read
send_reg_log
send_message
hi2c1
HAL_I2C_Mem_Write
